# pgbench
# Autogenerated from man page /usr/share/man/man1/pgbench.1.bz2
complete -c pgbench -o 'i
.br
--initialize' -d 'Required to invoke initialization mode'
complete -c pgbench -s F -d 'Create the pgbench_accounts, pgbench_tellers and pgbench_branches tables with…'
complete -c pgbench -o 'n
.br
--no-vacuum' -d 'Perform no vacuuming during initialization'
complete -c pgbench -o 'q
.br
--quiet' -d 'Switch logging to quiet mode, producing only one progress message per 5 secon…'
complete -c pgbench -s s -d 'Multiply the number of rows generated by the scale factor'
complete -c pgbench -l foreign-keys -d 'Create foreign key constraints between the standard tables'
complete -c pgbench -l index-tablespace -d 'Create indexes in the specified tablespace, rather than the default tablespace'
complete -c pgbench -l partition-method -d 'Create a partitioned pgbench_accounts table with NAME method'
complete -c pgbench -l partitions -d 'Create a partitioned pgbench_accounts table with NUM partitions of nearly equ…'
complete -c pgbench -l tablespace -d 'Create tables in the specified tablespace, rather than the default tablespace'
complete -c pgbench -l unlogged-tables -d 'Create all tables as unlogged tables, rather than permanent tables'
complete -c pgbench -s b -d 'Add the specified built-in script to the list of scripts to be executed'
complete -c pgbench -s c -d 'Number of clients simulated, that is, number of concurrent database sessions'
complete -c pgbench -o 'C
.br
--connect' -d 'Establish a new connection for each transaction, rather than doing it just on…'
complete -c pgbench -o 'd
.br
--debug' -d 'Print debugging output'
complete -c pgbench -s D -d 'Define a variable for use by a custom script (see below)'
complete -c pgbench -s f -d 'Add a transaction script read from filename to the list of scripts to be exec…'
complete -c pgbench -s j -d 'Number of worker threads within pgbench'
complete -c pgbench -o 'l
.br
--log' -d 'Write information about each transaction to a log file'
complete -c pgbench -s L -d 'Transactions that last more than limit milliseconds are counted and reported …'
complete -c pgbench -s M -d 'Protocol to use for submitting queries to the server: . sp'
complete -c pgbench -o 'N
.br
--skip-some-updates' -d 'Run built-in simple-update script.  Shorthand for -b simple-update'
complete -c pgbench -s P -d 'Show progress report every sec seconds'
complete -c pgbench -o 'r
.br
--report-latencies' -d 'Report the average per-statement latency (execution time from the perspective…'
complete -c pgbench -s R -d 'Execute transactions targeting the specified rate instead of running as fast …'
complete -c pgbench -o 'S
.br
--select-only' -d 'Run built-in select-only script.  Shorthand for -b select-only'
complete -c pgbench -s t -d 'Number of transactions each client runs.  Default is 10'
complete -c pgbench -s T -d 'Run the test for this many seconds, rather than a fixed number of transaction…'
complete -c pgbench -o 'v
.br
--vacuum-all' -d 'Vacuum all four standard tables before running the test'
complete -c pgbench -l aggregate-interval -d 'Length of aggregation interval (in seconds).  May be used only with -l option'
complete -c pgbench -l log-prefix -d 'Set the filename prefix for the log files created by --log'
complete -c pgbench -l progress-timestamp -d 'When showing progress (option -P), use a timestamp (Unix epoch) instead of th…'
complete -c pgbench -l random-seed -d 'Set random generator seed'
complete -c pgbench -l sampling-rate -d 'Sampling rate, used when writing data into the log, to reduce the amount of l…'
complete -c pgbench -l show-script -d 'Show the actual code of builtin script scriptname on stderr, and exit immedia…'
complete -c pgbench -s h -d 'The database server\\*(Aqs host name'
complete -c pgbench -s p -d 'The database server\\*(Aqs port number'
complete -c pgbench -s U -d 'The user name to connect as'
complete -c pgbench -o 'V
.br
--version' -d 'Print the pgbench version and exit'
complete -c pgbench -o '?
.br
--help' -d 'Show help about pgbench command line arguments, and exit'
complete -c pgbench -s i -d '(initialize) option to create and populate these tables'
complete -c pgbench -l ------------------------------- -d 'pgbench_branches        1 pgbench_tellers         10 pgbench_accounts        …'
complete -c pgbench -l initialize
complete -c pgbench -s I
complete -c pgbench -l init-steps
complete -c pgbench -l fillfactor
complete -c pgbench -s n
complete -c pgbench -l no-vacuum
complete -c pgbench -s q
complete -c pgbench -l quiet
complete -c pgbench -l scale
complete -c pgbench -l builtin
complete -c pgbench -l client
complete -c pgbench -s C
complete -c pgbench -l connect
complete -c pgbench -s d
complete -c pgbench -l debug
complete -c pgbench -l define
complete -c pgbench -l file
complete -c pgbench -l jobs
complete -c pgbench -s l
complete -c pgbench -l log
complete -c pgbench -l latency-limit
complete -c pgbench -l protocol
complete -c pgbench -s N
complete -c pgbench -l skip-some-updates
complete -c pgbench -l progress
complete -c pgbench -s r
complete -c pgbench -l report-latencies
complete -c pgbench -l rate
complete -c pgbench -s S
complete -c pgbench -l select-only
complete -c pgbench -l transactions
complete -c pgbench -l time
complete -c pgbench -s v
complete -c pgbench -l vacuum-all
complete -c pgbench -l host
complete -c pgbench -l port
complete -c pgbench -l username
complete -c pgbench -s V
complete -c pgbench -l version
complete -c pgbench -s '?'
complete -c pgbench -l help
complete -c pgbench -o parameter -d 'on the left and +parameter on the right'

