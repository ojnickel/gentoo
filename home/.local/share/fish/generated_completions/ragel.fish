# ragel
# Autogenerated from man page /usr/share/man/man1/ragel.1.bz2
complete -c ragel -s h -s H -s '?' -l help -d 'Display help and exit'
complete -c ragel -s v -d 'Print version information and exit'
complete -c ragel -s o -d 'Write output to file'
complete -c ragel -s s -d 'Print some statistics on standard error'
complete -c ragel -l error-format -d 'Print error messages using the format "file:line:column:" (default)'
complete -c ragel -s d -d 'Do not remove duplicate actions from action lists'
complete -c ragel -s I -d 'Add dir to the list of directories to search for included and imported files'
complete -c ragel -s n -d 'Do not perform state minimization'
complete -c ragel -s m -d 'Perform minimization once, at the end of the state machine compilation'
complete -c ragel -s l -d 'Minimize after nearly every operation'
complete -c ragel -s e -d 'Minimize after every operation'
complete -c ragel -s x -d 'Compile the state machines and emit an XML representation of the host data an…'
complete -c ragel -s V -d 'Generate a dot file for Graphviz'
complete -c ragel -s p -d 'Display printable characters on labels'
complete -c ragel -s L -d 'Inhibit writing of #line directives'
complete -c ragel -s S -d 'FSM specification to output'
complete -c ragel -s M -d 'Machine definition/instantiation to output'
complete -c ragel -s C -d 'The host language is C, C++, Obj-C or Obj-C++'
complete -c ragel -l asm -l gas-x86-64-sys-v -d 'GNU AS, x86_64, System V ABI ASM is generated in a code style equiv to -G2'
complete -c ragel -s D -d 'The host language is D'
complete -c ragel -s Z -d 'The host language is Go'
complete -c ragel -s J -d 'The host language is Java'
complete -c ragel -s R -d 'The host language is Ruby'
complete -c ragel -s A -d 'The host language is C#'
complete -c ragel -s O -d 'The host language is OCaml'
complete -c ragel -s U -d 'The host language is Rust'
complete -c ragel -s Y -d 'The host language is Julia'
complete -c ragel -s K -d 'The host language is Crack'
complete -c ragel -s P -d 'The host language is JavaScript'
complete -c ragel -o T0 -d '(C/D/Java/Ruby/C#) Generate a table driven FSM'
complete -c ragel -o T1 -d '(C/D/Ruby/C#) Generate a faster table driven FSM by expanding action lists in…'
complete -c ragel -o F0 -d '(C/D/Ruby/C#) Generate a flat table driven FSM'
complete -c ragel -o F1 -d '(C/D/Ruby/C#) Generate a faster flat table driven FSM by expanding action lis…'
complete -c ragel -o G0 -d '(C/D/C#) Generate a goto driven FSM'
complete -c ragel -o G1 -d '(C/D/C#) Generate a faster goto driven FSM by expanding action lists in the a…'
complete -c ragel -o G2 -d '(C/D/Go) Generate a really fast goto driven FSM by embedding action lists in …'
complete -c ragel -l nfa-conds-depth -d 'Search for high-cost conditions inside a prefix of the machine (depth D from …'
complete -c ragel -l nfa-term-check -d 'Search for condition-based general repetitions that will not function properl…'
complete -c ragel -l nfa-intermed-state-limit -d 'Report fail if number of states exceeds this during compilation'
complete -c ragel -l nfa-final-state-limit -d 'Report a fail if number states in final machine exceeds this'
complete -c ragel -l nfa-breadth-check -d 'Report breadth cost of named entry points by (and start)'
complete -c ragel -l input-histogram -d 'Input char histogram for breadth check'

