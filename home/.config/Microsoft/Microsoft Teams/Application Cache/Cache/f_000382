webpackJsonp([7],{2678:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(2679)},2679:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=n(2680),i=n(2712),s=n(2713),a=n(2715),c=n(2716),d=function(e){function t(t,n,r){var o=e.call(this,r)||this;return o.transportDependencyProviderService=t,o.logger=t.loggingService.newLogger("transportLazyLoadService"),o.initializeOnAppLaunchAndReinit(),o}return r(t,e),t.$inject=["transportDependencyProviderService","transportAgentService","orchestrationService"],t.prototype.getTransportCommandRouter=function(){return this.transportCommandRouter},t.prototype.getTransportConnectionHandler=function(){return this.transportConnectionHandler},t.prototype.getRemoteControllerConnectionHandler=function(){return this.remoteControllerConnectionHandler},t.prototype.getTransportAgentHandler=function(){return this.transportAgentHandler},t.prototype.getTransportCallKeeper=function(){return this.transportCallKeeper},t.prototype.initializeTranportConnectionHandling=function(e,t){this.transportCommandRouter=new o.TransportCommandRouter(this.transportDependencyProviderService,t,e),this.transportConnectionHandler=new i.TransportConnectionHandler(this.transportDependencyProviderService,this.transportCommandRouter),this.remoteControllerConnectionHandler=new s.RemoteControllerConnectionHandler(this.transportDependencyProviderService),this.transportAgentHandler=new a.TransportAgentHandler(this.transportCommandRouter,this.transportConnectionHandler),this.transportCallKeeper=new c.TransportCallKeeper(this.transportDependencyProviderService)},t.prototype.cleanupOnAppTeardown=function(e){this.logger.info("clean up has been called. marking commandRouter and connectionHandler as undefined."),this.transportConnectionHandler.cleanUpConnectionHandler(),this.transportCallKeeper.cleanupCallKeeper(),this.transportCommandRouter=void 0,this.transportConnectionHandler=void 0,this.remoteControllerConnectionHandler=void 0,this.transportAgentHandler=void 0,this.transportCallKeeper=void 0},t.prototype.initializeOnAppLaunchAndReinit=function(e){},t.prototype.mtmaTelemetryIdentifier=function(){return"TransportLazyLoadService"},t}(teamspace.services.MTMABase);t.TransportLazyLoadService=d,angular.module("teamspace.transportLazyLoadService",["teamspace.transportDependencyProviderService","teamspace.transportAgentService"]).service("transportLazyLoadService",d)},2680:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(2681),i=n(2694),s=n(2701),a=n(2710);!function(e){e.InitState="InitState",e.ActiveIncomingCommandsCount="ActiveIncomingCommandsCount",e.ActiveOutgoingCommandsCount="ActiveOutgoingCommandsCount",e.AckFailedCountInSession="AckFailedCountInSession",e.AckSuccessCountInSession="AckSuccessCountInSession"}(r=t.TransportCommandRouterStates||(t.TransportCommandRouterStates={}));var c=function(){function e(e,t,n){this.transportDependencyProviderService=e,this.transportStack=t,this.transportUser=n,this.ComponentName="TransportCommandRouter",this.ackSuccessCount=0,this.ackFailureCount=0,this.outgoingCommandResponseTimeout=6e4,this.incomingCommandFactory=new o.IncomingCommandFactory(e),this.outgoingCommandFactory=new i.OutgoingCommandFactory(e),this.remoteControllerIncomingCommandFactory=new s.RemoteControllerIncomingCommandFactory(e),this.remoteControllerOutgoingCommandFactory=new a.RemoteControllerOutgoingCommandFactory(e),this.activeIncomingCommands=new Map,this.activeOutgoingCommands=new Map,this.setupInitialStates(),this.constants=e.constants,this.logger=e.loggingService.newLogger(this.ComponentName),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.onIncomingCommandReceived=function(e,t){var n=this,r=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.incomingCommand.incomingCommand,null,null,null,!0);if(e&&e.command){var o=this.getNameForIncomingCommand(e.command);r.appendEventData({source:o})}else r.appendEventData({source:this.constants.scenarios.betterTogether.incomingCommand.invalidCommand});if(this.validateIncomingCommand(e,t,r)){var i=e.command;if(this.logger.info("Incoming command received. "+this.getLogPrefixIncomingRequest(e)),i===teamspace.services.IncomingCommand.Response)return this.ackIncomingCommandSuccess(t,e),void this.onResponseReceivedForOutgoingCommand(e,r);var s;if(!1!==(s=this.transportDependencyProviderService.runsInRoomRemoteControlMode?this.remoteControllerIncomingCommandFactory.createCommand(e,r):this.incomingCommandFactory.createCommand(e,r)).result)s=s,this.activeIncomingCommands.set(e.causeId,s),this.ackIncomingCommandSuccess(t,e),s.action().promise.then(function(t){n.sendResponse(e,t),n.logger.info("Sending response for "+e.command+". "+n.getLogPrefixIncomingRequest(e))}).catch(function(t){n.sendResponse(e,t,!0),n.logger.error("Error in executing command "+e.command+" - Error - "+t.errorDetails+". "+n.getLogPrefixIncomingRequest(e))});else{var a={errorCode:s.errorCode,errorDetails:s.message};this.ackIncomingCommandFailure(t,e,a)}}},e.prototype.getLogPrefixIncomingRequest=function(e){return"requestCauseId - "+(null===e||void 0===e?void 0:e.causeId)+", endPointId - "+(null===e||void 0===e?void 0:e.endpointId)+", commandName - "+(null===e||void 0===e?void 0:e.command)},e.prototype.getLogPrefixOutgoingCommand=function(e){var t;return"outgoingCommandCauseId - "+(null===e||void 0===e?void 0:e.causeId)+", endPointId - "+(null===(t=null===e||void 0===e?void 0:e.endpoint)||void 0===t?void 0:t.getEndpointId())+", commandName - "+(null===e||void 0===e?void 0:e.name)},e.prototype.ackIncomingCommandSuccess=function(e,t){var n=t.causeId,r=t.endpointId,o=e({status:200,body:JSON.stringify({})}),i=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand.success,null,null,null,!0);o!==teamspace.services.ResponseSendStatusCode.Success?(i.fail({endPointId:r,requestId:n,errorMessage:"responseSendStatusCode - "+teamspace.services.ResponseSendStatusCode[o]+" ("+o+")}",message:t.command}),this.logger.error("Failed to send ack for the incoming command - result: "+o+". "+this.getLogPrefixIncomingRequest(t))):(i.stop({endPointId:r,requestId:n,message:t.command}),this.logger.info("Ack sent for incoming command. "+this.getLogPrefixIncomingRequest(t)))},e.prototype.ackIncomingCommandFailure=function(e,t,n){var r=t.causeId,o=t.endpointId,i=e({status:300,body:n?JSON.stringify(n):JSON.stringify({})}),s=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand.failure,null,null,null,!0);i!==teamspace.services.ResponseSendStatusCode.Success?(s.fail({endPointId:o,requestId:r,errorMessage:"responseSendStatusCode - "+teamspace.services.ResponseSendStatusCode[i]+" ("+i+")}",message:t.command}),this.logger.error("Failed to send failure for the incoming command - result: "+i+". "+this.getLogPrefixIncomingRequest(t))):(s.stop({endPointId:o,requestId:r,message:t.command}),this.logger.info("Failed-Ack-response sent for incoming command. "+this.getLogPrefixIncomingRequest(t)))},e.prototype.validateIncomingCommand=function(e,t,n){var r=e.causeId,o=e.endpointId;if(!this.transportDependencyProviderService.canInitializeTransport())return this.logger.error("ECS not enabled. Received incoming command "+e.command+". "+this.getLogPrefixIncomingRequest(e)),n.fail({endPointId:o,requestId:r,errorMessage:this.constants.transportTelemetryErrorCode.incomingCommand.featureDisabled}),!1;if(!e)return this.logger.error("Invalid transport command request. "+this.getLogPrefixIncomingRequest(e)),n.fail({endPointId:o,requestId:r,errorMessage:this.constants.transportTelemetryErrorCode.incomingCommand.invalidCommandRequest}),!1;var i=this.transportDependencyProviderService.callingAgentsService,s=JSON.parse(e.commandDetails);if(s.targetEndpointId&&i.getRegistrationId()!==s.targetEndpointId){this.logger.error("Incoming commmand is not meant for this endpoint id. own endpointId - "+i.getRegistrationId()+", target endpointId - "+(s.targetEndpointId||"")+". "+this.getLogPrefixIncomingRequest(e));var a={errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.incorrectEndpointId};return n.fail({endPointId:o,requestId:r,errorMessage:a.errorCode,message:"callingEndpointId - "+i.getRegistrationId()+"; targetEndpointId - "+(s.targetEndpointId||"")}),this.ackIncomingCommandFailure(t,e,a),!1}return!0},e.prototype.cleanupIncomingCommand=function(e){var t=this.activeIncomingCommands.get(e);t&&(this.activeIncomingCommands.delete(e),t=void 0)},e.prototype.sendResponse=function(e,t,n){var r=this;void 0===n&&(n=!1);var o=n?400:200,i=e.causeId;if(this.activeIncomingCommands.get(i)){if(t){t.statusCode=o,t.requestCauseId=i;var s=this.sendOutgoingCommand(teamspace.services.OutgoingCommand.Response,t,e.endpointId);s?s.promise.then(function(t){r.logger.info("Response completed. "+r.getLogPrefixIncomingRequest(e))}):this.logger.error("Response command not created. "+this.getLogPrefixIncomingRequest(e))}this.cleanupIncomingCommand(i)}},e.prototype.sendOutgoingCommand=function(e,t,n){var r,o,i=this,s=this.getNameForOutgoingCommand(e),a=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.outgoingCommand.outgoingCommand,null,null,null,!0);a.appendEventData({source:s});var c=this.transportDependencyProviderService.isCallingRelatedCommand(e);if(!this.transportDependencyProviderService.canInitializeTransport()){m={errorDetails:"FF not enabled for outgoing command "+e,errorCode:this.constants.transportTelemetryErrorCode.outgoingCommand.featureDisabled,statusCode:400,salt:[-1],requestCauseId:"-1"};return a.fail({errorMessage:m.errorCode,endPointId:n||(null===(r=this.transportDependencyProviderService.getPairedAndActiveEndpoint(c))||void 0===r?void 0:r.endPointId),message:m.errorDetails}),this.logger.error(m.errorDetails),(p=this.transportDependencyProviderService.$q.defer()).reject(m),p}var d=this.getIBTTransportEndpoint(n,c,!1);if(d&&this.isSessionEstablishedWithEndpoint(d)||(d=this.getIBTTransportEndpoint(n,c,!0)),!d&&!this.transportDependencyProviderService.runsInRoomRemoteControlMode){m={errorDetails:"Outgoing Command not created for "+e+". No available endpoint to send the command to for endpointId - "+n,errorCode:this.constants.transportTelemetryErrorCode.outgoingCommand.endpointNotAvailable,statusCode:400,salt:[-1],requestCauseId:"-1"};return a.fail({errorMessage:m.errorCode,endPointId:n||(null===(o=this.transportDependencyProviderService.getPairedAndActiveEndpoint(c))||void 0===o?void 0:o.endPointId),message:m.errorDetails}),this.logger.error(m.errorDetails),(p=this.transportDependencyProviderService.$q.defer()).reject(m),p}this.transportDependencyProviderService.runsInRoomRemoteControlMode&&this.logger.warn("Running temporary workaround for room remote until <Task 1203890: Integration of Slimcore Cross Account> gets checked in. "),t.targetEndpointId=d.getEndpointId();var l;if(!(l=this.transportDependencyProviderService.runsInRoomRemoteControlMode?this.remoteControllerOutgoingCommandFactory.createCommand(e,t,d,a):this.outgoingCommandFactory.createCommand(e,t,d,a))){var m={errorDetails:"Command not created for "+e+". Not compatible or implemented",errorCode:this.constants.transportTelemetryErrorCode.outgoingCommand.invalidCommand,statusCode:400,salt:[-1],requestCauseId:"-1"};a.fail({errorMessage:m.errorCode,endPointId:t.targetEndpointId,message:m.errorDetails}),this.logger.error(m.errorDetails);var p=this.transportDependencyProviderService.$q.defer();return p.reject(m),p}return this.activeOutgoingCommands.set(l.causeId,l),this.logger.info("Command added to the active outgoing commands. "+l.causeId+". Name - "+l.name+" Size is - "+this.activeOutgoingCommands.size+". "+this.getLogPrefixOutgoingCommand(l)),l.onCommandReadyToSend.promise.then(function(n){var r=i.createBTTOutgoingCommandListener(a);l.commandResponseListener=r;var o=t?JSON.stringify(t):"";if(i.isSessionEstablishedWithEndpoint(l.endpoint)||i.transportDependencyProviderService.runsInRoomRemoteControlMode){s="[sendOutgoingCommand] command name - "+e+" with details "+o+". "+i.getLogPrefixOutgoingCommand(l);i.logger.info(s),l.endpoint.sendCommand(l.causeId,e,o,r)}else{var s="[sendOutgoingCommand] session setup, command name - "+e+" with details "+o+". "+i.getLogPrefixOutgoingCommand(l);i.logger.info(s),l.endpoint.setupSession(l.causeId,e,o,r)}setTimeout(function(){if(l.name!==teamspace.services.OutgoingCommand.CreateAndStartCall&&l.name!==teamspace.services.OutgoingCommand.DialNumber||!l.acknowledgementReceived){if(-1!==i.cleanupOutgoingCommand(l.causeId)){var t={errorDetails:"no response received for outgoing command with name - "+e+" within threshold time. acknowledgement received - "+l.acknowledgementReceived,errorCode:l.acknowledgementReceived?i.constants.transportTelemetryErrorCode.outgoingCommand.timeoutWithAck:i.constants.transportTelemetryErrorCode.outgoingCommand.timeoutWithoutAck,statusCode:400,salt:[-1],requestCauseId:l.causeId};l.onResponseReceived.reject(t),i.logger.error(t.errorDetails+". "+i.getLogPrefixOutgoingCommand(l))}}else setTimeout(function(){if(-1!==i.cleanupOutgoingCommand(l.causeId)){var t={errorDetails:"no response received for outgoing command with name - "+e+" within threshold time. acknowledgement received - "+l.acknowledgementReceived,errorCode:i.constants.transportTelemetryErrorCode.outgoingCommand.timeoutWithAck,statusCode:400,salt:[-1],requestCauseId:l.causeId};l.onResponseReceived.reject(t),i.logger.error(t.errorDetails+". "+i.getLogPrefixOutgoingCommand(l))}},2*i.outgoingCommandResponseTimeout)},i.outgoingCommandResponseTimeout)}).catch(function(e){var t={errorDetails:e,errorCode:i.constants.transportTelemetryErrorCode.outgoingCommand.operationFailed,statusCode:400,salt:[-1],requestCauseId:l.causeId};l.onResponseReceived.reject(t),i.cleanupOutgoingCommand(l.causeId)}),l.onResponseReceived},e.prototype.isSessionEstablishedWithEndpoint=function(e){return!!this.transportDependencyProviderService.getPairedAndActiveEndpoint(!1)&&!!e&&e.getEndpointState()==teamspace.services.EndpointState.Connected},e.prototype.startSession=function(e){this.logger.info("starting session with endpoint with a force discover."),this.getIBTTransportEndpoint(e,!1,!0,!0)},e.prototype.endSession=function(e){this.logger.info("ending session with endpoint without a force discover.");var t=this.getIBTTransportEndpoint(e,!1,!1);t&&(t.setSessionEstablished(!1),this.ackFailureCount=0,this.ackSuccessCount=0)},e.prototype.getStates=function(){return this.states.set(r.ActiveOutgoingCommandsCount,this.activeOutgoingCommands.size),this.states.set(r.ActiveIncomingCommandsCount,this.activeIncomingCommands.size),this.states.set(r.AckFailedCountInSession,this.ackFailureCount),this.states.set(r.AckSuccessCountInSession,this.ackSuccessCount),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(r.InitState,teamspace.services.ITransportComponentState.Uninitialized)},e.prototype.onResponseReceivedForOutgoingCommand=function(e,t){var n=JSON.parse(e.commandDetails);if(!n.requestCauseId)return this.logger.error("Request cause id not found with the response. "+this.getLogPrefixIncomingRequest(e)),void t.fail({endPointId:e.endpointId,requestId:e.causeId,errorMessage:this.constants.transportTelemetryErrorCode.outgoingCommand.response.nullRequestId,message:"causeIdForOutgoingCommand - "+n.requestCauseId});var r=this.activeOutgoingCommands.get(n.requestCauseId);if(!r)return this.logger.error("No outgoing command found with the requestCauseId "+n.requestCauseId+" or response not required. "+this.getLogPrefixIncomingRequest(e)),void t.fail({endPointId:e.endpointId,requestId:e.causeId,errorMessage:this.constants.transportTelemetryErrorCode.outgoingCommand.response.noOutgoingCommand,message:"causeIdForOutgoingCommand - "+n.requestCauseId});t.stop({endPointId:e.endpointId,requestId:e.causeId,message:"causeIdForOutgoingCommand - "+n.requestCauseId+"; statusCode - "+n.statusCode}),200!==n.statusCode?(this.logger.error("response is not OK for command name - "+r.name+", status code- "+n.statusCode+" and error details - "+n.errorDetails+". "+this.getLogPrefixIncomingRequest(e)),r.onResponseReceived.reject(n)):(this.logger.info("response resolved for outgoing command name - "+r.name+". "+this.getLogPrefixIncomingRequest(e)),r.onResponseReceived.resolve(n)),this.cleanupOutgoingCommand(n.requestCauseId)},e.prototype.cleanupOutgoingCommand=function(e){var t=this.activeOutgoingCommands.get(e);if(t){t.commandResponseListener&&t.commandResponseListener.dispose(),this.logger.info("Command with causeid - "+e+" cleaned up. Name - "+t.name+" Size is - "+this.activeOutgoingCommands.size+". "+this.getLogPrefixOutgoingCommand(t));var n=t.startTime;if(this.activeOutgoingCommands.delete(e),t=void 0,n)return(new Date).getTime()-n.getTime()}return-1},e.prototype.createBTTOutgoingCommandListener=function(e){var t=this,n=this.transportStack.createOutgoingCommandResponse();return n.on("request-succeeded",function(e){var n=e.causeId,r=e.responseBody;t.ackSuccessCount++,t.logger.info("Received transport response for "+n+".");var o=t.activeOutgoingCommands.get(n);if(o){o.acknowledgementReceived=!0;var i=r?JSON.parse(r):void 0;if(o.commandDetails.companionResponseRequired)t.logger.info("Command acknowledged by companion device,command name - "+o.name+", requires response from device. "+t.getLogPrefixOutgoingCommand(o));else{o.onResponseReceived.resolve(i);var s=t.cleanupOutgoingCommand(n);t.logger.info("Outgoing command does not need response,command name - "+o.name+" time taken is "+s+". "+t.getLogPrefixOutgoingCommand(o))}}else t.logger.error("No valid outgoing command in request-succeeded. causeId - "+(e.causeId?e.causeId:"causeID not present"))}),n.on("request-failed",function(n){var r=n.causeId,o=n.errorCode,i=n.errorDetails;t.ackFailureCount++,t.logger.info("Received transport response for "+r+". errorCode - "+o);var s=t.activeOutgoingCommands.get(r);if(s){if(!s.isRetry){var a=s.startTime,c=0;a&&(c=(new Date).getTime()-a.getTime());var d="received error response for outgoing command name - "+s.name+", causeId "+r+", errorCode - "+o+", time taken is "+c;t.logger.error(d+". "+t.getLogPrefixOutgoingCommand(s));var l=JSON.stringify(s.commandDetails);s.isRetry=!0;var m=s.endpoint.getEndpointId(),p=t.getIBTTransportEndpoint(m,t.transportDependencyProviderService.isCallingRelatedCommand(s.name),!0);s.endpoint=p;var g=t.transportDependencyProviderService.utilityService.generateUUID();return s.causeId=g,t.activeOutgoingCommands.delete(r),t.activeOutgoingCommands.set(g,s),s.commandResponseListener&&s.commandResponseListener.dispose(),s.commandResponseListener=t.createBTTOutgoingCommandListener(e),t.logger.error("First attempt for command failed. Retry-ing command "+s.name+", causeId "+r+" with new causeid "+g+". "+t.getLogPrefixOutgoingCommand(s)),void p.setupSession(s.causeId,s.name,l,s.commandResponseListener)}s.acknowledgementReceived=!0;var v=i?JSON.parse(i):"";(i=v.phrase||""+v.subCode||"")||(i="errorCode is "+o);var u={requestCauseId:r,statusCode:o,errorDetails:i,errorCode:o.toString(),salt:[-1]};s.onResponseReceived.reject(u);var h="Failed on second attempt. causeId "+r+", errorDetails - "+i+", errorCode - "+o+", time taken is "+t.cleanupOutgoingCommand(r);t.logger.error(h+". "+t.getLogPrefixOutgoingCommand(s))}else t.logger.error("No valid outgoing command in request-failed. causeId - "+(n.causeId?n.causeId:"causeID not present"))}),n},e.prototype.getIBTTransportEndpoint=function(e,t,n,r){if(void 0===n&&(n=!1),void 0===r&&(r=!1),!e){if(this.logger.info("endpoint id is not given, trying to get it from pairedAndActive Endpoint"),!(i=this.transportDependencyProviderService.getPairedAndActiveEndpoint(t)))return this.logger.error("There is no active paired device to send the command."),null;e=i.endPointId}this.logger.info("trying to get endpoint from transport user for endpointid - "+e);var o;if(n&&!this.transportDependencyProviderService.runsInRoomRemoteControlMode){o=this.transportUser.discover().find(function(t){return t.getEndpointId()===e}),this.logger.info("endpoints retrieved using discover(). "+!!o);var i=this.transportDependencyProviderService.getPairedAndActiveEndpoint(t);o&&(i&&i.endPointId==e||r)&&o.setSessionEstablished(!0)}else this.transportDependencyProviderService.runsInRoomRemoteControlMode&&this.logger.warn("Running temporary workaround for room remote until <Task 1203890: Integration of Slimcore Cross Account> gets checked in. "),o=this.transportUser.getEndpoints().find(function(t){return t.getEndpointId()===e}),this.logger.info("endpoints retrieved using getEndpoints(). "+!!o);return o},e.prototype.getNameForIncomingCommand=function(e){switch(e){case teamspace.services.IncomingCommand.Response:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.response;case teamspace.services.IncomingCommand.Broadcast:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.broadcast;case teamspace.services.IncomingCommand.Pair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.pair;case teamspace.services.IncomingCommand.Unpair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unpair;case teamspace.services.IncomingCommand.Autopair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.autoPair;case teamspace.services.IncomingCommand.Locked:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingLock;case teamspace.services.IncomingCommand.Unlocked:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingUnlock;case teamspace.services.IncomingCommand.ReplyOnDesktop:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.replyFromDesktop;case teamspace.services.IncomingCommand.OpenFileOnDesktop:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openFile;case teamspace.services.IncomingCommand.UpdateEndpoint:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.updateEndpoint;case teamspace.services.IncomingCommand.OpenShare:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openShare;case teamspace.services.IncomingCommand.StartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startcall;case teamspace.services.IncomingCommand.EndCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.endcall;case teamspace.services.IncomingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.mute;case teamspace.services.IncomingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unmute;case teamspace.services.IncomingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startvideo;case teamspace.services.IncomingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopvideo;case teamspace.services.IncomingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startaudio;case teamspace.services.IncomingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopaudio;case teamspace.services.IncomingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.holdcall;case teamspace.services.IncomingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unholdcall;case teamspace.services.IncomingCommand.ReportProblem:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.reportProblem;default:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.invalidCommand}},e.prototype.getNameForOutgoingCommand=function(e){switch(e){case teamspace.services.OutgoingCommand.Response:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.response;case teamspace.services.OutgoingCommand.KeepAlive:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.keepAlive;case teamspace.services.OutgoingCommand.Unpair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unpair;case teamspace.services.OutgoingCommand.Lock:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingLock;case teamspace.services.OutgoingCommand.Unlock:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingUnlock;case teamspace.services.OutgoingCommand.JoinCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.joincall;case teamspace.services.OutgoingCommand.StartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startcall;case teamspace.services.OutgoingCommand.CreateAndStartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.createandstartcall;case teamspace.services.OutgoingCommand.DialNumber:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.dialNumber;case teamspace.services.OutgoingCommand.EndCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.endcall;case teamspace.services.OutgoingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.mute;case teamspace.services.OutgoingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unmute;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.holdcall;case teamspace.services.OutgoingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unholdcall;case teamspace.services.OutgoingCommand.ReportProblem:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.reportProblem;default:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.invalidCommand}},e}();t.TransportCommandRouter=c},2681:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2682),o=n(2683),i=n(2684),s=n(2685),a=n(2686),c=n(2687),d=n(2688),l=n(2689),m=n(2690),p=n(2691),g=n(2692),v=n(2693),u=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("IncomingCommandFactory")}return e.prototype.createCommand=function(e,t){var n=e.command.toLowerCase(),u=JSON.parse(e.commandDetails),h=e.endpointId,C=e.causeId,f=this.shouldCreateCommand(n,u,h,C,t);if(!f.result)return f;switch(n){case teamspace.services.IncomingCommand.Broadcast:return new r.BroadcastCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.Pair:return new o.CompanionPairCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.Unpair:return new i.UnpairCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.Autopair:return new s.AutopairCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.Locked:return new a.LockedCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.Unlocked:return new c.UnlockedCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.ReplyOnDesktop:return new d.ReplyFromDesktopCommand(u,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.OpenFileOnDesktop:return new l.OpenFileCommand(u,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.UpdateEndpoint:return new m.UpdateEndpointCommand(u,h,C,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.OpenShare:return new p.OpenShareCommand(u,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.StartCall:return new g.StartCallCommand(u,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.EndCall:return new g.EndCallCommand(u,this.transportDependencyProviderService,t);case teamspace.services.IncomingCommand.StartAudio:case teamspace.services.IncomingCommand.StopAudio:case teamspace.services.IncomingCommand.Mute:case teamspace.services.IncomingCommand.Unmute:case teamspace.services.IncomingCommand.StartVideo:case teamspace.services.IncomingCommand.StopVideo:case teamspace.services.IncomingCommand.HoldCall:case teamspace.services.IncomingCommand.UnholdCall:return new g.BaseCallToggleStateCommand(u,this.transportDependencyProviderService,n,t);case teamspace.services.IncomingCommand.ReportProblem:return new v.ReportProblemIncomingCommand(u,this.transportDependencyProviderService,t);default:return t.fail({errorMessage:"errorCode - "+this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidCommand,endPointId:h,requestId:C,message:"commandName - "+n}),{result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidCommand}}},e.prototype.shouldCreateCommand=function(e,t,n,r,o){var i=this.transportDependencyProviderService.getTransportConnectionHandler().getAllPairedDevices();if(!(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Autopair||e===teamspace.services.IncomingCommand.ReportProblem||!!i&&i.find(function(e){return e.endPointId===n}))){c={result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired};return this.logger.error(c.errorCode),o.fail({errorMessage:"errorCode - "+c.errorCode,endPointId:n,requestId:r}),c}if(!(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.ReportProblem||this.transportDependencyProviderService.getTransportConnectionHandler().verifySalt(t))){c={result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidSalt};return this.logger.error(c.errorCode),o.fail({errorMessage:"errorCode - "+c.errorCode,endPointId:n,requestId:r}),c}var s=!!this.transportDependencyProviderService.getPairedAndActiveEndpoint(!1);if(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Autopair||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.Locked||e===teamspace.services.IncomingCommand.Unlocked||e===teamspace.services.IncomingCommand.UpdateEndpoint||e===teamspace.services.IncomingCommand.ReportProblem||s||this.transportDependencyProviderService.isCallingRelatedCommand(e)){var a=this.meetingsAllowed(e,t);return a.result||o.fail({errorMessage:"errorCode - "+a.errorCode+"; errorMsg - "+a.message,endPointId:n,requestId:r}),a}var c={result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.pairedButNotConnected},d="Cannot execute command with name - "+e;return this.logger.error(d),o.fail({errorMessage:"errorCode - "+c.errorCode,endPointId:n,requestId:r}),c},e.prototype.meetingsAllowed=function(e,t){var n,r=this.transportDependencyProviderService.isCallingRelatedCommand(e),o=t;return e===teamspace.services.IncomingCommand.StartCall&&this.transportDependencyProviderService.appStateService.machineState==teamspace.services.MachineState.MachineLocked?(this.logger.error("start call command received, but machine is in locked state - ignore command"),n={result:!1,message:"Incoming StartCall ignored. Machine locked",errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.machinestateislocked}):(r?o.conversationId||o.pstnMri?n=this.transportDependencyProviderService.isConnectedToTransportEndpointForConversation({conversationId:o.conversationId,pstnMri:o.pstnMri}):(n={result:!1,message:"conversationId is null, command name - "+e,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty},this.logger.error("errorCode - "+n.errorCode+", errorDetails - "+n.message)):n={result:!0,message:""},n)},e}();t.IncomingCommandFactory=u},2682:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n,r,o){this.commandDetails=e,this.endpointId=t,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o,this.commandDetails=e}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,o=t.resources,i=t.$translate,s=t.utilityService;this.responseDeferred=n.defer();var a=this.transportDependencyProviderService.getTransportConnectionHandler();return a.checkProximity(this.endpointId,this.commandDetails.endpointSignature).promise.then(function(t){if(t){var n=s.getDesktopEnvironmentHostName()||i.instant(o.strings.meeting_unknown_status_text),c=r({deviceName:n},a.getResponseDetails());e.incomingCommandReceivedScenario.stop({endPointId:e.endpointId,requestId:e.requestCauseId,message:"clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.resolve(c)}else{c=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.broadcast.notInProximity},a.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:c.errorCode,endPointId:e.endpointId,requestId:e.requestCauseId,message:"clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.reject(c)}}).catch(function(t){var n=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.broadcast.errorInCheckingProximity,errorDetails:t},a.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:n.errorCode,endPointId:e.endpointId,requestId:e.requestCauseId,message:"errorMsg - "+n.errorDetails+"; clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.reject(n)}),this.responseDeferred},e}();t.BroadcastCommand=o},2683:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});!function(e){e.RejectedByUser="REJECTED_BY_USER",e.AcceptedByUser="ACCEPTED_BY_USER",e.RejectedByTimeout="REJECTED_BY_TIMEOUT"}(t.DialogResponse||(t.DialogResponse={}));var o=function(){function e(e,t,n,r,o){this.commandDetails=e,this.endpointId=t,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,o=t.$translate,i=t.$timeout,s=t.resources,a=t.dialogService;this.responseDeferred=n.defer();var c=this.transportDependencyProviderService.getTransportConnectionHandler(),d=n.defer();return c.verifySalt(this.commandDetails)?d.resolve(!0):d=c.checkProximity(this.endpointId,this.commandDetails.endpointSignature),d.promise.then(function(t){if(t){var n="REJECTED_BY_USER",d={okButtonText:o.instant(s.strings.better_together_pair_button),closeButtonText:o.instant(s.strings.better_together_cancel_button),confirmMessageTitle:o.instant(s.strings.better_together_pair_title),confirmMessageHtmlBody:o.instant(s.strings.better_together_pair_message,{deviceName:e.commandDetails.deviceName}),callback:function(){n="ACCEPTED_BY_USER",e.onUserResponse(n)},preCloseCallback:function(t){"ACCEPTED_BY_USER"!=t&&("REJECTED_BY_TIMEOUT"==t?e.onUserResponse(t):e.onUserResponse("REJECTED_BY_USER"))}},l=a.open(e.transportDependencyProviderService.constants.dialogs.confirmDialog,d);i(function(){l.close("REJECTED_BY_TIMEOUT")},5e4,!1)}else{var m=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.pair.notInProximity},c.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:m.errorCode,endPointId:e.endpointId,requestId:e.requestCauseId,message:"clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.reject(m)}}).catch(function(t){var n=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.pair.errorInCheckingProximity,errorDetails:t},c.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:n.errorCode,endPointId:e.endpointId,requestId:e.requestCauseId,message:"errorMsg - "+n.errorDetails+"; clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.reject(n)}),this.responseDeferred},e.prototype.onUserResponse=function(e,t){var n=this.transportDependencyProviderService.getTransportConnectionHandler(),o=r({accepted:"ACCEPTED_BY_USER"==e},n.getResponseDetails());if("ACCEPTED_BY_USER"==e){var i={endPointId:this.endpointId,deviceName:this.commandDetails.deviceName,connectionStatus:teamspace.services.PairedConnectionStatus.Connected,clientType:this.commandDetails.clientType,clientVersion:this.commandDetails.clientVersion,endpointSignature:this.commandDetails.endpointSignature};this.incomingCommandReceivedScenario.stop({endPointId:this.endpointId,requestId:this.requestCauseId,message:"message - "+e+"; clientType - "+this.commandDetails.clientType+"; clientVersion - "+this.commandDetails.clientVersion}),n.onNewDevicePaired(i),this.responseDeferred.resolve(o)}else o.accepted=!1,o.errorCode=e,this.incomingCommandReceivedScenario.stop({endPointId:this.endpointId,requestId:this.requestCauseId,message:"message - "+e+"; clientType - "+this.commandDetails.clientType+"; clientVersion - "+this.commandDetails.clientVersion}),this.responseDeferred.reject(o)},e}();t.CompanionPairCommand=o},2684:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.commandDetails=e,this.endPointId=t,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var t=this.transportDependencyProviderService.getTransportConnectionHandler(),n=t.getResponseDetails();return t.onDeviceUnpaired(this.endPointId)?(this.incomingCommandReceivedScenario.stop({endPointId:this.endPointId,requestId:this.requestCauseId}),this.responseDeferred.resolve(n)):(n.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired,this.incomingCommandReceivedScenario.fail({errorMessage:n.errorCode,endPointId:this.endPointId,requestId:this.requestCauseId}),this.responseDeferred.reject(n)),this.responseDeferred},e}();t.UnpairCommand=r},2685:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n,r,o){this.commandDetails=e,this.endpointId=t,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o,this.commandDetails=e}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,o=t.settingsService,i=t.constants;this.responseDeferred=n.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler();if(!!o.valueAsBoolean(i.settings.names.enableBetterTogetherEndpointSignature)){var a={endPointId:this.endpointId};if(this.commandDetails.endpointSignature){var c={deviceName:this.commandDetails.deviceName,clientType:this.commandDetails.clientType,clientVersion:this.commandDetails.clientVersion,endpointSignature:this.commandDetails.endpointSignature};a=r(r({},a),c)}s.onUpdateEndpoint(this.endpointId,a)}return s.checkProximity(this.endpointId,this.commandDetails.endpointSignature).promise.then(function(t){if(t){var n=s.reconnect(e.endpointId,!1);if(n.result)e.incomingCommandReceivedScenario.stop({endPointId:e.endpointId,requestId:e.requestCauseId,message:"clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.resolve(s.getResponseDetails());else{o=r({errorCode:n.errorCode},s.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:o.errorCode,message:"clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion,endPointId:e.endpointId,requestId:e.requestCauseId}),e.responseDeferred.reject(o)}}else{var o=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.autoPair.notInProximity},s.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:o.errorCode,message:"clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion,endPointId:e.endpointId,requestId:e.requestCauseId}),e.responseDeferred.reject(o)}}).catch(function(t){var n=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.autoPair.errorInCheckingProximity,errorDetails:t},s.getResponseDetails());e.incomingCommandReceivedScenario.fail({errorMessage:n.errorCode,endPointId:e.endpointId,requestId:e.requestCauseId,message:"errorMsg - "+n.errorDetails+"; clientType - "+e.commandDetails.clientType+"; clientVersion - "+e.commandDetails.clientVersion}),e.responseDeferred.reject(n)}),this.responseDeferred},e}();t.AutopairCommand=o},2686:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n,r,o){this.commandDetails=e,this.endPointId=t,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var t=this.transportDependencyProviderService.getTransportConnectionHandler(),n=t.getResponseDetails();return t.onDeviceLocked(this.endPointId)?(this.incomingCommandReceivedScenario.stop({endPointId:this.endPointId,requestId:this.requestCauseId}),this.responseDeferred.resolve(n)):(n=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired},n),this.incomingCommandReceivedScenario.fail({errorMessage:n.errorCode,endPointId:this.endPointId,requestId:this.requestCauseId}),this.responseDeferred.reject(n)),this.responseDeferred},e}();t.LockedCommand=o},2687:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.commandDetails=e,this.endPointId=t,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var t=this.transportDependencyProviderService.getTransportConnectionHandler(),n=t.getResponseDetails();return t.onDeviceUnlocked(this.endPointId)?(this.incomingCommandReceivedScenario.stop({endPointId:this.endPointId,requestId:this.requestCauseId}),this.responseDeferred.resolve(n)):(n.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired,this.incomingCommandReceivedScenario.fail({errorMessage:n.errorCode,endPointId:this.endPointId,requestId:this.requestCauseId}),this.responseDeferred.reject(n)),this.responseDeferred},e}();t.UnlockedCommand=r},2688:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,r=t.callingNavigationService,o=t.channelService,i=t.multiWindowService;this.responseDeferred=n.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();if(this.commandDetails.conversationId){var a=o.getChannelByObjectId(this.commandDetails.conversationId);i.enabled&&!a?i.openWindow(new teamspace.services.ChatChildWindowParams(this.commandDetails.conversationId),"ReplyFromDesktopCommand").then(function(t){e.incomingCommandReceivedScenario.stop({message:"multi_window"}),e.responseDeferred.resolve(s)}).catch(function(t){s.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.replyFromDesktop.multiwindowError,s.errorDetails="error in opening new window with details - "+t,e.incomingCommandReceivedScenario.fail({message:s.errorCode,message1:s.errorDetails}),e.responseDeferred.reject(s)}):("0"==this.commandDetails.rootMessageId.toString()?r.navigateToConversation(this.commandDetails.conversationId):r.navigateToConversation(this.commandDetails.conversationId,this.commandDetails.rootMessageId.toString())).then(function(t){e.incomingCommandReceivedScenario.stop({message:"angular_window"}),e.responseDeferred.resolve(s)}).catch(function(t){s.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.replyFromDesktop.windowError,s.errorDetails="error in navigating to conversation with details - "+t,e.incomingCommandReceivedScenario.fail({message:s.errorCode,message1:s.errorDetails}),e.responseDeferred.reject(s)})}else s.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.replyFromDesktop.conversationIdIsEmpty,this.incomingCommandReceivedScenario.stop({message:s.errorCode}),this.responseDeferred.reject(s);return this.responseDeferred},e}();t.ReplyFromDesktopCommand=r},2689:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,r=t.deepLinkService;this.responseDeferred=n.defer();var o=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();return this.commandDetails.objectUrl&&this.commandDetails.fileId?r.resolveFileDeepLink(this.commandDetails).then(function(){e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(o)}).catch(function(t){o.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.openFile.deeplinkServiceError,e.incomingCommandReceivedScenario.fail({message:o.errorCode}),e.transportDependencyProviderService.loggingService.error(o.errorCode+", error - "+t),e.responseDeferred.reject(o)}):(o.errorDetails="ObjectUrl is empty - "+!this.commandDetails.objectUrl+" or fileId is empty - "+!this.commandDetails.fileId,o.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.openFile.urlIsEmpty,this.incomingCommandReceivedScenario.fail({message:o.errorCode,message1:o.errorDetails}),this.responseDeferred.reject(o)),this.responseDeferred},e}();t.OpenFileCommand=r},2690:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n,r,o){this.commandDetails=e,this.requestCauseId=n,this.transportDependencyProviderService=r,this.incomingCommandReceivedScenario=o}return e.prototype.action=function(){var e,t,n,o,i=this.transportDependencyProviderService,s=i.$q,a=i.settingsService,c=i.constants;this.responseDeferred=s.defer();var d=this.transportDependencyProviderService.getTransportConnectionHandler(),l=d.getResponseDetails(),m=this.commandDetails.previousEndpointId,p={endPointId:this.commandDetails.newEndpointId};if(!!a.valueAsBoolean(c.settings.names.enableBetterTogetherEndpointSignature)&&this.commandDetails.newEndpointDetails){var g={deviceName:this.commandDetails.newEndpointDetails.deviceName,clientType:this.commandDetails.newEndpointDetails.clientType,clientVersion:this.commandDetails.newEndpointDetails.clientVersion,endpointSignature:this.commandDetails.newEndpointDetails.endpointSignature};p=r(r({},p),g)}return d.onUpdateEndpoint(m,p)?(this.incomingCommandReceivedScenario.stop({endPointId:this.commandDetails.previousEndpointId,requestId:this.requestCauseId,message:"clientType - "+(null===(e=this.commandDetails.newEndpointDetails)||void 0===e?void 0:e.clientType)+"; clientVersion - "+(null===(t=this.commandDetails.newEndpointDetails)||void 0===t?void 0:t.clientVersion)}),this.responseDeferred.resolve(l)):(l.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired,this.incomingCommandReceivedScenario.fail({errorMessage:l.errorCode,endPointId:this.commandDetails.previousEndpointId,requestId:this.requestCauseId,message:"newEndpointId - "+this.commandDetails.newEndpointId+"; clientType - "+(null===(n=this.commandDetails.newEndpointDetails)||void 0===n?void 0:n.clientType)+"; clientVersion - "+(null===(o=this.commandDetails.newEndpointDetails)||void 0===o?void 0:o.clientVersion)}),this.responseDeferred.reject(l)),this.responseDeferred},e}();t.UpdateEndpointCommand=o},2691:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n}return e.prototype.action=function(){var e=this.transportDependencyProviderService,t=e.$rootScope,n=e.$q,r=e.eventingService;this.responseDeferred=n.defer();var o={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl},i=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();if(this.commandDetails.conversationId)if(this.transportDependencyProviderService.getTransportCallKeeper().isCallActiveOnTransport(o)){var s=this.transportDependencyProviderService.callingService.getCallByCallId(this.commandDetails.callId);if(!s)return i.errorDetails="No call found for callId = "+this.commandDetails.callId,i.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.openShare.callNotFound,this.incomingCommandReceivedScenario.fail({message:i.errorCode,message1:i.errorDetails}),this.responseDeferred.reject(i),this.responseDeferred;r.$emit(this.transportDependencyProviderService.constants.events.calling.openSharingPanel),t.$emit(this.transportDependencyProviderService.constants.events.betterTogether.callingScreenStatusChanged,{__typename:"CallingScreenStatusChanged",teamsCallId:s.teamsCallId,callingScreenStatusData:{isShareTrayVisible:!0,timeStamp:Date.now()}}),this.responseDeferred.resolve(i),this.incomingCommandReceivedScenario.stop()}else i.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent,this.responseDeferred.reject(i),this.incomingCommandReceivedScenario.fail({message:i.errorCode});else i.errorDetails="conversation id is not present, conversationId - "+this.commandDetails.conversationId+", messageId - "+this.commandDetails.messageId,i.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,this.incomingCommandReceivedScenario.fail({message:i.errorCode,message1:i.errorDetails}),this.responseDeferred.reject(i);return this.responseDeferred},e}();t.OpenShareCommand=r},2692:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,o=t.callingService;if(this.responseDeferred=n.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId&&!this.commandDetails.pstnMri){m=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,errorDetails:"callId - "+(this.commandDetails.callId||"")+", conversationId -  "+(this.commandDetails.conversationId||"")+", messageId - "+(this.commandDetails.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return this.transportDependencyProviderService.loggingService.error("errorCode - "+m.errorCode+", errorDetails - "+m.errorDetails),this.incomingCommandReceivedScenario.fail({message:m.errorCode,message1:m.errorDetails}),this.responseDeferred.reject(m),this.responseDeferred}var i={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:this.commandDetails.conversationUrl},s=this.transportDependencyProviderService.getTransportCallKeeper(),a=this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(i),c=o.getAllCalls(),d=c&&c.length>0?c.filter(function(e){return s.isCallEqualTransportCall(e,i)}):[];if(d&&d.length>0){var l=d[0];o.leaveCall(l,"EndCallCommand").then(function(){e.transportDependencyProviderService.loggingService.info("End call succeeded"),e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails())}).catch(function(t){var n=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed,errorDetails:"Endcall failed with error "+t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.transportDependencyProviderService.loggingService.error("errorCode - "+n.errorCode+", errorDetails - "+n.errorDetails),e.incomingCommandReceivedScenario.fail({message:n.errorCode,message1:n.errorDetails}),e.responseDeferred.reject(n)})}else if(a&&(this.commandDetails.pstnMri||this.transportDependencyProviderService.$injector.get("conversationsService").getCallingConversation(this.commandDetails.conversationId).isChat()))this.transportDependencyProviderService.loggingService.info("End call succeeded for P2P call"),this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());else{var m=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent,errorDetails:"callId - "+(i.callId||"")+", conversationId -  "+(i.conversationId||"")+", messageId - "+(i.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.transportDependencyProviderService.loggingService.error("errorCode - "+m.errorCode+", errorDetails - "+m.errorDetails),this.incomingCommandReceivedScenario.fail({message:m.errorCode}),this.responseDeferred.reject(m)}return this.responseDeferred},e}();t.EndCallCommand=o;var i=function(){function e(e,t,n){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n,this.logger=t.loggingService.newLogger("TransportCallingIncomingCommand")}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,o=t.callingService;if(this.responseDeferred=n.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId&&!this.commandDetails.pstnMri){d=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,errorDetails:"callId - "+(this.commandDetails.callId||"")+", conversationId -  "+(this.commandDetails.conversationId||"")+", messageId - "+(this.commandDetails.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return this.transportDependencyProviderService.loggingService.error("errorCode - "+d.errorCode+", errorDetails - "+d.errorDetails),this.incomingCommandReceivedScenario.fail({message:d.errorCode,message1:d.errorDetails}),this.responseDeferred.reject(d),this.responseDeferred}var i={isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},s={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:this.commandDetails.conversationUrl,callState:i},a=this.transportDependencyProviderService.getTransportCallKeeper();if(a.isCallActiveOnTransport(s)){var c=a.getTransportCallWithDetails(s),d=r({callId:c.callId,conversationId:c.conversationId,messageId:c.messageId,pstnMri:c.pstnMri,isBroadcast:!1,startCallOptions:{isMicMuted:c.callState.isMicMuted,isSpeakerMuted:c.callState.isSpeakerMuted,withVideo:c.callState.isVideoOn}},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.logger.info("StartCallCommand CallId: "+this.commandDetails.callId+" is ActiveOnTransport mode"),this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(d)}else a.ringingCallResolved(s).then(function(){var t=o.getActiveCall();if(t&&a.isCallEqualTransportCall(t,s))e.logger.info("StartCallCommand  CallId: "+e.commandDetails.callId+" upgrade existing call to BT mode"),s.callState.isMicMuted=t.isMuted,s.callState.isSpeakerMuted=t.isSpeakerMuted,s.callState.isVideoOn=t.isVideoOn,s.callState.isCallOnHold=!1,e.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(s),t.stopVideo(t.getTag()).then(function(){return t.muteSpeaker()}).then(function(){return t.mute()}).then(function(){t.initForTransportCompanion(),t.setupSlimCorePropsToTransportState();var n=r({callId:t.callId,conversationId:t.conversationId,messageId:t.messageId,pstnMri:s.pstnMri,isBroadcast:!1,startCallOptions:{isMicMuted:t.isMuted,isSpeakerMuted:t.isSpeakerMuted,withVideo:t.isVideoOn}},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.responseDeferred.resolve(n)}).catch(function(t){var n=r({errorDetails:"Error changing call settings to BTmode "+JSON.stringify(t),errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.logger.error(n.errorDetails),e.incomingCommandReceivedScenario.fail({message:n.errorCode,message1:n.errorDetails}),e.responseDeferred.reject(n)});else{e.logger.info("StartCallCommand CallId: "+e.commandDetails.callId+" not active. Start new call"),e.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(s);var i=void 0;if(e.commandDetails.conversationId){var c={conversationId:e.commandDetails.conversationId,startCallScenarioPromise:n.resolve(null),secondaryScenarios:[],withVideo:e.commandDetails.startCallOptions.withVideo,muted:e.commandDetails.startCallOptions.isMicMuted,callId:e.commandDetails.callId};i=o.startCall(c)}else{var d=e.commandDetails.pstnMri?e.commandDetails.pstnMri.replace(SkypeX.Services.ChatServiceUtils.PstnPrefix,""):void 0;i=e.transportDependencyProviderService.dialingService.startPstnCall(d,null,n.resolve(null),[],void 0,void 0,e.commandDetails.startCallOptions.isMicMuted,void 0,e.commandDetails.callId)}i.then(function(t){e.logger.info("Start call succeeded"),e.incomingCommandReceivedScenario.stop({message:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent}),e.responseDeferred.resolve(e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails())}).catch(function(t){var n=r({errorDetails:"Start call failed with error "+JSON.stringify(t),errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.incomingCommandReceivedScenario.fail({message:n.errorCode,message1:n.errorDetails}),e.logger.error(n.errorDetails),e.responseDeferred.reject(n)})}});return this.responseDeferred},e}();t.StartCallCommand=i;var s=function(){function e(e,t,n,r){this.commandDetails=e,this.transportDependencyProviderService=t,this.commandName=n,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,o=t.callingService;if(this.responseDeferred=n.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId&&!this.commandDetails.pstnMri){m=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,errorDetails:"callId - "+(this.commandDetails.callId||"")+", conversationId -  "+(this.commandDetails.conversationId||"")+", messageId - "+(this.commandDetails.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return this.transportDependencyProviderService.loggingService.error("errorCode - "+m.errorCode+", errorDetails - "+m.errorDetails),this.incomingCommandReceivedScenario.fail({message:m.errorCode,message1:m.errorDetails}),this.responseDeferred.reject(m),this.responseDeferred}var i,s={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:this.commandDetails.conversationUrl},a=this.transportDependencyProviderService.getTransportCallKeeper(),c=o.getAllCalls(!1,!1,!1),d=c?c.filter(function(e){return a.isCallEqualTransportCall(e,s)}):void 0;if(d&&d.length>0){var l=d[0];i=this.transportDependencyProviderService.getCallToggleDefer(this.commandName,l,s),this.commandName==teamspace.services.IncomingCommand.UnholdCall&&this.commandDetails.startCallOptions&&i.then(function(){e.transportDependencyProviderService.syncCallState(e.commandDetails.startCallOptions,l,s)})}else{var m=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.transportDependencyProviderService.loggingService.error("errorCode - "+m.errorCode),this.incomingCommandReceivedScenario.fail({message:m.errorCode}),this.responseDeferred.reject(m)}return i&&i.then(function(){e.incomingCommandReceivedScenario.stop(),e.transportDependencyProviderService.$timeout(function(){return e.responseDeferred.resolve(e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails())},0)}).catch(function(t){var n=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed,errorDetails:"Endcall failed with error "+JSON.stringify(t)},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.transportDependencyProviderService.loggingService.error("errorCode - "+n.errorCode+", errorDetails - "+n.errorDetails),e.incomingCommandReceivedScenario.fail({message:n.errorCode,message1:n.errorDetails}),e.responseDeferred.reject(n)}),this.responseDeferred},e}();t.BaseCallToggleStateCommand=s},2693:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n}return e.prototype.action=function(){var e=this,t=this.transportDependencyProviderService,n=t.$q,r=t.constants,o=t.settingsService,i=this.transportDependencyProviderService.getTransportConnectionHandler(),s=this.transportDependencyProviderService.getBrbV2FeedbackService(),a=n.defer(),c=i.getResponseDetails();return o.valueAsBoolean(r.settings.names.enableBetterTogetherReportProblemSynching)?s?(s.extendFeedbackReport(this.commandDetails.brbContainerId,{category:"Better Together",title:"Addition of logfiles by laptop for Better Together problem report",description:"Addition of logfiles for endpointId "+this.commandDetails.targetEndpointId},!0).then(function(){e.incomingCommandReceivedScenario.stop(),a.resolve(c)}).catch(function(t){c.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.reportProblem.operationFailed,c.errorDetails=t,e.transportDependencyProviderService.loggingService.error("errorCode - "+c.errorCode+", errorDetails - "+c.errorDetails),e.incomingCommandReceivedScenario.fail({message:c.errorCode,message1:c.errorDetails}),a.reject(c)}),a):(c.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.reportProblem.serviceNotLoaded,a.reject(c),this.incomingCommandReceivedScenario.fail({message:c.errorCode}),a):(c.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.featureDisabled,this.incomingCommandReceivedScenario.fail({message:c.errorCode}),a.reject(c),a)},e}();t.ReportProblemIncomingCommand=r},2694:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(344),o=n(2695),i=n(2696),s=n(2697),a=n(2698),c=n(2699),d=n(2700),l=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("OutgoingCommandFactory")}return e.prototype.generateCauseId=function(){return this.transportDependencyProviderService.utilityService.generateUUID()},e.prototype.createCommand=function(e,t,n,l){var m;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)&&e!=teamspace.services.OutgoingCommand.Lock)return this.logger.error("Machine is in locked state. Outgoing command with name - "+e+" will not be created."),l.fail({errorMessage:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.desktopIsLocked,message:e.toLowerCase(),endPointId:t.targetEndpointId}),null;e=e.toLowerCase();var p=this.generateCauseId();switch(e){case teamspace.services.OutgoingCommand.Response:m=new r.ResponseCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.KeepAlive:m=new o.KeepAliveCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.Lock:m=new i.LockCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.Unlock:m=new s.UnlockCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.Unpair:m=new a.UnpairCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.JoinCall:case teamspace.services.OutgoingCommand.StartCall:m=new c.StartCallOutgoingCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.CreateAndStartCall:case teamspace.services.OutgoingCommand.DialNumber:m=new c.CreateAndStartCallOutgoingCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.EndCall:m=new c.EndCallOutgoingCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.Mute:case teamspace.services.OutgoingCommand.Unmute:case teamspace.services.OutgoingCommand.StartAudio:case teamspace.services.OutgoingCommand.StopAudio:case teamspace.services.OutgoingCommand.StartVideo:case teamspace.services.OutgoingCommand.StopVideo:case teamspace.services.OutgoingCommand.HoldCall:case teamspace.services.OutgoingCommand.UnholdCall:m=new c.BaseCallCommand(p,n,t,this.transportDependencyProviderService,l);break;case teamspace.services.OutgoingCommand.ReportProblem:m=new d.ReportProblemOutgoingCommand(p,n,t,this.transportDependencyProviderService,l);break;default:return null}return m.name=e,m.startTime=new Date,m.isRetry=!1,m.acknowledgementReceived=!1,m},e}();t.OutgoingCommandFactory=l},2695:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r;!function(e){e.NotPaired="NotPaired"}(r||(r={}));var o=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!0;var i=r.$q,s=this.onCommandExecuted.bind(this);this.onResponseReceived=i.defer(),this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){var t=this.endpoint.getEndpointId();if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({endPointId:t,requestId:this.causeId});else{var n=void 0,r=void 0;e?(n="Error response: "+e.errorDetails,"NotPaired"===(r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint)&&this.transportDependencyProviderService.settingsService.valueAsBoolean(this.transportDependencyProviderService.constants.settings.names.enableBetterTogetherRemoveOutofSyncPairing)&&(this.transportDependencyProviderService.loggingService.error("Remove the device from the list of paired devices, endpointId - "+t),this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnpaired(t))):(n="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({errorMessage:r,endPointId:t,requestId:this.causeId,message:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+r+", errorDetails - "+n)}},e}();t.KeepAliveCommand=o},2696:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!1,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){var t=this.endpoint.getEndpointId();if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceLocked(this.endpoint.getEndpointId()),this.transportDependencyProviderService.loggingService.info("companion device locked"),this.sendOutgoingCommandScenario.stop({endPointId:t,requestId:this.causeId});else{var n=void 0,r=void 0;e?(n="Error response: "+e.errorDetails,r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({endPointId:t,requestId:this.causeId,errorMessage:r,message:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+r+", errorDetails - "+n)}},e}();t.LockCommand=r},2697:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){var t=this.endpoint.getEndpointId();if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnlocked(this.endpoint.getEndpointId()),this.transportDependencyProviderService.loggingService.info("companion device unlocked"),this.sendOutgoingCommandScenario.stop({endPointId:t,requestId:this.causeId});else{var n=void 0,r=void 0;e?(n="Error response: "+e.errorDetails,r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({endPointId:t,requestId:this.causeId,errorMessage:r,message:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+r+", errorDetails - "+n)}},e}();t.UnlockCommand=r},2698:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!1;var i=r.$q;this.onResponseReceived=i.defer();var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){var t=this.endpoint.getEndpointId();if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({endPointId:t,requestId:this.causeId});else{var n=void 0,r=void 0;e?(n="Error response: "+e.errorDetails,r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({endPointId:t,requestId:this.causeId,errorMessage:r,message:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+r+", errorDetails - "+n)}},e}();t.UnpairCommand=r},2699:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({message1:"Completed command "+this.name+" for call id "+this.commandDetails.callId});else{var t=void 0,n=void 0;e?(t=this.name+" command failed for call id "+this.commandDetails.callId+", Error response: "+e.errorDetails,n=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(t="",n=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:n,message1:t}),this.transportDependencyProviderService.loggingService.error("errorCode - "+n+", errorDetails - "+t)}},e}();t.BaseCallCommand=r;var o=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i),this.logger=r.loggingService.newLogger("TransportStartCallOutgoingCommand")}return e.prototype.onCommandExecuted=function(e){var t=this;if(e&&!e.errorDetails){var n={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},r={callId:this.commandDetails.callId,conversationId:e.conversationId,messageId:e.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:e.conversationUrl,callState:n};this.commandDetails.isP2PCall||this.commandDetails.accepted?this.transportDependencyProviderService.getTransportCallKeeper().ringingCallResolved(r).then(function(){t.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(r);var o;if(t.commandDetails.pstnMri){var i=t.commandDetails.pstnMri.replace(SkypeX.Services.ChatServiceUtils.PstnPrefix,"");o=t.transportDependencyProviderService.dialingService.startPstnCall(i,null,t.transportDependencyProviderService.$q.resolve(null),[],void 0,void 0,n.isMicMuted,void 0,t.commandDetails.callId)}else{var s={conversationId:e.conversationId,startCallScenarioPromise:t.transportDependencyProviderService.$q.resolve(null),secondaryScenarios:[],withVideo:n.isVideoOn,muted:n.isSpeakerMuted,callId:t.commandDetails.callId};o=t.transportDependencyProviderService.callingService.startCall(s)}o.then(function(e){t.logger.info("StartCallCommand for a P2P call CallId: "+t.commandDetails.callId+" is successful"),t.sendOutgoingCommandScenario.stop({message:t.commandDetails.pstnMri?"PSTN_CALL":"P2P_CALL",message1:"StartCallCommand for a P2P call CallId: "+t.commandDetails.callId+" is successful"})}).catch(function(e){t.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(r),t.logger.info("StartCallCommand for a P2P call CallId: "+t.commandDetails.callId+" failed with error - "+e),t.sendOutgoingCommandScenario.fail({message:(t.commandDetails.pstnMri?"PSTN_CALL":"P2P_CALL")+"_"+t.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailed,message1:"StartCallCommand for a P2P call CallId: "+t.commandDetails.callId+" failed with error - "+e})})}):(this.logger.info("StartCallCommand for other calls CallId: "+this.commandDetails.callId+". Start new call"),this.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(r),this.sendOutgoingCommandScenario.stop({message:"MEETING",message1:"Other Calls with callid started on companion device "+this.commandDetails.callId}))}else{var o=void 0,i=void 0;e?(o="Error response: "+e.errorDetails,i=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(o="",i=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),i=this.commandDetails.isP2PCall?this.commandDetails.pstnMri?"PSTN_CALL_"+i:"P2P_CALL_"+i:"MEETING_"+i,this.sendOutgoingCommandScenario.fail({message:i,message1:o}),this.logger.error("errorCode - "+i+", errorDetails - "+o)}},e}();t.StartCallOutgoingCommand=o;var i=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i),this.logger=r.loggingService.newLogger("TransportCreateAndStartCallOutgoingCommand");var s={isMicMuted:n.startCallOptions.isMicMuted,isVideoOn:n.startCallOptions.withVideo,isSpeakerMuted:n.startCallOptions.isSpeakerMuted,isCallOnHold:!1};this.activeCall={callId:n.callId,conversationId:n.conversationId,messageId:n.messageId,pstnMri:n.pstnMri,conversationUrl:n.conversationUrl,callState:s},r.getTransportCallKeeper().addActiveCall(this.activeCall)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)if(e.callFailureReason)this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(this.activeCall),this.logger.error("call failed on transport companion device callid "+this.commandDetails.callId+" with reason "+e.callFailureReason),this.sendOutgoingCommandScenario.stop({message:e.callFailureReason,message1:"call failed on transport companion device callid "+this.commandDetails.callId});else{var t={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1};this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(this.activeCall,t),this.logger.info("Call with callid started on companion device "+this.commandDetails.callId),this.sendOutgoingCommandScenario.stop({message1:"Call with callid started on companion device "+this.commandDetails.callId})}else{this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(this.activeCall);var n=void 0,r=void 0;e?(n="Error response: "+e.errorDetails,r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:r,message1:n}),this.logger.error("errorCode - "+r+", errorDetails - "+n)}},e}();t.CreateAndStartCallOutgoingCommand=i;var s=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({message1:"Call with callid stopped on companion device "+this.commandDetails.callId});else{var t=void 0,n=void 0;e?(t="Error response: "+e.errorDetails,n=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(t="",n=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:n,message1:t}),this.transportDependencyProviderService.loggingService.error("errorCode - "+n+", errorDetails - "+t)}},e}();t.EndCallOutgoingCommand=s},2700:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!1;var i=r.$q,s=this.onCommandExecuted.bind(this);this.onResponseReceived=i.defer(),this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.loggingService.info("Outgoing report problem command for brbContainerId "+this.commandDetails.brbContainerId+" successful for endpoint: "+this.endpoint.getEndpointId()+"."),this.sendOutgoingCommandScenario.stop();else{var t=void 0,n=void 0;e?(t="Error response: "+e.errorDetails,n=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(t="",n=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:n,message1:t}),this.transportDependencyProviderService.loggingService.error("errorCode - "+n+", errorDetails - "+t)}},e}();t.ReportProblemOutgoingCommand=r},2701:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2702),o=n(2703),i=n(2704),s=n(2705),a=n(2706),c=n(2707),d=n(2708),l=n(2709),m=teamspace.services.IncomingCommand,p=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("RemoteControllerIncomingCommandFactory"),this.constants=e.constants}return e.prototype.createCommand=function(e,t){var n=e.command.toLowerCase(),p=JSON.parse(e.commandDetails),g=e.endpointId;switch(this.logger.info("Creating command:"+n+" causeId:"+e.causeId),n){case m.Pair:return new r.RemoteControllerPairCommand(p,g,this.transportDependencyProviderService,t);case m.Unpair:return new l.RemoteControllerUnpairCommand(p,this.transportDependencyProviderService,t,g);case m.Mute:case m.Unmute:return new a.MuteToggleCommand(p,this.transportDependencyProviderService,t,n);case m.CameraOn:case m.CameraOff:return new c.VideoToggleCommand(p,this.transportDependencyProviderService,t,n);case m.VolumeUp:case m.VolumeDown:return new i.VolumeCommand(p,this.transportDependencyProviderService,t,n);case m.ShowVideoGallery:case m.ShowContent:case m.ShowVideoGalleryAndContent:case m.ShowLargeGallery:case m.ShowTogether:return new o.StageLayoutCommand(p,this.transportDependencyProviderService,t,n);case m.CaptionsOff:case m.CaptionsOn:return new s.CaptionsToggleCommand(p,this.transportDependencyProviderService,t,n);case m.LeaveMeeting:return new d.RemoteControllerEndCallCommand(this.constants,p,this.transportDependencyProviderService,t,n);default:return this.logger.error("Couldn't create command:"+n+" causeId:"+e.causeId),t.fail({message:this.constants.transportTelemetryErrorCode.incomingCommand.invalidCommand,message1:n}),{result:!1,errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.invalidCommand}}},e}();t.RemoteControllerIncomingCommandFactory=p},2702:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r){this.commandDetails=e,this.endpointId=t,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q,t=this.transportDependencyProviderService.getRemoteControllerConnectionHandler();if(this.responseDeferred=e.defer(),t.verifySalt(this.commandDetails)){var n={endPointId:this.endpointId,deviceName:this.commandDetails.controllerEndpointInfo.deviceName,clientType:this.commandDetails.controllerEndpointInfo.clientType||"",clientVersion:this.commandDetails.controllerEndpointInfo.clientVersion||""};t.onNewDevicePaired(n),this.incomingCommandReceivedScenario.stop({message1:"clientType - "+n.clientType+", endpointId - "+n.endPointId+", clientVersion - "+n.clientVersion}),this.responseDeferred.resolve(this.buildPairResponse())}else{var r={errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidSalt};this.incomingCommandReceivedScenario.fail({message:r.errorCode}),this.responseDeferred.reject(r)}return this.responseDeferred},e.prototype.buildPairResponse=function(){var e=this.transportDependencyProviderService,t=e.callingAgentsService,n=e.resources,r=e.$translate,o=e.settingsService,i=e.platformDetectService,s=window.desktopEnvironment&&window.desktopEnvironment.hostname?window.desktopEnvironment.hostname:r.instant(n.strings.meeting_unknown_status_text),a=i.getDesktopAppVersion()+"/"+o.getVersion().clientVersion,c=this.transportDependencyProviderService.getRemoteControllerConnectionHandler().remoteControllerCallState;return{accepted:!0,roomEndpointInfo:{clientType:i.getDeviceType(),clientVersion:a,deviceName:s,endpointId:t.getRegistrationId()},supportedCapabilities:c.capabilities,initialState:c.state}},e}();t.RemoteControllerPairCommand=r},2703:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=teamspace.shared.RigelLayoutType,s=teamspace.components.Calling.CustomLayoutSelection,a=n(45),c=teamspace.services.StageLayoutControlsCapabilities,d=function(e){function t(t,n,r,o){return e.call(this,t,n,r,o)||this}return r(t,e),t.prototype.canExecuteAction=function(){var e,t=null===(e=this.transportDependencyProviderService.getRemoteControllerConnectionHandler().remoteControllerCallState)||void 0===e?void 0:e.capabilities.stageLayoutControls;switch(this.command){case o.ShowContent:return _.includes(t,c.ShowContent);case o.ShowVideoGalleryAndContent:return _.includes(t,c.ShowVideoGalleryAndContent);case o.ShowLargeGallery:return _.includes(t,c.ShowLargeGallery);case o.ShowTogether:return _.includes(t,c.ShowTogether);default:return this.logger.info("No capability restriction has been found for "+this.command+"."),!0}},t.prototype.executeCommandSpecificAction=function(e){var t=this.transportDependencyProviderService,n=t.$rootScope,r=t.constants;switch(this.logger.info("Executing action for "+this.command+"."),this.command){case o.ShowVideoGallery:n.$broadcast(r.events.rigel.service.eventTypes.userSelectedLayout,i.Gallery);break;case o.ShowContent:n.$broadcast(r.events.rigel.service.eventTypes.userSelectedLayout,i.Content);break;case o.ShowVideoGalleryAndContent:n.$broadcast(r.events.rigel.service.eventTypes.userSelectedLayout,i.ContentWithGallery);break;case o.ShowLargeGallery:n.$emit(r.events.calling.callingScreenGalleryTypeChanged,s.LargeGrid);break;case o.ShowTogether:n.$emit(r.events.calling.callingScreenGalleryTypeChanged,s.Audience);break;default:return void this.markFailureResponseInvalidCommand()}this.markSuccessfulResponse()},t}(a.RemoteControllerIncomingBaseCommand);t.StageLayoutCommand=d},2704:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=function(e){function t(t,n,r,o){return e.call(this,t,n,r,o)||this}return r(t,e),t.prototype.canExecuteAction=function(){return!0},t.prototype.executeCommandSpecificAction=function(e){var t=this.transportDependencyProviderService.rigelSpeakerService;switch(this.command){case o.VolumeUp:this.incomingCommandReceivedScenario.stop({message1:""+this.command}),t.volume=t.volume+teamspace.services.SpeakerVolumeIncrement,this.markSuccessfulResponse();break;case o.VolumeDown:this.incomingCommandReceivedScenario.stop({message1:""+this.command}),t.volume=t.volume-teamspace.services.SpeakerVolumeIncrement,this.markSuccessfulResponse();break;default:this.markFailureResponseInvalidCommand()}},t}(n(45).RemoteControllerIncomingBaseCommand);t.VolumeCommand=i},2705:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=teamspace.services.CallClosedCaptionStatus,s=function(e){function t(t,n,r,o){return e.call(this,t,n,r,o)||this}return r(t,e),t.prototype.canExecuteAction=function(){var e=this.transportDependencyProviderService.getRemoteControllerConnectionHandler().remoteControllerCallState;return _.includes(null===e||void 0===e?void 0:e.capabilities.mediaControls,teamspace.services.MediaControlsCapabilities.ToggleCaptions)},t.prototype.executeCommandSpecificAction=function(e){var t=e.getClosedCaptionStatus();switch(this.command){case o.CaptionsOff:t===i.started?(e.stopClosedCaption(),this.markSuccessfulResponse()):this.markFailureStateAlreadySet("CaptionStatus:"+i[t]+", callId:"+e.callId);break;case o.CaptionsOn:t!==i.started&&t!==i.disabled?(e.startClosedCaption(),this.markSuccessfulResponse()):this.markFailureResponse("CaptionStatus:"+i[t]+", callId:"+e.callId);break;default:this.markFailureResponseInvalidCommand()}},t}(n(45).RemoteControllerIncomingBaseCommand);t.CaptionsToggleCommand=s},2706:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=function(e){function t(t,n,r,o){var i=e.call(this,t,n,r,o)||this;return i.callTogglingService=n.callTogglingService,i}return r(t,e),t.prototype.canExecuteAction=function(){var e=this.transportDependencyProviderService.getRemoteControllerConnectionHandler().remoteControllerCallState;return _.includes(null===e||void 0===e?void 0:e.capabilities.mediaControls,teamspace.services.MediaControlsCapabilities.ToggleMute)},t.prototype.executeCommandSpecificAction=function(e){var t=this;switch(this.command){case o.Mute:this.callTogglingService.isMuted(e)?this.markFailureStateAlreadySet("callId "+e.callId):this.callTogglingService.toggleMuteAudio(e,1,1).then(function(){t.markSuccessfulResponse()}).catch(function(n){t.markFailureResponseOperationFailed("error "+n+" callId "+e.callId)});break;case o.Unmute:this.callTogglingService.isMuted(e)?this.callTogglingService.toggleMuteAudio(e,1,2).then(function(){t.markSuccessfulResponse()}).catch(function(n){t.markFailureResponseOperationFailed("error "+n+" callId "+e.callId)}):this.markFailureStateAlreadySet("callId "+e.callId);break;default:this.markFailureResponseInvalidCommand()}},t}(n(45).RemoteControllerIncomingBaseCommand);t.MuteToggleCommand=i},2707:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=function(e){function t(t,n,r,o){var i=e.call(this,t,n,r,o)||this;return i.callTogglingService=n.callTogglingService,i}return r(t,e),t.prototype.canExecuteAction=function(){var e=this.transportDependencyProviderService.getRemoteControllerConnectionHandler().remoteControllerCallState;return _.includes(null===e||void 0===e?void 0:e.capabilities.mediaControls,teamspace.services.MediaControlsCapabilities.ToggleCamera)},t.prototype.executeCommandSpecificAction=function(e){var t=this;switch(this.command){case o.CameraOff:e.isVideoOn?this.callTogglingService.toggleVideo(e,"remote",!1).then(function(){t.markSuccessfulResponse()}).catch(function(n){t.markFailureResponseOperationFailed("error "+n+" callId "+e.callId)}):this.markFailureStateAlreadySet("callId "+e.callId);break;case o.CameraOn:e.isVideoOn?this.markFailureStateAlreadySet("Video is already turned on, callId "+e.callId):this.callTogglingService.toggleVideo(e,"remote",!0).then(function(){t.markSuccessfulResponse()}).catch(function(n){t.markFailureResponseOperationFailed("error "+n+" callId "+e.callId)});break;default:this.markFailureResponseInvalidCommand()}},t}(n(45).RemoteControllerIncomingBaseCommand);t.VideoToggleCommand=i},2708:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=function(e){function t(t,n,r,o,i){var s=e.call(this,n,r,o,i)||this;return s.constants=t,s}return r(t,e),t.prototype.canExecuteAction=function(){return!0},t.prototype.executeCommandSpecificAction=function(e){var t=this;this.command==o.LeaveMeeting?this.transportDependencyProviderService.callingService.leaveCall(e,this.constants.scenarios.calling.context.remoteControllerEndCallCommand).then(function(){t.markSuccessfulResponse()}).catch(function(n){t.markFailureResponseOperationFailed("error "+n+" callId "+e.callId)}):this.markFailureResponseInvalidCommand()},t}(n(45).RemoteControllerIncomingBaseCommand);t.RemoteControllerEndCallCommand=i},2709:function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var o=teamspace.services.IncomingCommand,i=function(e){function t(t,n,r,i){var s=e.call(this,t,n,r,o.Unpair)||this;return s.endpointId=i,s}return r(t,e),t.prototype.canExecuteAction=function(){return!0},t.prototype.executeCommandSpecificAction=function(e){this.transportDependencyProviderService.getRemoteControllerConnectionHandler().onDeviceUnpaired(this.endpointId),this.markSuccessfulResponse()},t}(n(45).RemoteControllerIncomingBaseCommand);t.RemoteControllerUnpairCommand=i},2710:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(344),o=n(2711),i=teamspace.services.OutgoingCommand,s=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("RemoteControllerOutgoingCommandFactory")}return e.prototype.generateCauseId=function(){return this.transportDependencyProviderService.utilityService.generateUUID()},e.prototype.createCommand=function(e,t,n,s){var a;e=e.toLowerCase();var c=this.generateCauseId();switch(e){case i.Response:a=new r.ResponseCommand(c,n,t,this.transportDependencyProviderService,s);break;case i.UpdateState:case i.UpdateCapabilities:case i.Unpair:a=new o.RemoteControllerOutgoingBaseCommand(c,n,t,this.transportDependencyProviderService,s,e);break;default:return this.logger.error("Coulnd't create command "+a),s.fail({message:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.invalidCommand,message1:e}),null}return a.name=e,a.startTime=new Date,a.isRetry=!1,a.acknowledgementReceived=!1,a},e}();t.RemoteControllerOutgoingCommandFactory=s},2711:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o,i){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,this.commandName=i,n.companionResponseRequired=!1,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s)}return e.prototype.onCommandExecuted=function(e){var t=this.transportDependencyProviderService,n=t.loggingService,r=t.constants;if(e&&!e.errorDetails)n.info("Command:"+this.commandName+" causeId:"+this.causeId+" successfully executed"),this.sendOutgoingCommandScenario.stop();else{var o=void 0,i=void 0;e?(o="Error response: "+e.errorDetails,i=e.errorCode?e.errorCode:r.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(o="The received response is null.",i=r.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:i,errorMessage:o}),n.error("Command causeId:"+this.causeId+" execution failed with: errorCode - "+i+", errorDetails - "+o)}},e}();t.RemoteControllerOutgoingBaseCommand=r},2712:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)},o=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var o=0,r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]]);return n};Object.defineProperty(t,"__esModule",{value:!0});var i;!function(e){e.InitState="InitState",e.IsScanRunning="IsScanRunning",e.LastKeepAliveSentForSession="LastKeepAliveSentForSession",e.IsSendingKeepAlives="IsSendingKeepAlives",e.HasConnectedDevices="HasConnectedDevices",e.HasPairedDevices="HasPairedDevices",e.PairedDeviceCount="PairedDeviceCount",e.IsContinousScanRunning="IsContinousScanRunning"}(i=t.TransportConnectionHandlerStates||(t.TransportConnectionHandlerStates={}));var s=function(){function e(e,t){this.transportDependencyProviderService=e,this.transportCommandRouter=t,this.keepAliveInterval=3e4,this.deviceNotFoundThreshold=15e3,this.continousScanInterval=18e3,this.currentSalt=0,this.ComponentName="TransportConnectionHandler",this.disableProximityScan=!1,this.keepAliveTimer=void 0,this.logger=e.loggingService.newLogger(this.ComponentName),this.constants=e.constants,this.storageService=e.storageService,this.bluetoothLEService=e.bluetoothLEService,this.logger.info("connectionHandler object successfully created, initialization is still pending.")}return e.prototype.initializeConnectionHandler=function(){var t=this;this.logger.info("initializing states and Ipc listeners, and rehydrating previous connection.");var n=void 0;if(this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.enableUserPreferenceStoreForBetterTogether)){var r=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.connectionHandler.userPreferenceStoreInitialized,null,null,null,!0);n=this.transportDependencyProviderService.myUserPreferencesStore.getUserPreferences().pairedTransportCompanionDevices,r.stop(),this.logger.info("initializeConnectionHandler -- Fetched stored paired devices from user preference "+JSON.stringify(this.stripPIIFromPairedDevices(n)))}n||(n=this.storageService.get(e.BTPairedDevicesKey),this.logger.info("initializeConnectionHandler -- Fetched stored paired devices from storage service "+JSON.stringify(this.stripPIIFromPairedDevices(n))),n?this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.enableUserPreferenceStoreForBetterTogether)&&this.updateStoredPairedDevices(n):n=[]),n&&n.forEach(function(e){e.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected}),this.pairedDevices=n,this.setupInitialStates(),this.setupIpcForMachineState(),this.ipcRenderer?(this.ipcRenderer.once(this.constants.events.desktopApp.getLockState,function(e,n){t.logger.info("state of machine is "+n),n===t.constants.desktopApp.lockState.unlocked&&(t.logger.info("machine is in unlocked state."),t.rehydratePreviousConnection(!1,"TransportConnectionHandler is initialized"))}),this.ipcRenderer.send(this.constants.events.desktopApp.getLockState)):this.logger.error("ipcRenderer is not available"),this.disableProximityScan=this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.disableBetterTogetherProximityScan),this.states.set(i.InitState,teamspace.services.ITransportComponentState.Initialized),this.logger.info("connectionHandler successfully initialized")},e.prototype.updateStoredPairedDevices=function(t){if(t){var n=t.map(function(e){e.connectionStatus;return o(e,["connectionStatus"])});this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.enableUserPreferenceStoreForBetterTogether)&&this.transportDependencyProviderService.myUserPreferencesStore.setUserPreference(SkypeX.Services.MyUserPreferenceStorageKey.PairedTransportCompanionDevices,JSON.stringify(n)),this.storageService.set(e.BTPairedDevicesKey,n)}},e.prototype.onNewDevicePaired=function(t){this.logger.info("onNewDevicePaired -- Caching new device paired: "+JSON.stringify(t));var n;this.pairedDevices&&(n=this.pairedDevices.filter(function(e){return e.endPointId!==t.endPointId})),this.pairedDevices=n?n.concat(t):[t],this.logger.info("onNewDevicePaired -- Paired devices: "+JSON.stringify(this.stripPIIFromPairedDevices(this.pairedDevices))),this.updateStoredPairedDevices(this.pairedDevices),this.storageService.set(e.LastPairedDeviceEndpointKey,t.endPointId),this.storageService.set(this.constants.storageNames.transportCompanionSelected,!0),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!0),this.setupKeepAlive(t.endPointId,t.endpointSignature)},e.prototype.onDeviceUnpaired=function(t){if(this.pairedDevices){var n=this.pairedDevices.find(function(e){return e.endPointId===t});if(n)return n.connectionStatus===teamspace.services.PairedConnectionStatus.Connected&&(this.disconnect(!0,!1,"device unpaired",!0),this.storageService.set(e.LastPairedDeviceEndpointKey,""),this.storageService.set(e.LastSaltUpdateTimeKey,"0")),this.pairedDevices=this.pairedDevices.filter(function(e){return e.endPointId!==t}),this.updateStoredPairedDevices(this.pairedDevices),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!0),this.logger.info("onDeviceUnpaired -- Device unpaired with endpointId: "+t+"; Paired devices: "+JSON.stringify(this.stripPIIFromPairedDevices(this.pairedDevices))),!0;this.logger.error("onDeviceUnpaired -- Cannot unpair endpointId: "+t+"; Matching endpointId not found in list of pairedDevices.")}else this.logger.error("onDeviceUnpaired -- Cannot unpair endpointId: "+t+"; No Paired devices found.");return!1},e.prototype.unpairDevice=function(e){var t=this.pairedDevices;if(t&&t.find(function(t){return t.endPointId===e})){var n=this.getCommandDetails();this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unpair,n,e),this.onDeviceUnpaired(e)}},e.prototype.onDeviceLocked=function(t){if(!t)return this.logger.error("Cannot mark device as locked, endpointid is null"),!1;if(this.pairedDevices){var n=this.pairedDevices.find(function(e){return e.endPointId===t});if(n)return n.connectionStatus=teamspace.services.PairedConnectionStatus.Locked,this.storageService.set(e.LastPairedDeviceEndpointKey,n.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!1),this.logger.info("Paired device status set to: locked"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("No paired devices found");return!1},e.prototype.onDeviceUnlocked=function(t){if(!t)return this.logger.error("Cannot mark device as unlocked, endpointid is null"),!1;if(this.pairedDevices){var n=this.pairedDevices.find(function(e){return e.endPointId===t});if(n)return n.connectionStatus=teamspace.services.PairedConnectionStatus.Connected,this.storageService.set(e.LastPairedDeviceEndpointKey,n.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!1),this.logger.info("Paired device status set to: unlocked and connected"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("Device unlocked but no paired devices found");return!1},e.prototype.onUpdateEndpoint=function(e,t){if(!this.pairedDevices)return this.logger.error("onUpdateEndpoint -- No paired devices found. previousEndpointId - "+e+", newEndpointId - "+t.endPointId),!1;var n=this.pairedDevices.find(function(t){return t.endPointId===e});if(!n)return this.logger.error("onUpdateEndpoint -- Device not found in list of pairedDevices. previousEndpointId - "+e+", newEndpointId - "+t.endPointId),!1;this.logger.info("onUpdateEndpoint -- Updating for "+JSON.stringify(t)),t.endpointSignature||(n.endpointSignature=void 0);var r=n.endPointId!==t.endPointId;for(var o in t)n[o]=t[o];return this.logger.info("onUpdateEndpoint -- Paired devices updated to "+JSON.stringify(this.stripPIIFromPairedDevices(this.pairedDevices))),this.updateStoredPairedDevices(this.pairedDevices),r&&(this.logger.info("onUpdateEndpoint -- EndpointId changed, stopping old session with previousEndpointId - "+e+" and starting new session with "+t.endPointId),this.transportCommandRouter.endSession(e),this.transportCommandRouter.startSession(t.endPointId)),!0},e.prototype.getConnectedDevice=function(){var e=this.getAllPairedDevices();if(e)return e.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected})},e.prototype.continousCheckProximity=function(e){var t=this;void 0===e&&(e=!1),this.continousCheckProximityInterval?this.logger.error("A continous check for proximity is already running, isReconnectCallback is - "+e):(this.continousCheckProximityDeferred=this.checkProximity(),e?this.continousCheckProximityDeferred.promise.then(this.reconnectCallback):this.continousCheckProximityDeferred.promise.catch(function(){t.logger.info("checkProximity failed, dont have a reconnectCallback function")}),this.continousCheckProximityInterval=setInterval(function(){t.continousCheckProximityDeferred=t.checkProximity(),e?t.continousCheckProximityDeferred.promise.then(t.reconnectCallback):t.continousCheckProximityDeferred.promise.catch(function(){t.logger.info("checkProximity failed, dont have a reconnectCallback function"),t.transportDependencyProviderService.setPairedDeviceInDeviceManager(!0)})},this.continousScanInterval))},e.prototype.checkProximity=function(e,t){var n=this;this.logger.info("Attempting Proximity check");var r=this.transportDependencyProviderService.$q,o=r.defer(),s=this.bluetoothLEService;return this.transportDependencyProviderService.canInitializeTransport()?this.disableProximityScan?(o.resolve(!0),o):(teamspace.services.QCancelable.toCancelablePromise(r,s.onceInitialized()).then(function(){if(!s.isBLEsupported||!s.isBluetoothRadioOn){var r="Bluetooth scan was not started. BLE might not be supported";return n.logger.error(r),o.reject(r),o}n.logger.info("Scan started for better together companion devices."),n.states.set(i.IsScanRunning,!0);var a,c=setTimeout(function(){s.unsubscribe(a),n.logger.log("Unsubscribed for blehandle "+a+" due to timeout."),o.resolve(!1),n.logger.error("Timeout reached. Device not found. Scan stopped"),n.states.set(i.IsScanRunning,!1)},n.deviceNotFoundThreshold);a=s.subscribe(function(r,i){n.onCompanionDevicesFound(i,o,a,c,e,t)},n.constants.events.bluetoothLE.adjacent,n.constants.events.bluetoothLE.companionDiscovery)}).catch(function(e){e="Bluetooth scan was not started. BLE might not be supported due to error - "+e.toString(),n.logger.error(e),o.reject(e),n.states.set(i.IsScanRunning,!1)}),o):(o.reject("transportation can not be initialised"),o)},e.prototype.verifySalt=function(e){return e.salt[0]===this.currentSalt||!!e.salt[1]&&e.salt[1]===this.currentSalt||this.disableProximityScan},e.prototype.getCommandDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getResponseDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getStates=function(){var e=this.getAllPairedDevices(),t=this.getConnectedDevice();return this.states.set(i.HasConnectedDevices,!!t),this.states.set(i.HasPairedDevices,e&&e.length>0),this.states.set(i.PairedDeviceCount,e?e.length:0),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(i.InitState,teamspace.services.ITransportComponentState.Uninitialized),this.states.set(i.IsScanRunning,!1),this.states.set(i.LastKeepAliveSentForSession,""),this.states.set(i.IsSendingKeepAlives,!1)},e.prototype.getAllPairedDevices=function(){return _.cloneDeep(this.pairedDevices)},e.prototype.rehydratePreviousConnection=function(t,n){var o=this,i=this.pairedDevices;if(i&&i.length>0){this.logger.info("Rehydrating transport connection"),this.setAllPairedDevicesAsDisconnected(!1);var s=this.storageService.get(e.LastSaltUpdateTimeKey);if((s=(new Date).getTime()-s)<6e4&&t){var a=this.storageService.get(e.LastPairedDeviceEndpointKey);this.logger.info("sending unlock command using quick strategy, lastSaltUpdateTime is "+s+", reason - "+n);var c=r({reason:"sending unlock command using quick strategy, lastSaltUpdateTime is "+s+", reason - "+n},this.getCommandDetails()),d=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,c,a);if(!d){var l="unlock command not created for quick unlock strategy, trying with long unlock strategy, reason - "+n;this.logger.error(l),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this,l),this.continousCheckProximity(!0)}d.promise.then(function(){o.logger.info("Unlock succeeded with quick unlock strategy"),o.reconnect(a,!1)}).catch(function(e){var t="unlock command failed due to error - "+JSON.stringify(e)+" in quick unlock strategy, reason - "+n;o.logger.error(t),o.reconnectCallback=o.findProximalDeviceAndReconnect.bind(o,t),o.continousCheckProximity(!0)})}else{var m="salt is not updated, trying to unlock by long unlock strategy, reason - "+n;this.logger.info(m),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this,m),this.continousCheckProximity(!0)}}},e.prototype.onCompanionDevicesFound=function(e,t,n,r,o,s){var a=this;if(e){var c=e.data,d=this.transportDependencyProviderService,l=d.authenticationService,m=d.utilityService,p=d.settingsService,g=d.constants,v=!!p.valueAsBoolean(g.settings.names.enableBetterTogetherEndpointSignature);l.getUserInformation().then(function(e){var d=m.packetGUID2String(c),l=a.pairedDevices,p=a.hasEndpointsMatched(m,v,c,l,o,s);e.profile.oid===d&&p&&(a.logger.info("Better together companion device found and bleHandle is "+n+". Unsubscribing now"),a.bluetoothLEService.unsubscribe(n),a.updateSalt(c),clearTimeout(r),a.states.set(i.IsScanRunning,!1),t.resolve(!0))}).catch(function(e){a.logger.error("device with incorrect authentication sent payload"+e)})}},e.prototype.hasEndpointsMatched=function(e,t,n,r,o,i){var s=e.packetGUID2String(n);this.logger.info("hasEndpointsMatched -- Matching for endpointId = "+o+", endpointSignature = "+i+", payloadOid: "+s);var a=new DataView(n.buffer).getInt16(19,!0);if(t&&void 0!==i&&a===i)return this.logger.info("hasEndpointsMatched -- endpointSignature matched."),!0;if(o){d=e.convertGUIDString2Uint8Array(o);if(n[19]===d[15]&&n[20]===d[14])return this.logger.info("hasEndpointsMatched -- endpointId's matched."),!0}else if(r&&r.length>0){this.logger.info("hasEndpointsMatched -- Paired devices: "+JSON.stringify(this.stripPIIFromPairedDevices(r)));for(var c=0;c<r.length;c++){if(t&&r[c].endpointSignature&&a===r[c].endpointSignature)return this.logger.info("hasEndpointsMatched -- endpointSignature matched for paired devices."),!0;if(r[c].endPointId){var d=e.convertGUIDString2Uint8Array(r[c].endPointId);if(n[19]===d[15]&&n[20]===d[14])return this.logger.info("hasEndpointsMatched -- endpointId matched for paired devices."),!0}}}return!1},e.prototype.findProximalDeviceAndReconnect=function(e,t){var n=this;if(t&&!this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)){this.logger.info("Paired device in proximity. Will attempt keep alive to all paired devices");var r=this.pairedDevices;r&&0!==r.length&&r.forEach(function(t){n.logger.info("Sending keep alive to get status from "+t.endPointId);var r=n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,n.getCommandDetails(),t.endPointId);r&&r.promise.then(function(r){n.logger.info("Keep alive successful from "+t.endPointId),n.reconnect(t.endPointId,!0,"keepAlive successful, reason - "+e),n.states.set(i.LastKeepAliveSentForSession,new Date)})})}},e.prototype.reconnect=function(e,t,n){var o=this;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked))return this.logger.info("machine is in locked state, cancelling reconnect."),{result:!1,errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.desktopIsLocked};this.logger.info("Reconnecting to endpoint "+e);var i=this.pairedDevices.find(function(t){return t.endPointId===e});if(!i)return{result:!1,errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired};var s=this.transportDependencyProviderService.$q.defer();if(t){var a=r({reason:"trying to send a unlock command from reconnect function, reason - "+n},this.getCommandDetails());s=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,a,e)}else s.resolve();return s.promise.then(function(){o.onDeviceUnlocked(e),o.transportCommandRouter.startSession(e),o.setupKeepAlive(e,i.endpointSignature),o.cleanUpContinousProximityScan()}),{result:!0}},e.prototype.disconnect=function(t,n,o,s){var a=this;this.logger.info("Disconnecting from paired device.");var c=this.pairedDevices,d=c?c.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected}):void 0;if(d){if(clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.keepAliveDeferred&&this.keepAliveDeferred.reject(e.KeepAliveCancelled),this.states.set(i.IsSendingKeepAlives,!1),t)this.transportCommandRouter.endSession(d.endPointId);else{var l=r({reason:"sending lock command from disconnect function, reason - "+o},this.getCommandDetails());this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Lock,l).promise.finally(function(){a.transportCommandRouter.endSession(d.endPointId)})}d.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected,this.storageService.set(e.LastPairedDeviceEndpointKey,d.endPointId),this.setAllPairedDevicesAsDisconnected(s),n&&this.keepScanOn()}},e.prototype.setAllPairedDevicesAsDisconnected=function(e){this.pairedDevices.forEach(function(e){e.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected}),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(e)},e.prototype.onProximityLost=function(){this.logger.error("Proximity lost. Stopping keep alive and starting continous scan for autopair"),this.disconnect(!1,!1,"On proximity lost.",!0),this.rehydratePreviousConnection(!1,"On proximity lost")},e.prototype.setupKeepAlive=function(t,n){var r=this;this.keepAliveTimer||(this.logger.info("Setting up keep alive"),this.states.set(i.IsSendingKeepAlives,!0),this.keepAliveTimer=setInterval(function(){r.sendKeepAlive(t,n).promise.catch(function(o){r.logger.error("keep alive failed for 1st time - error "+o),o!==e.KeepAliveCancelled&&r.onKeepAliveCheckFailed(t,n)})},this.keepAliveInterval))},e.prototype.onKeepAliveCheckFailed=function(t,n){var r=this;clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.sendKeepAlive(t,n).promise.then(function(){r.setupKeepAlive(t,n)}).catch(function(t){t!==e.KeepAliveCancelled&&(r.logger.error("Proximity lost, KeepAlive failed 2 times."),r.onProximityLost())})},e.prototype.sendKeepAlive=function(e,t){var n=this,r=this.transportDependencyProviderService.$q;return this.keepAliveDeferred=r.defer(),this.logger.info("checking proximity when trying to send keepAlive command"),this.checkProximity(e,t).promise.then(function(t){if(t){var r=n.getCommandDetails(),o=n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,r,e);n.states.set(i.LastKeepAliveSentForSession,new Date),o.promise.then(function(){n.keepAliveDeferred.resolve("keepAlive successfull")}).catch(function(e){n.logger.error("keepAlive command failed, because of error - "+JSON.stringify(e)),n.keepAliveDeferred.reject("keepAlive command failed, because of error - "+JSON.stringify(e))})}else n.keepAliveDeferred.reject("checkProximity failed, device not in proximity")}).catch(function(e){n.keepAliveDeferred.reject("sending keepAlive failed with error - "+e)}),this.keepAliveDeferred},e.prototype.updateSalt=function(t){if(t.length>18){var n=t[18]<<8|t[17];if(this.currentSalt!==n){this.logger.info("Salt updated. previous salt - "+this.currentSalt+", new salt - "+n),this.currentSalt=n;var r=new Date;this.storageService.set(e.LastSaltUpdateTimeKey,r.getTime())}}},e.prototype.keepScanOn=function(){this.logger.log("Starting continous scan for keeping scan on for quick unlock strategy"),this.continousCheckProximity()},e.prototype.setupIpcForMachineState=function(){var e=this;this.ipcRenderer=window.electronSafeIpc,this.isConsecutiveLock=!1,this.ipcRenderer&&this.transportDependencyProviderService.canInitializeTransport()?(this.ipcEventHandler=function(t,n){n!==e.constants.events.desktopApp.machineLock||e.isConsecutiveLock?n===e.constants.events.desktopApp.machineUnlock&&(e.isConsecutiveLock=!1,e.logger.info("Got machine unlocked event"),e.cleanUpContinousProximityScan(),e.rehydratePreviousConnection(!0,"Got machine unlocked event")):(e.isConsecutiveLock=!0,e.logger.info("Got machine locked event"),e.cleanUpContinousProximityScan(),e.disconnect(!1,!0,"Got machine locked event",!1))},this.ipcEventHandler=this.ipcEventHandler.bind(this),this.ipcRenderer.on(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler),this.ipcRenderer.on(this.constants.desktopApp.powerMonitor.suspend,function(){!e.isConsecutiveLock&&e.transportDependencyProviderService.settingsService.valueAsBoolean(e.constants.settings.names.enableBetterTogetherLockonAppSuspend)&&(e.isConsecutiveLock=!0,e.logger.info("Got machine suspended event"),e.transportDependencyProviderService.loggingService.newScenario(e.transportDependencyProviderService.constants.scenarios.betterTogether.connectionHandler.machineSuspend,null,null,null,!0).stop(),e.cleanUpContinousProximityScan(),e.disconnect(!1,!0,"Got machine suspended event",!1))})):this.logger.error("ipcRenderer is not defined.")},e.prototype.cleanUpConnectionHandler=function(){this.logger.info("clean up of connectionHandler has been called. disconnecting the current device and removing all listeners to ipcRenderer"),this.disconnect(!1,!1,"cleanup of connectionHandler has been called.",!0),this.cleanUpContinousProximityScan(),this.ipcRenderer.removeListener(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler),this.transportCommandRouter=void 0},e.prototype.cleanUpContinousProximityScan=function(){var e="cleaning up continousProximityScan related promise and bleHandle.";this.logger.info(e),clearInterval(this.continousCheckProximityInterval),this.continousCheckProximityDeferred&&this.continousCheckProximityDeferred.reject(e),this.continousCheckProximityInterval=void 0},e.prototype.stripPIIFromPairedDevices=function(e){return e&&e.map(function(e){e.deviceName;return o(e,["deviceName"])})},e.BTPairedDevicesKey="BTPairedDevices",e.KeepAliveCancelled="keepAlive deferred cancelled in disconnect function.",e.LastSaltUpdateTimeKey="LastSaltUpdateTime",e.LastPairedDeviceEndpointKey="LastPairedDeviceEndpoint",e}();t.TransportConnectionHandler=s},2713:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2714),o=services.OutgoingCommand,i=function(){function e(e){this.transportDependencyProviderService=e,this.ComponentName="RemoteControllerConnectionHandler",this.devicesBLEService=e.devicesBLEService,this.logger=e.loggingService.newLogger(this.ComponentName),this.logger.info("remoteControllerConnectionHandler object successfully created."),this.pairedDevices=[]}return e.prototype.verifySalt=function(e){var t=Microsoft.Bond.Number.ToUInt16(e.salt[0]);return this.devicesBLEService.isSaltValid(t)},e.prototype.onNewDevicePaired=function(e){this.logger.info("Saving device to list of currently paired remote controllers: endpoint "+e.endPointId+", name "+e.deviceName),this.pairedDevices.find(function(t){return t.endPointId===e.endPointId})?this.logger.warn("There is already a paired device with this endpoint "+e.endPointId):this.pairedDevices.push(e)},e.prototype.onDeviceUnpaired=function(e){this.logger.info("Removing device from the list of currently paired remote controllers"),this.pairedDevices=this.pairedDevices.filter(function(t){return t.endPointId!==e}),0===this.pairedDevices.length&&(this.logger.info("There are no more paired devices. Will disconnect from listening to the active call changes."),this.disconnectListeningFromActiveCall())},Object.defineProperty(e.prototype,"remoteControllerCallState",{get:function(){var e=this,t=this.transportDependencyProviderService.callingService;return this.activeCall||this._remoteControllerCallState||(this.activeCall=t.getActiveCall(),this._remoteControllerCallState=new r.RemoteControllerCallState(t.getActiveCall(),this.transportDependencyProviderService),this.activeCallSubscription=this.activeCall.on("callStateChanged",function(){return e.onCallStateChanged(e.activeCall)})),this._remoteControllerCallState},enumerable:!0,configurable:!0}),e.prototype.sendOutgoingCommand=function(e,t){var n=this,r=this.transportDependencyProviderService.getTransportCommandRouter();this.pairedDevices.forEach(function(o){var i=n.transportDependencyProviderService.$q.defer();r.sendOutgoingCommand(e,t,o.endPointId).promise.then(function(e){i.resolve()}).catch(function(t){n.logger.error("Sending outgoing command "+e+" to endpoint: "+o.endPointId+" failed with "+t+"."),i.reject()})})},e.prototype.onCallStateChanged=function(e){7===e.state&&(this.sendOutgoingCommand(o.Unpair,void 0),this.pairedDevices=[],this.disconnectListeningFromActiveCall())},e.prototype.disconnectListeningFromActiveCall=function(){this.activeCallSubscription.dispose(),this.activeCall=null,this._remoteControllerCallState.dispose(),this._remoteControllerCallState=null},e}();t.RemoteControllerConnectionHandler=i},2714:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=teamspace.services.CallClosedCaptionStatus,i=teamspace.shared.RigelLayoutType,s=teamspace.components.Calling.CustomLayoutSelection,a=services.OutgoingCommand,c=services.TeamsCallService,d=services.CallTogglingService,l=teamspace.services.MediaControlsCapabilities,m=teamspace.services.MeetingControlsCapabilities,p=teamspace.services.StageLayoutControlsCapabilities;!function(e){e[e.Off=0]="Off",e[e.On=1]="On"}(r=t.ToggleButtonState||(t.ToggleButtonState={}));var g=function(){function e(e,t){this.activeCall=e,this.transportDependencyProvider=t,this.currentStageLayout=p.ShowVideoGallery;var n=t.$rootScope,r=t.callTogglingService,o=t.constants,i=t.loggingService;this.logger=i.newLogger("RemoteControllerIncomingCommandFactory"),this.audioCompletedSubscription=r.subscribe(this.sendStateUpdateCommand.bind(this),d.Type_CallTogglingAudioCompleted,c.getTeamsCallIdAsString(e.teamsCallId)),this.videoCompletedSubscription=r.subscribe(this.sendStateUpdateCommand.bind(this),d.Type_CallTogglingOutgoingVideoCompleted,c.getTeamsCallIdAsString(e.teamsCallId)),this.closedCaptionsStatusChangedSubScription=e.on("closedCaptionsStatusChanged",this.sendStateUpdateCommand.bind(this)),this.userSelectedLayoutSubscription=n.$on(o.events.rigel.service.eventTypes.userSelectedLayout,this.updateStageLayout.bind(this)),this.callingScreenGalleryTypeChangedSubscription=n.$on(o.events.calling.callingScreenGalleryTypeChanged,this.updateScreenGalleryType.bind(this)),this.allHandlersStateUpdateSubscription=n.$on(o.events.remoteController.handlerStateUpdate,this.handlersStateUpdate.bind(this)),this.wholeStateUpdateSubscription=n.$on(o.events.remoteController.wholeStateUpdate,this.wholeStateUpdate.bind(this)),n.$emit(o.events.remoteController.subscribeHandlersStateUpdate)}return e.prototype.dispose=function(){this.logger.info("Disposing RemoteControllerCallState object.");var e=this.transportDependencyProvider,t=e.$rootScope,n=e.callTogglingService,r=e.constants;t.$emit(r.events.remoteController.unsubscribeHandlersStateUpdate),n.unsubscribe(this.audioCompletedSubscription),n.unsubscribe(this.videoCompletedSubscription),this.userSelectedLayoutSubscription(),this.callingScreenGalleryTypeChangedSubscription(),this.allHandlersStateUpdateSubscription(),this.wholeStateUpdateSubscription(),this.closedCaptionsStatusChangedSubScription.dispose()},Object.defineProperty(e.prototype,"state",{get:function(){var e={};return e.toggleMute=this.transportDependencyProvider.callTogglingService.isMuted(this.activeCall)?[r.On]:[r.Off],e.toggleCamera=this.activeCall.isVideoOn?[r.On]:[r.Off],e.toggleCaptions=this.activeCall.getClosedCaptionStatus()===o.started?[r.On]:[r.Off],e.stageLayout=[this.currentStageLayout],e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"capabilities",{get:function(){var e={};return e.mediaControls=this.mediaControlsCapability,e.stageLayoutControls=this.stageLayoutControlsCapabilities,e.meetingControls=this.meetingControlsCapability,e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mediaControlsCapability",{get:function(){var e=[];return this.toggleMuteCapability&&e.push(l.ToggleMute),this.toggleCameraCapability&&e.push(l.ToggleCamera),this.toggleCaptionsCapability&&e.push(l.ToggleCaptions),e.push(l.Volume),e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"meetingControlsCapability",{get:function(){return[m.LeaveMeeting]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"stageLayoutControlsCapabilities",{get:function(){var e=[];return e.push(p.ShowVideoGallery),this.showContentCapability&&(e.push(p.ShowContent),e.push(p.ShowVideoGalleryAndContent)),this.showLargeGalleryCapability&&e.push(p.ShowLargeGallery),this.showTogetherCapability&&e.push(p.ShowTogether),e},enumerable:!0,configurable:!0}),e.prototype.handlersStateUpdate=function(e,t,n){var r=this.capabilities;this.updateCapability(t,n),_.isEqual(r,this.capabilities)||this.sendCapabilitiesUpdateCommand()},e.prototype.wholeStateUpdate=function(e,t){var n=this,r=this.capabilities;t.forEach(function(e,t,r){n.updateCapability(t,e)}),_.isEqual(r,this.capabilities)||this.sendCapabilitiesUpdateCommand()},e.prototype.updateCapability=function(e,t){var n=this.transportDependencyProvider.constants,r=t.visible&&!t.disabled;switch(e){case n.ubarButtonIds.video:this.toggleCameraCapability=r;break;case n.ubarButtonIds.microphone:this.toggleMuteCapability=r;break;case n.ubarButtonIds.closedCaptions:this.toggleCaptionsCapability=r;break;case n.ubarButtonIds.gridSwitchLayout:this.showLargeGalleryCapability=r;break;case n.ubarButtonIds.audienceSwitchLayout:this.showTogetherCapability=r;break;case n.ubarButtonIds.layoutSwitch:this.showContentCapability=r}},e.prototype.updateStageLayout=function(e,t){switch(t.selectedOption){case i.None:case i.Gallery:this.currentStageLayout=p.ShowVideoGallery;break;case i.Content:this.currentStageLayout=p.ShowContent;break;case i.ContentWithGallery:this.currentStageLayout=p.ShowVideoGalleryAndContent}this.sendStateUpdateCommand()},e.prototype.updateScreenGalleryType=function(e,t){switch(t){case s.Audience:this.currentStageLayout=p.ShowTogether;break;case s.Grid:this.currentStageLayout=p.ShowVideoGallery;break;case s.LargeGrid:this.currentStageLayout=p.ShowLargeGallery}this.sendStateUpdateCommand()},e.prototype.sendStateUpdateCommand=function(){var e={commandDetails:this.state};this.transportDependencyProvider.getRemoteControllerConnectionHandler().sendOutgoingCommand(a.UpdateState,e)},e.prototype.sendCapabilitiesUpdateCommand=function(){var e={commandDetails:this.capabilities};this.transportDependencyProvider.getRemoteControllerConnectionHandler().sendOutgoingCommand(a.UpdateCapabilities,e),this.sendStateUpdateCommand()},e}();t.RemoteControllerCallState=g},2715:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){this.transportCommandRouter=e,this.transportConnectionHandler=t}return e.prototype.sendReportProblemId=function(e){var t=this,n=r({brbContainerId:e},this.transportConnectionHandler.getCommandDetails());this.transportConnectionHandler.getAllPairedDevices().map(function(e){t.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.ReportProblem,n,e.endPointId)})},e}();t.TransportAgentHandler=o},2716:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r;!function(e){e.InitState="InitState",e.ActiveCallDetails="ActiveCallDetails"}(r||(r={}));var o=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("TransportCallkeeper"),this.activeCompanionDeviceCalls=[],this.isActiveCompannionDeviceCallsDeferred=void 0,this.activeRingingCalls=[],this.states=new Map,this.logger.info("TransportCallkeeper initialized."),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.ringingCallResolved=function(e){var t=this,n=this.activeRingingCalls.find(function(n){return t.areTransportCallsEqual(n.transportCall,e)});if(n)return n.defer.promise;var r=this.transportDependencyProviderService.$q.defer();return r.resolve(),r.promise},e.prototype.activeCallResolved=function(){var e=this.transportDependencyProviderService.$q.defer(),t=this.activeCompanionDeviceCalls?this.activeCompanionDeviceCalls.filter(function(e){return 1!=e.disableCallTransfer}):void 0;return this.isActiveCompannionDeviceCallsDeferred?e.reject():t&&t.length>0?this.isActiveCompannionDeviceCallsDeferred=e:e.resolve(),e},e.prototype.addRingingCall=function(e){var t={callId:e.callId,conversationId:e.conversationId,messageId:e.messageId},n=e.callQueueInfo&&e.callQueueInfo.onBehalfOf?e.callQueueInfo.onBehalfOf.id:e.callerMri;SkypeX.Services.ChatServiceUtils.isPstnMri(n)&&(t.pstnMri=n);var r={transportCall:t,defer:this.transportDependencyProviderService.$q.defer()};this.activeRingingCalls.push(r),this.logger.info("Added ringing call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeRingingCallFromNotification=function(e){var t=this,n=this.activeRingingCalls.find(function(n){return t.areTransportCallsEqual(n.transportCall,e)});n&&!n.transportCall.intentId&&(n.defer.resolve(),this.activeRingingCalls=this.activeRingingCalls.filter(function(n){return!t.areTransportCallsEqual(n.transportCall,e)}),this.logger.info("Removed ringing call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId))},e.prototype.removeRingingCallByIntentId=function(e){var t=this.activeRingingCalls.find(function(t){return!!e&&t.transportCall.intentId==e});t&&(t.defer.resolve(),this.activeRingingCalls=this.activeRingingCalls.filter(function(t){return!(e&&t.transportCall.intentId==e)}),this.logger.info("Removed ringing transport  call with intentId "+e))},e.prototype.addIntentIdToRingingCall=function(e){var t=this,n=this.activeRingingCalls.find(function(n){return t.areTransportCallsEqual(n.transportCall,e)});n&&(n.transportCall.intentId=e.intentId,this.logger.info("Added intentId to ringing transport call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId+" and intentId "+e.intentId))},e.prototype.addActiveCall=function(e){this.activeCompanionDeviceCalls.push(e),this.logger.info("Added active call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeActiveCall=function(e){var t=this,n=this.isCallActiveOnTransport(e);return this.activeCompanionDeviceCalls=this.activeCompanionDeviceCalls.filter(function(n){return!t.areTransportCallsEqual(n,e)}),this.logger.info("Removed call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId),0==this.activeCompanionDeviceCalls.filter(function(e){return 1!=e.disableCallTransfer}).length&&this.isActiveCompannionDeviceCallsDeferred&&(this.isActiveCompannionDeviceCallsDeferred.resolve(),this.isActiveCompannionDeviceCallsDeferred=void 0),n},e.prototype.updateCall=function(e,t){var n=this;this.activeCompanionDeviceCalls=this.activeCompanionDeviceCalls.filter(function(t){return!n.areTransportCallsEqual(t,e)}),this.activeCompanionDeviceCalls.push(t);var r=this.activeRingingCalls.find(function(t){return n.areTransportCallsEqual(t.transportCall,e)});r&&(r.transportCall=t)},e.prototype.isCallActiveOnTransport=function(e){var t=this;return-1!==this.activeCompanionDeviceCalls.findIndex(function(n){return t.areTransportCallsEqual(n,e)})},e.prototype.getTransportCallWithDetails=function(e){var t=this;return this.activeCompanionDeviceCalls.find(function(n){return t.areTransportCallsEqual(n,e)})},e.prototype.getCallStateForCall=function(e){var t=this.getTransportCallWithDetails(e);return t?t.callState:void 0},e.prototype.setCallStateForCall=function(e,t){var n=this;this.activeCompanionDeviceCalls.find(function(t){return n.areTransportCallsEqual(t,e)}).callState=t,this.logger.info("Updated call state for the transport call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.disableCallTransfer=function(){this.activeCompanionDeviceCalls.forEach(function(e){e.disableCallTransfer=!0}),this.isActiveCompannionDeviceCallsDeferred&&(this.isActiveCompannionDeviceCallsDeferred.resolve(),this.isActiveCompannionDeviceCallsDeferred=void 0),this.logger.info("disable IncallDevice Settings for all transport calls - "+JSON.stringify(this.activeCompanionDeviceCalls))},e.prototype.enableCallTransfer=function(){this.activeCompanionDeviceCalls.forEach(function(e){e.disableCallTransfer=!1}),this.logger.info("enabled IncallDevice Settings for activeCompanionDeviceCalls")},e.prototype.areTransportCallsEqual=function(e,t){return e.callId==t.callId},e.prototype.isCallEqualTransportCall=function(e,t){var n=e.callId==t.callId||t.conversationId==e.conversationId&&(!t.messageId||"0"==t.messageId||t.messageId==e.messageId);if(!n&&this.transportDependencyProviderService.$injector.get("conversationsService")){var r=e.getCallingConversation();r.isOneToOnePstn()&&(n=r.members.find(function(e){return SkypeX.Services.ChatServiceUtils.isPstnMri(e.id)}).id==t.pstnMri&&!!t.pstnMri)}return n},e.prototype.cleanupCallKeeper=function(){this.activeCompanionDeviceCalls=[],this.states=void 0},e.prototype.getStates=function(){return this.states.set(r.ActiveCallDetails,JSON.stringify(this.activeCompanionDeviceCalls)),this.states},e}();t.TransportCallKeeper=o},344:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r,o){this.causeId=e,this.endpoint=t,this.commandDetails=n,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,n.companionResponseRequired=!1;var i=r.$q;this.onResponseReceived=i.defer(),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0);var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s)}return e.prototype.onCommandExecuted=function(e){var t=this.endpoint.getEndpointId();if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({endPointId:t,requestId:this.causeId});else{var n=void 0,r=void 0;e?(n="Error response: "+e.errorDetails,r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({endPointId:t,requestId:this.causeId,errorMessage:r,message:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+r+", errorDetails - "+n)}},e}();t.ResponseCommand=r},45:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r){this.commandDetails=e,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=n,this.command=r,this.logger=t.loggingService.newLogger(""+this.constructor.name),this.logger.info("Instantiated "+this.constructor.name+", subtype "+r+".")}return e.prototype.action=function(){var e=this.transportDependencyProviderService,t=e.$q,n=e.callingService,r=e.constants;this.responseDeferred=t.defer();var o=n.getActiveCall();return o?this.canExecuteAction()?this.executeCommandSpecificAction(o):this.markFailureResponseNotAllowed("Capability is disabled for current command."):this.markFailureResponse("No active call going on.",r.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent),this.responseDeferred},e.prototype.markSuccessfulResponse=function(){this.wrapUpResponse(!0)},e.prototype.markFailureResponse=function(e,t){this.wrapUpResponse(!1,e,t)},e.prototype.markFailureResponseOperationFailed=function(e){this.markFailureResponse(e,this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed)},e.prototype.markFailureResponseInvalidCommand=function(){this.logger.error("Command not supported: "+this.command+"."),this.markFailureResponse("Received unexpected command subtype on this command: "+this.command,this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidCommandRequest)},e.prototype.markFailureResponseNotAllowed=function(e){this.markFailureResponse(e,this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.remoteController.capabilityDisabled)},e.prototype.markFailureStateAlreadySet=function(e){this.markFailureResponse("State already set, "+e,this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.stateAlreadySet)},e.prototype.wrapUpResponse=function(e,t,n){var r={};e?(this.incomingCommandReceivedScenario.stop({message:"Success: "+this.command}),r.statusCode=200,this.responseDeferred.resolve(r)):(this.logger.error(t),this.incomingCommandReceivedScenario.fail({message:"Error: "+t}),r.errorCode=n,r.errorDetails=t,this.responseDeferred.reject(r))},e}();t.RemoteControllerIncomingBaseCommand=r}},[2678]);