webpackJsonp([16],{2178:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(87),n(2183),n(307),n(2186),n(2188),n(2192)},2179:function(t,e){t.exports='<div>\n  <div ng-show="sdc.state === sdc.DropdownStates.INITIAL">\n    <div ng-if="::sdc.teamsProductName" class="settings-dropdown-header" acc-role="menu-item" data-tid="product-name-and-type" ng-bind-html="::sdc.teamsProductName">\n    </div>\n\n    <ul acc-role="menu dialog" class="dropdown-menu" ng-click="sdc.onMenuRootClick()" id="settings-dropdown-list">\n      \x3c!-- Account Profile --\x3e\n      <li class="{{::sdc.isGuestUser ? \'profile-container-inactive\' : \'profile-container\'}}" acc-role="{{::sdc.isGuestUser ? \'none\' : \'menu-item\'}}" ng-click="::sdc.isGuestUser ? null : sdc.changeProfile()" ng-if="::!sdc.enableMeMenuV2">\n        <div class="login-user-profile">\n          <div aria-hidden="true" class="profile-img-parent">\n            <profile-picture ng-if="!!sdc.authenticatedUserUpn" css-class="user-picture img-circle" principal-name="sdc.authenticatedUserUpn" display-name="sdc.authenticatedUserName" source="settings"></profile-picture>\n          </div>\n          <div class="profile-name">\n            <div class="profile-name-text single-line-truncation" aria-hidden="true">\n              <span ng-bind="sdc.authenticatedUserName"></span>\n              <span ng-if="::sdc.isGuestUser" translate-once="{{::$root.resources.strings.guest_tenant_postfix}}"></span>\n            </div>\n            <button class="ts-sym change-picture app-small-font" ng-if="::sdc.enableUserEditProfile" ng-click="sdc.changeProfile();" data-tid="skypeStatusDropdownMenuItem-changepic" simple-focus="sdc.onFocus($event)" simple-blur="sdc.onBlur($event)">\n              {{::sdc.changeUserInfoDisplayText}}\n            </button>\n          </div>\n        </div>\n      </li>\n      \x3c!-- Account Profile V2 --\x3e\n      <li ng-if="::sdc.enableMeMenuV2" class="primary-account-profile">\n        \x3c!-- Person icon --\x3e\n        <div class="profile-img-parent" acc-role="menu-item">\n          <profile-picture ng-if="!!sdc.authenticatedUserUpn" principal-name="::sdc.authenticatedUserUpn" display-name="sdc.authenticatedUserName" source="settings"></profile-picture>\n          <button class="ts-sym change-picture-overlay icons-no-fill" data-tid="skypeStatusDropdownMenuItem-changepic" ng-if="::sdc.enableUserEditProfile" ng-click="::sdc.isMSAEditProfilePictureEnabled ? sdc.editPictureClicked() : sdc.changeProfile();" tabindex="-1" title="{{::$root.resources.strings.user_profile_change_picture_v2|translate}}" aria-label="{{::$root.resources.strings.user_profile_change_picture_v2|translate}}">\n            <ng-include class="change-picture-icon" src="\'[[staticsPath]]/hashed/svg/icons-camera-dd5773e.html\'"></ng-include>\n          </button>\n          <skype-status ng-if="sdc.showSelfPresence" mri="sdc.authenticatedUserMri" aria-hidden="true"></skype-status>\n        </div>\n        \x3c!-- Account details --\x3e\n        <div class="profile-details-container">\n          \x3c!-- Name --\x3e\n          <div class="profile-name-text single-line-truncation" aria-hidden="true">\n            <span ng-bind="sdc.authenticatedUserName" ng-if="::!sdc.isLivePersonaCardInMeControlEnabled"></span>\n            <span ng-bind="sdc.authenticatedUserName" ng-if="::sdc.isLivePersonaCardInMeControlEnabled" person-card pc-upn="::ctrl.upn" pc-mri="sdc.authenticatedUserMri" pc-display-name="::ctrl.userName" pc-lpc-client-scenario="MicrosoftTeams_MeControl" pc-disable-hover="true"></span>\n            <span ng-if="::sdc.isGuestUser" translate-once="{{::$root.resources.strings.guest_tenant_postfix}}"></span>\n          </div>\n          \x3c!-- Email --\x3e\n          <div class="profile-email-text single-line-truncation" aria-hidden="true">\n            <span ng-bind="::sdc.authenticatedUserEmail"></span>\n          </div>\n          \x3c!-- Status & Presence actions --\x3e\n          <div class="profile-presence-status-container" ng-if="sdc.showSelfPresence || sdc.canSetStatusMessage">\n            <div ng-if="sdc.showSelfPresence">\n              <button acc-role="menu-item" class="ts-sym profile-action profile-set-presence-button" ng-click="sdc.closeOpenDropdowns();sdc.onChangePresenceClick($event, this)" ng-focus="sdc.onFocusPresenceButton()" ng-hover="sdc.onFocusPresenceButton()" aria-label="{{sdc.presenceAriaLabel}}" ng-attr-acc-focus-default="{{sdc.showSelfPresence}}" space-action id="settings-dropdown-user-presence-button" data-tid="personAvailabilityPopover">\n                <skype-status show-text="true" mri="sdc.authenticatedUserMri" aria-hidden="true"></skype-status>\n                <ng-include ng-if="sdc.canUserChangePresence" src="\'svg/icons-dropdown-small.html\'" class="dropdown-icon" aria-hidden="true"></ng-include>\n              </button>\n            </div>\n            \x3c!-- only show when both presence & status are shown --\x3e\n            <div class="action-separator" ng-if="sdc.showSelfPresence && sdc.canSetStatusMessage">\n            </div>\n            <div class="profile-set-status-container" ng-if="sdc.canSetStatusMessage">\n              <button acc-role="menu-item" id="settings-dropdown-update-status-button" data-tid="setStatusNoteButton" class="ts-sym profile-action single-line-truncation" ng-click="sdc.setStatusNote()" ng-attr-acc-focus-default="{{!sdc.showSelfPresence && sdc.canSetStatusMessage}}" aria-label="{{sdc.getChangeStatusText()}}" post-render="$parent.focusOnStatusMessage">\n                {{sdc.getChangeStatusText()}}\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n      \x3c!-- Presence --\x3e\n      <li acc-role="menu-item has-sub-menu" class="popover-parent" ng-if="sdc.showSelfPresence && !sdc.enableMeMenuV2" ng-click="sdc.closeOpenDropdowns()" ng-attr-acc-focus-default="{{sdc.showSelfPresence && !sdc.enableMeMenuV2}}">\n        <button class="ts-sym" aria-label="{{sdc.getChangeStatusAriaLabel()}}" aria-labelledby="personAvailabilityPopover personal-skype-status-text" id="personAvailabilityPopover" data-tid="personAvailabilityPopover">\n          <div>\n            <skype-status mri="sdc.authenticatedUserMri" show-text="true"></skype-status>\n            <ng-include ng-if="sdc.canUserChangePresence" class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n          </div>\n        </button>\n\n        \x3c!-- FLW Presence --\x3e\n        <ul ng-if="sdc.canUserChangePresence && sdc.shouldShowFlwPresence" class="app-default-menu popover child-popover settings-dropdown-status" acc-role="sub-menu" tabindex="-1">\n          <li ng-if="sdc.canUserSetBusyOnShiftStatus" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_busy|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 2)" data-tid="skypeStatusDropdownMenuItem-busy">\n              <static-skype-status status="2" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.canUserSetBusyOnShiftStatus" acc-role="menu-separator" class="divider"></li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_reset|translate}}">\n            <button class="reset-presence ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 11)" data-tid="skypeStatusDropdownMenuItem-reset">\n              <ng-include class="icon-reset" alt="{{($root.resources.strings.status_reset|translate)}}" role="presentation" src="\'svg/icons-retry.html\'"></ng-include>\n              <span class="status-text">{{::$root.resources.strings.status_reset|translate}}</span>\n            </button>\n          </li>\n        </ul>\n        \x3c!-- IW Presence --\x3e\n        <ul ng-if="sdc.canUserChangePresence && !sdc.shouldShowFlwPresence" class="app-default-menu popover child-popover settings-dropdown-status" acc-role="sub-menu" tabindex="-1">\n          <li acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_online|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 1)" data-tid="skypeStatusDropdownMenuItem-online">\n              <static-skype-status status="1" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="!sdc.enablePresenceInTFL" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_busy|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 2)" data-tid="skypeStatusDropdownMenuItem-busy">\n              <static-skype-status status="2" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          \x3c!-- Use OutToLunch (6) to indicate DoNotDisturb --\x3e\n          <li ng-if="!sdc.enablePresenceInTFL" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_doNotDisturb|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 6)" data-tid="skypeStatusDropdownMenuItem-donotdisturb">\n              <static-skype-status status="6" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="!sdc.unfiedPresenceStatesEnabled" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_away|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 3)" data-tid="skypeStatusDropdownMenuItem-away">\n              <static-skype-status status="3" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled && !sdc.enablePresenceInTFL" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_beRightBack|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 7)" data-tid="skypeStatusDropdownMenuItem-berightback">\n              <static-skype-status status="7" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_appear_away|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 10)" data-tid="skypeStatusDropdownMenuItem-appearaway">\n              <static-skype-status status="10" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.enableAppearOfflineStatus" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_appearOffline|translate}}">\n            <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 20)" data-tid="skypeStatusDropdownMenuItem-appearoffline">\n              <static-skype-status status="20" show-text="true"></static-skype-status>\n            </button>\n          </li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.enableExpiryStatusMenu && !sdc.enablePresenceInTFL" acc-role="menu-separator" class="divider"></li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.enableExpiryStatusMenu && !sdc.enablePresenceInTFL" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_schedule_expiry|translate}}">\n            <button class="reset-presence ts-sym" alt="{{::$root.resources.strings.status_schedule_expiry|translate}}" ng-click="sdc.startSetExpiryDropdown($event)" data-tid="skypeStatusDropdownMenuItem-schedule">\n              <ng-include class="icon-reset" role="presentation" src="\'svg/icons-recents.html\'"></ng-include>\n              <span class="status-text">{{::$root.resources.strings.status_schedule_expiry|translate}}</span>\n            </button>\n          </li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="menu-separator" class="divider"></li>\n          <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="sub-menu-item" class="menuitem" aria-label="{{::$root.resources.strings.status_reset|translate}}">\n            <button class="reset-presence ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 11)" data-tid="skypeStatusDropdownMenuItem-reset">\n              <ng-include class="icon-reset" alt="{{($root.resources.strings.status_reset|translate)}}" role="presentation" src="\'svg/icons-retry.html\'"></ng-include>\n              <span class="status-text">{{::$root.resources.strings.status_reset|translate}}</span>\n            </button>\n          </li>\n        </ul>\n      </li>\n      \x3c!-- Show Status Message --\x3e\n      <li id="settingsDropdownStatusMessage" ng-if="sdc.showStatusMessage" ng-attr-acc-focus-default="{{!sdc.showSelfPresence && sdc.showStatusMessage}}" aria-label="{{sdc.statusAriaLabel}}" tabindex="-1" ng-class="(sdc.isStatusNoteButtonFocused ? \'status-buttons-show\' : \'status-buttons-hide\')" class="status-message-list-item">\n        <div ng-if="::!sdc.enableStatusNoteV2" class="status-background status-message" ng-bind="sdc.statusMessage"></div>\n        <div ng-if="::sdc.enableStatusNoteV2" class="status-background status-message" compile-html="sdc.statusMessage"></div>\n        <div class="status-lower-options-info status-background">\n          <div class="expiryTimeLabel" ng-if="sdc.expirationDisplay && sdc.showExpiryTime">\n            {{ sdc.expirationDisplay }}\n          </div>\n        </div>\n        <button id="settings-dropdown-status-note-actions-edit" ng-if="sdc.canSetStatusMessage && sdc.showStatusMessage" acc-role="menu-item" ng-focus="sdc.onStatusNoteButtonFocused()" ng-blur="sdc.onStatusNoteButtonBlur()" post-render="$parent.focusOnStatusMessage" aria-label="{{::$root.resources.strings.settings_options_status_note_edit | translate}}" aria-describedby="settingsDropdownStatusMessage" title="{{::$root.resources.strings.settings_options_status_note_edit | translate}}" class="status-button status-background leftmost-button" space-action ng-click="sdc.editStatusNote()" data-tid="settings-dropdown-status-edit">\n          <ng-include src="\'svg/icons-edit.html\'" class="status-button-icon status-buttons-show-hide-wrapper"></ng-include>\n        </button>\n        <button acc-role="menu-item" ng-if="sdc.canSetStatusMessage && sdc.showStatusMessage" ng-focus="sdc.onStatusNoteButtonFocused()" ng-blur="sdc.onStatusNoteButtonBlur()" ng-keydown="sdc.preventLeftArrowCloseStatusMenu($event)" aria-label="{{::$root.resources.strings.settings_options_status_note_delete | translate}}" title="{{::$root.resources.strings.settings_options_status_note_delete | translate}}" class="status-button non-leftmost-button status-background" space-action ng-click="sdc.deleteStatusNote()" data-tid="settings-dropdown-status-delete">\n          <ng-include src="\'svg/icons-delete.html\'" class="non-leftmost-svg status-button-icon status-buttons-show-hide-wrapper"></ng-include>\n        </button>\n      </li>\n      \x3c!-- Show OOF Message --\x3e\n      <li id="settingsDropdownOofMessage" ng-if="sdc.showOOFMessage" ng-attr-acc-focus-default="{{!sdc.showSelfPresence && sdc.showOOFMessage}}" aria-label="{{sdc.statusAriaLabel}}" tabindex="-1" class="status-message-list-item">\n        <div class="oof-background">\n          <div class="oof-title" translate-once="{{::$root.resources.strings.out_of_office_title}}"></div>\n          <div class="oof-message" title="{{sdc.oofMessage}}" ng-bind="sdc.oofMessage"></div>\n        </div>\n      </li>\n      <li ng-if="::sdc.isMeMenuL1Enabled" class="account-list-container">\n        <div class="settingsManageAccount" ng-controller="SettingsManageAccountDropdownController as manageAccountController" ng-include="\'components/settings-dropdown/settings-manage-account-dropdown/settings-manage-account-dropdown-v2.html\'">\n        </div>\n      </li>\n      \x3c!-- Update status --\x3e\n      <li acc-role="menu-item" ng-if="sdc.canSetStatusMessage && sdc.showSetStatusMessage && !sdc.enableMeMenuV2" ng-attr-acc-focus-default="{{!sdc.showSelfPresence && sdc.canSetStatusMessage && sdc.showSetStatusMessage && !sdc.enableMeMenuV2}}" aria-label="{{::$root.resources.strings.settings_options_status_note | translate }}" id="settingsDropdown-statusMessageListItemUnset">\n        <button data-tid="setStatusNoteButton" id="settings-status-unset-button" class="ts-sym left-align-icon" space-action post-render="$parent.focusOnStatusMessage" ng-click="sdc.setStatusNote()">\n          <ng-include src="\'svg/icons-edit-status.html\'"></ng-include>\n          {{ ::$root.resources.strings.settings_options_status_note | translate }}\n        </button>\n      </li>\n      <li acc-role="menu-separator" class="divider" ng-if="::(sdc.isMeMenuL1Enabled && sdc.enableSaved)"></li>\n      \x3c!-- Saved items --\x3e\n      <li acc-role="menu-item" ng-if="::(sdc.isMeMenuL1Enabled && sdc.enableSaved)" ng-attr-acc-focus-default="{{sdc.enableMeMenuV2 && !sdc.isAddAccountEnabled}}">\n        <button class="ts-sym left-align-icon" ng-click="sdc.navigateToSaved(); sdc.hide()" aria-label="{{::$root.resources.strings.settings_saved_aria_label | translate}}" data-tid="savedMessagesMenuItem" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="Saved">\n          <svg class="app-svg icons-bookmark icon-hide-on-hover icons-default-fill">\n            <use xlink:href="#icons-bookmark" href="#icons-bookmark"/>\n          </svg>\n          {{::$root.resources.strings.stars_tab_title | translate}}\n        </button>\n      </li>\n      <li acc-role="menu-separator" class="divider" ng-if="sdc.enableMeMenuV2 && (sdc.isAddAccountEnabled || sdc.enableMultiAccountManagement)"></li>\n      \x3c!-- Manage Accounts --\x3e\n      <li acc-role="menu-item" ng-if="::sdc.enableMultiAccountManagement" aria-label="{{sdc.manageAccountsText}}" id="settingsDropdown-manageAccountListItem">\n        <button data-tid="settingsDropdown-manageAccountsButton" id="settings-manage-account-button" class="ts-sym left-align-icon icons-no-fill" space-action ng-click="sdc.manageAccount()">\n          <ng-include src="\'svg/icons-switch.html\'" ng-if="::!sdc.isMeMenuL1Enabled"></ng-include>\n          <ng-include src="\'svg/icons-accounts-tab.html\'" ng-if="::sdc.isMeMenuL1Enabled"></ng-include>\n          {{sdc.manageAccountsText}}\n        </button>\n      </li>\n      \x3c!-- Add Account --\x3e\n      <li acc-role="menu-item" ng-if="sdc.isAddAccountEnabled" aria-label="{{::$root.resources.strings.settings_options_add_account | translate }}" ng-attr-acc-focus-default="{{::sdc.isAddAccountEnabled}}" id="settingsDropdown-addAccountListItem">\n        <button data-tid="addAccountButton" id="settings-add-account-button" class="ts-sym left-align-icon icons-no-fill" space-action ng-click="sdc.addAccount()">\n          <ng-include src="\'svg/icons-add.html\'"></ng-include>\n          {{ ::sdc.addAccountText }}\n        </button>\n      </li>\n      \x3c!-- Use Personal External --\x3e\n      <li acc-role="menu-item" ng-if="sdc.isExternalTflLinkVisible" aria-label="{{::$root.resources.strings.settings_options_use_teams_for_personal | translate }}" id="settingsDropdown-useTeamsForPersonalListItem">\n        <button data-tid="useTeamsPersonalButton" id="settings-use-personal-button" class="ts-sym left-align-icon icons-no-fill" space-action ng-click="sdc.onUsePersonalClick()">\n          <ng-include src="\'svg/icons-open-new-window.html\'" class="icons-default-fill"></ng-include>\n          {{::$root.resources.strings.settings_options_use_teams_for_personal | translate}}\n        </button>\n      </li>\n      <li acc-role="menu-separator" class="divider" ng-if="sdc.displaySettingsComponents || (!sdc.displaySettingsComponents && !sdc.isMeMenuL1Enabled)">\n      </li>\n      \x3c!-- Saved items --\x3e\n      <li acc-role="menu-item" ng-if="::(!sdc.isMeMenuL1Enabled && sdc.enableSaved)" ng-attr-acc-focus-default="{{!sdc.isMeMenuL1Enabled && sdc.enableMeMenuV2 && !sdc.isAddAccountEnabled}}">\n        <button class="ts-sym left-align-icon" ng-click="sdc.navigateToSaved(); sdc.hide()" aria-label="{{::$root.resources.strings.settings_saved_aria_label | translate}}" data-tid="savedMessagesMenuItem" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="Saved">\n          <svg class="app-svg icons-bookmark icon-hide-on-hover icons-default-fill">\n            <use xlink:href="#icons-bookmark" href="#icons-bookmark"/>\n          </svg>\n          {{::$root.resources.strings.stars_tab_title | translate}}\n        </button>\n      </li>\n      \x3c!-- Settings --\x3e\n      <li acc-role="menu-item" ng-if="::sdc.displaySettingsComponents" data-tid="optionsMenuItem">\n        <button class="ts-sym left-align-icon" data-tid="settingsDropdownOptionsButton" ng-click="sdc.optionsSettingsDialogShow();sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="Options">\n          <ng-include src="\'svg/icons-settings.html\'"></ng-include>\n          {{::$root.resources.strings.settings_options | translate}}\n        </button>\n      </li>\n      \x3c!-- Teams Cast --\x3e\n      <li acc-role="menu-item" ng-if="(sdc.displaySettingsComponents && sdc.displayCastingElement)">\n        <button class="ts-sym left-align-icon" id="teamsCastButton" ng-click="sdc.openCastWindow();sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="teamsCast">\n          <ng-include src="\'svg/icons-cast.html\'"></ng-include>\n          {{::$root.resources.strings.teams_cast | translate}}\n        </button>\n      </li>\n      <li acc-role="menu-separator" class="divider" ng-if="sdc.displaySettingsComponents && (sdc.layoutService.showDevMenus || sdc.showRingSelector)"></li>\n      <li class="popover-parent" acc-role="menu-item has-sub-menu" ng-if="::(sdc.displaySettingsComponents && sdc.layoutService.showDevMenus)" ng-click="sdc.closeOpenDropdowns()">\n        <button class="ts-sym">\n          Dev Tools\n          <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n        </button>\n        <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1">\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.settings(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_experimental_settings}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_experimental_settings}}"></button>\n          </li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.tmpsettings(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_tmp_settings}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_tmp_settings}}">\n            </button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::!sdc.layoutService.hideDebug">\n            <button class="ts-sym" ng-click="sdc.debug(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_debug_settings}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_debug_settings}}"></button>\n          </li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.layoutService.hideDebug = !sdc.layoutService.hideDebug; sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{sdc.layoutService.hideDebug ? $root.resources.strings.main_gear_show_debug_elements : $root.resources.strings.main_gear_hide_debug_elements}}">\n              <span ng-if="sdc.layoutService.hideDebug" translate-once="{{::$root.resources.strings.main_gear_show_debug_elements}}"></span>\n              <span ng-if="!sdc.layoutService.hideDebug" translate-once="{{::$root.resources.strings.main_gear_hide_debug_elements}}"></span>\n            </button>\n          </li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.authenticationService.clearAdalCache(); sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_clear_adal_auth_cache}}">\n              <span translate-once="{{::$root.resources.strings.main_gear_clear_adal_auth_cache}}"></span>\n            </button>\n          </li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.authenticationService.clearSkypeCache(); sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_clear_skype_auth_cache}}">\n              <span translate-once="{{::$root.resources.strings.main_gear_clear_skype_auth_cache}}"></span>\n            </button>\n          </li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.openUiToolkit(); sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_open_ui_toolkit}}">\n              <span translate-once="{{::$root.resources.strings.main_gear_open_ui_toolkit}}"></span>\n            </button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="sdc.showCortanaDevTools">\n            <button class="ts-sym" ng-click="sdc.cortanaDevToolsDialog(); sdc.hide()">\n              <span>Cortana Dev Tools</span>\n            </button>\n          </li>\n        </ul>\n      </li>\n      <li class="popover-parent" acc-role="menu-item has-sub-menu" ng-if="::(sdc.displaySettingsComponents && sdc.showApiSelector)" ng-click="sdc.closeOpenDropdowns()">\n        <button class="ts-sym">\n          Service: {{::sdc.currentApiDisplayName}}\n          <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n        </button>\n        <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1">\n          <li ng-repeat="api in sdc.apis" acc-role="sub-menu-item" ng-class="::{ active: api.active }">\n            <button class="ts-sym" ng-click="sdc.switchApi(api.identifier); sdc.hide()">\n              {{::api.displayName}}\n              <ng-include ng-if="api.active" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n            </button>\n          </li>\n        </ul>\n      </li>\n      <li class="popover-parent" acc-role="menu-item has-sub-menu" ng-if="::(sdc.displaySettingsComponents && sdc.showRingSelector)" ng-click="sdc.closeOpenDropdowns()">\n        <button class="ts-sym">\n          {{::sdc.ringSelectorTitle}}: {{::sdc.currentWebRingDisplayName}}\n          <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n        </button>\n        <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1" ng-class="{ \'settings-dropdown-many-rings\': (sdc.rings.length > 4) }">\n          <li ng-repeat="ring in sdc.rings" ng-class="{ active: ring.active }" acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.switchRing(ring.identifier); sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::ring.displayName}}">\n              {{::ring.displayName}}\n              <ng-include ng-if="ring.active" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n            </button>\n          </li>\n          <li acc-role="menu-separator" class="divider"></li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.showRingSelectionDialog(); sdc.hide()" translate-once="{{::$root.resources.strings.ringSetting_more_options}}"></button>\n          </li>\n        </ul>\n      </li>\n      <li acc-role="menu-separator" class="divider" ng-if="(sdc.displaySettingsComponents && sdc.zoomUiEnabled)">\n      </li>\n      <li ng-if="(sdc.displaySettingsComponents && sdc.zoomUiEnabled)">\n        <div class="zoom-ui-menu">\n          <span class="zoom-ui-title" translate-once="{{::$root.resources.strings.zoom_percent_ui_title_string}}"></span>\n          <button acc-role="menu-item" class="zoom-icon inset-border inset-border-round inset-border-themed app-icons-fill-hover" ng-click="sdc.zoomOut();" id="zoom-out-button" title="{{::$root.resources.strings.zoom_out_ui_aria_label | translate}}" aria-label="{{::$root.resources.strings.zoom_out_ui_aria_label | translate}}" data-tid="zoom-out-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="zoomOut">\n            <ng-include src="\'svg/icons-screen-zoom-out.html\'"/>\n          </button>\n          <span class="zoom-percent-ui">({{sdc.zoomPercentString}})</span>\n          <button acc-role="menu-item" class="zoom-icon inset-border inset-border-round inset-border-themed app-icons-fill-hover" ng-click="sdc.zoomIn();" id="zoom-in-button" title="{{::$root.resources.strings.zoom_in_ui_aria_label | translate}}" aria-label="{{::$root.resources.strings.zoom_in_ui_aria_label | translate}}" data-tid="zoom-in-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="zoomIn">\n            <ng-include src="\'svg/icons-screen-zoom-in.html\'"/>\n          </button>\n          <button acc-role="menu-item" class="zoom-icon inset-border inset-border-round inset-border-themed app-icons-fill-hover" ng-click="sdc.zoomReset();" id="zoom-reset-button" title="{{::$root.resources.strings.zoom_reset_ui_aria_label | translate}}" aria-label="{{::$root.resources.strings.zoom_reset_ui_aria_label | translate}}" data-tid="zoom-reset-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="zoomReset">\n            <ng-include src="\'svg/icons-reset-zoom.html\'"/>\n          </button>\n        </div>\n      </li>\n      <li acc-role="menu-separator" ng-if="::sdc.displaySettingsComponents" class="divider"></li>\n      <li acc-role="menu-item" ng-if="::(sdc.displaySettingsComponents && sdc.displayPreviewButtonInMeMenu)">\n        <button class="ts-sym" data-tid="openPreviewNewFeaturesDialogButton" ng-click="sdc.openPreviewNewFeaturesDialog(); sdc.hide()" translate-once="{{::$root.resources.strings.settings_preview_new_features}}">\n        </button>\n      </li>\n      <li acc-role="sub-menu-item" ng-if="!sdc.isFreemiumAdmin && sdc.isAdmin && sdc.enableMopoLink && sdc.displaySettingsComponents">\n        <a data-tid="mopoUrl" href="{{::sdc.mopoLinkUrl}}" ng-click="sdc.hide()" target="_blank" aria-label="{{::$root.resources.strings.settings_manage_aria_label | translate}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_admin_portal}}" translate-once="{{::$root.resources.strings.main_gear_admin_portal}}">\n        </a>\n      </li>\n      <li acc-role="menu-item" ng-if="::(sdc.displaySettingsComponents && sdc.isFreemiumAdmin)" data-prevent-trigger-refocus="true">\n        <button class="ts-sym" ng-click="sdc.gotoManage(); sdc.hide()" id="manage-button" aria-label="{{::$root.resources.strings.settings_manage_aria_label | translate}}" data-tid="manage-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_manage}}" translate-once="{{::$root.resources.strings.main_gear_manage}}">\n        </button>\n      </li>\n      <li acc-role="menu-item" ng-if="sdc.displaySettingsComponents && sdc.enableHelpItem && !sdc.enableNewHelpInAppBar">\n        <button class="ts-sym" ng-click="sdc.gotoHelp(); sdc.hide()" id="help-button" aria-label="{{::$root.resources.strings.settings_help_aria_label | translate}}" data-tid="help-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_help}}" translate-once="{{::$root.resources.strings.main_gear_help}}"></button>\n      </li>\n      <li acc-role="menu-item" ng-if="::sdc.displaySettingsComponents">\n        <button class="ts-sym" ng-click="sdc.keyboardShortcuts(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_keyboard_shortcuts}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_keyboard_shortcuts}}"></button>\n      </li>\n      <li class="popover-parent" ng-if="::sdc.displaySettingsComponents" data-tid="about-menu" acc-role="menu-item has-sub-menu" ng-click="sdc.closeOpenDropdowns()">\n        <button class="ts-sym" aria-label="{{::$root.resources.strings.settings_about_aria_label | translate}}">\n          {{::$root.resources.strings.main_gear_about | translate}}\n          <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n        </button>\n        <ul class="app-default-menu popover child-popover move-up" acc-role="sub-menu" tabindex="-1">\n          <li acc-role="sub-menu-item" ng-if="sdc.isDesktopApp">\n            <button class="ts-sym" ng-click="sdc.about(); sdc.hide()" id="about-button" data-tid="about-button" translate-once="{{::$root.resources.strings.settings_version}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_about}}"></button>\n          </li>\n          <li acc-role="sub-menu-item">\n            <a data-tid="legal" href="{{::sdc.legalLinkUrl}}" ng-click="sdc.hide()" target="_blank" translate-once="{{::$root.resources.strings.main_gear_legal}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_legal}}">\n            </a>\n          </li>\n          <li acc-role="sub-menu-item">\n            <button class="ts-sym" ng-click="sdc.openPrivacyLink(); sdc.hide()" id="privacy-button" data-tid="privacy-cookies" translate-once="{{::$root.resources.strings.main_gear_privacy}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_privacy}}"></button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::sdc.hasTeamsPrivacyFaqUrl()">\n            <button class="ts-sym" ng-click="sdc.openPrivacyFaqLink(); sdc.hide()" id="teams-privacy-faq-button" data-tid="teams-privacy-faq" translate-once="{{::$root.resources.strings.main_gear_teams_privacy_faq}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_teams_privacy_faq}}"></button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::sdc.enableDesktopTpn">\n            <button class="ts-sym" ng-click="sdc.desktopThirdPartyNoticeShow(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_desktop_third_party_notice}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_desktop_third_party_notice}}"></button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::sdc.enableDesktopTpn">\n            <button class="ts-sym" data-tid="third-party-notice-button" ng-click="sdc.thirdPartyNoticeDialogShow(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_desktop_browser_third_party_notice}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_desktop_browser_third_party_notice}}"></button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::sdc.enableWebTPN">\n            <button class="ts-sym" data-tid="third-party-notice-button" ng-click="sdc.thirdPartyNoticeDialogShow(); sdc.hide()" translate-once="{{::$root.resources.strings.main_gear_third_party_notice}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_third_party_notice}}"></button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::sdc.showPublicDevPreviewSetting" ng-class="::{\'active\': sdc.publicDevPreviewEnabled}">\n            <button class="ts-sym" ng-click="sdc.togglePublicDevPreview(true); sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::sdc.publicDevPreviewEnabled ? \'Disable PublicDevPreview\' : \'Enable PublicDevPreview\'}}">\n              {{::$root.resources.strings.main_gear_developer_preview | translate}}\n              <ng-include ng-if="::sdc.publicDevPreviewEnabled" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n            </button>\n          </li>\n          <li acc-role="sub-menu-item" ng-if="::sdc.showPublicPreviewSetting" ng-class="::{\'active\': sdc.publicDevPreviewEnabled}">\n            <button class="ts-sym" ng-click="sdc.togglePublicDevPreview(false); sdc.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::sdc.publicDevPreviewEnabled ? \'Disable PublicPreview\' : \'Enable PublicPreview\'}}">\n              {{::$root.resources.strings.main_gear_public_preview | translate}}\n              <ng-include ng-if="::sdc.publicDevPreviewEnabled" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n            </button>\n          </li>\n        </ul>\n      </li>\n      <li acc-role="menu-item" ng-if="::(sdc.displaySettingsComponents && sdc.isDesktopApp)">\n        <button class="ts-sym" ng-click="sdc.checkForUpdates(); sdc.hide()" id="checkupdates-button" aria-label="{{::$root.resources.strings.settings_check_update_aria_label | translate}}" data-tid="checkupdates-button" translate-once="{{::$root.resources.strings.main_gear_check_for_updates}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_check_for_updates}}"></button>\n      </li>\n      <li acc-role="menu-item" ng-if="::(sdc.displaySettingsComponents && sdc.isDesktopHwaApp)">\n        <button class="ts-sym" ng-click="sdc.openStoreListing(); sdc.hide()" id="open-store-listing-button" aria-label="{{::$root.resources.strings.settings_open_store_listing_aria_label | translate}}" data-tid="open-store-listing-button" translate-once="{{::$root.resources.strings.main_gear_open_store_listing}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_open_store_listing}}"></button>\n      </li>\n      <li acc-role="menu-item" ng-if="::(sdc.displaySettingsComponents && sdc.showDesktopDownload)">\n        <button class="ts-sym" ng-click="sdc.downloadApp(); sdc.hide()" id="download-app-button" data-tid="download-app-button" translate-once="{{::$root.resources.strings.main_gear_download_app}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_download_app}}"></button>\n      </li>\n      <li acc-role="menu-item" ng-if="::(sdc.displaySettingsComponents && sdc.showMobileDownload)">\n        <button class="ts-sym" ng-click="sdc.downloadMobileApp(); sdc.hide()" id="download-mobile-app-button" aria-label="{{::$root.resources.strings.settings_download_mobile_app_aria_label | translate}}" data-tid="download-mobile-app-button" translate-once="{{::$root.resources.strings.main_gear_download_mobile_apps}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.selectSettingOption}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.main_gear_download_mobile_apps}}"></button>\n      </li>\n      \x3c!-- Sign out/Log out --\x3e\n      <li acc-role="menu-separator" class="divider"></li>\n      <li acc-role="menu-item" data-tid="logoutMenuItem">\n        <button class="ts-sym" ng-click="sdc.logOut(); sdc.hide()" id="logout-button" aria-label="{{::$root.resources.strings.settings_logout_aria_label | translate}}" data-tid="logout-button" translate-once="{{::$root.resources.strings.main_gear_logout}}" track-outcome="{{::$root.trackConstants.trackOutcome.submit}}" track-scenario="{{::$root.trackConstants.trackScenario.logout}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.settingLogout}}" track-type="{{::$root.trackConstants.trackType.menuItem}}" track-summary="{{::$root.resources.strings.main_gear_logout}}"></button>\n      </li>\n      <li ng-if="::sdc.isFreemiumAdmin" acc-role="menu-separator" class="divider"></li>\n    </ul>\n    <button class="ts-btn ts-btn-primary admin-upgrade-button" ng-if="::sdc.isFreemiumAdmin" ng-click="sdc.onUpgradeClick(); sdc.hide()" id="upgrade-button" type="button" data-tid="upgrade-button" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}" track-scenario="{{::$root.trackConstants.trackScenario.settingsDropdownUpgrade}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.freemium}}" track-name="{{::$root.trackConstants.trackModuleName.settingsDropdownUpgrade}}" track-type="{{::$root.trackConstants.trackType.button}}" track-summary="Freemium Upgrade">{{::$root.resources.strings.manage_tenant_upgrade_button_text | translate}}</button>\n  </div>\n  <div acc-role="focus-default" class="settingsNote" ng-if="sdc.state === sdc.DropdownStates.STATUSNOTE" ng-controller="SettingsSetNoteDropdownController as setNoteController" ng-click="setNoteController.closeOpenDropdowns()" ng-include="\'components/settings-dropdown/settings-set-note-dropdown/settings-set-note-dropdown.html\'">\n  </div>\n  <div acc-role="focus-default" class="settingsManageAccount" ng-if="sdc.state === sdc.DropdownStates.MANAGEACCOUNT" ng-controller="SettingsManageAccountDropdownController as manageAccountController" ng-include="\'components/settings-dropdown/settings-manage-account-dropdown/settings-manage-account-dropdown.html\'">\n  </div>\n  <div acc-role="focus-default" class="settingsExpiry" ng-if="sdc.state === sdc.DropdownStates.EXPIRYSTATUS" ng-controller="SettingsExpiryStatusDropdownController as expiryController" ng-click="expiryController.closeOpenDropdowns()" ng-include="\'components/settings-dropdown/settings-expiry-status-dropdown/settings-expiry-status-dropdown.html\'">\n  </div>\n</div>\n'},2180:function(t,e){t.exports='<div class="popover minwidth-md maxwidth-md popover app-default-menu settings-presence-popover" acc-role="dialog">\n  \x3c!-- FLW Presence --\x3e\n  <ul ng-if="sdc.canUserChangePresence && sdc.shouldShowFlwPresence" class="app-default-menu-ul dropdown-menu" acc-role="menu dialog" tabindex="-1">\n    <li ng-if="sdc.canUserSetBusyOnShiftStatus" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_busy|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 2)" data-tid="skypeStatusDropdownMenuItem-busy">\n        <static-skype-status status="2" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.canUserSetBusyOnShiftStatus" acc-role="menu-separator" class="divider"></li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_reset|translate}}">\n      <button class="reset-presence ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 11)" data-tid="skypeStatusDropdownMenuItem-reset">\n        <ng-include class="icon-reset" alt="{{($root.resources.strings.status_reset|translate)}}" role="presentation" src="\'svg/icons-retry.html\'"></ng-include>\n        <span class="status-text">{{::$root.resources.strings.status_reset|translate}}</span>\n      </button>\n    </li>\n  </ul>\n  \x3c!-- IW Presence --\x3e\n  <ul ng-if="sdc.canUserChangePresence && !sdc.shouldShowFlwPresence" class="app-default-menu-ul dropdown-menu" acc-role="menu dialog" tabindex="-1">\n    <li acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_online|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 1)" data-tid="skypeStatusDropdownMenuItem-online">\n        <static-skype-status status="1" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="!sdc.enablePresenceInTFL" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_busy|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 2)" data-tid="skypeStatusDropdownMenuItem-busy">\n        <static-skype-status status="2" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    \x3c!-- Use OutToLunch (6) to indicate DoNotDisturb --\x3e\n    <li ng-if="!sdc.enablePresenceInTFL" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_doNotDisturb|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 6)" data-tid="skypeStatusDropdownMenuItem-donotdisturb">\n        <static-skype-status status="6" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="!sdc.unfiedPresenceStatesEnabled" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_away|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 3)" data-tid="skypeStatusDropdownMenuItem-away">\n        <static-skype-status status="3" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled && !sdc.enablePresenceInTFL" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_beRightBack|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 7)" data-tid="skypeStatusDropdownMenuItem-berightback">\n        <static-skype-status status="7" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_appear_away|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 10)" data-tid="skypeStatusDropdownMenuItem-appearaway">\n        <static-skype-status status="10" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.enableAppearOfflineStatus" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_appearOffline|translate}}">\n      <button class="ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 20)" data-tid="skypeStatusDropdownMenuItem-appearoffline">\n        <static-skype-status status="20" show-text="true"></static-skype-status>\n      </button>\n    </li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.enableExpiryStatusMenu && !sdc.enablePresenceInTFL" acc-role="menu-separator" class="divider"></li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled && sdc.enableExpiryStatusMenu && !sdc.enablePresenceInTFL" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_schedule_expiry|translate}}">\n      <button class="reset-presence ts-sym" alt="{{::$root.resources.strings.status_schedule_expiry|translate}}" ng-click="sdc.startSetExpiryDropdown($event)" data-tid="skypeStatusDropdownMenuItem-schedule">\n        <ng-include class="icon-reset" role="presentation" src="\'svg/icons-recents.html\'"></ng-include>\n        <span class="status-text">{{::$root.resources.strings.status_schedule_expiry|translate}}</span>\n      </button>\n    </li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="menu-separator" class="divider"></li>\n    <li ng-if="sdc.unfiedPresenceStatesEnabled" acc-role="menu-item focus-default" class="menuitem" aria-label="{{::$root.resources.strings.status_reset|translate}}">\n      <button class="reset-presence ts-sym" ng-click="sdc.setUserPresenceAndHideDropdown($event, 11)" data-tid="skypeStatusDropdownMenuItem-reset">\n        <ng-include class="icon-reset" alt="{{($root.resources.strings.status_reset|translate)}}" role="presentation" src="\'svg/icons-retry.html\'"></ng-include>\n        <span class="status-text">{{::$root.resources.strings.status_reset|translate}}</span>\n      </button>\n    </li>\n  </ul>\n</div>'},2181:function(t,e){t.exports='<button id="setNoteBackButton" class="backButton" data-tid="backButton" ng-click="setNoteController.back()" aria-label="{{::$root.resources.strings.settings_status_dropdown_back_label|translate}}">\n  <ng-include src="\'svg/icons-chevron-left.html\'" class="backArrow"></ng-include>\n  <div class="backText">\n    {{::$root.resources.strings.settings_status_dropdown_back_label|translate}}\n  </div>\n</button>\n<div ng-if="::sdc.enableStatusNoteV2">\n  <div class="statusEditBox" data-tid="statusEditBox" ng-keyup="setNoteController.onInputChange()" ng-keydown="setNoteController.onKeyDown($event)">\n    <div class="statusEditBoxAtMentions">\n      <at-mentions is-tenant-search="true" id="statusnote" hide-logged-in-user="true" hide-empty-results="hideEmptyResults" show-exact-matches-only="showExactMatchesOnly" search-text="searchText" is-at-less-mention="isAtLessMention" contact-selected="setNoteController.addMention(contact, false, event)" search-results-updated="atMentionResultsChanged" custom-class="ts-mentions-search-dropdown-meetup-pane">\n      </at-mentions>\n    </div>\n    <div class="ts-edit-box">\n      <div class="ts-text-watermark" data-tid="textWatermark" ng-click="onPlaceholderClick($event)" aria-hidden="true" ng-style="{\'display\': (!setNoteController.showPlaceholder ? \'none\' : \'block\')}">\n        {{::$root.resources.strings.settings_note_status_set_message_placeholder_mentions|translate}}\n      </div>\n      <textarea sanitized class="statusInput">\n      </textarea>\n      <div class="noteCharsLeftCounter" data-tid="noteCharsLeftCounter" ng-class="{\'error\': setNoteController.noteCharsLeftCounter < 0}" ng-bind="setNoteController.noteCharsLeftCounter">\n      </div>\n    </div>\n  </div>\n  <div class="pinnoteSetting" data-tid="pinnoteSetting">\n    <teams-checkbox prefix-data-tid="settings-pin-note" ng-model="setNoteController.noteIsPinned" label-text="{{::$root.resources.strings.settings_note_pinnote|translate}}" narrator-text="{{::$root.resources.strings.settings_note_pinnote|translate}}" swap-order="false">\n    </teams-checkbox>\n    <div class="has-icon app-icons-fill-hover" tabindex="0" aria-haspopup="true" data-prevent-refocus="true" ng-focus="setNoteController.showPinNoteTooltip($event, true)" ng-mouseenter="setNoteController.showPinNoteTooltip($event, true)" ng-mouseleave="setNoteController.showPinNoteTooltip($event, false)" ng-blur="setNoteController.showPinNoteTooltip($event, false)" aria-label="{{::$root.resources.strings.settings_note_status_pinnote_tooltip_content|translate}}">\n      <ng-include class="icon" src="\'svg/icons-info.html\'"></ng-include>\n    </div>\n  </div>\n</div>\n<div ng-if="::!sdc.enableStatusNoteV2">\n  <textarea sanitized placeholder="{{::$root.resources.strings.settings_note_status_set_message_placeholder|translate}}" ng-model="setNoteController.statusMessageInEdit" ng-keyup="setNoteController.onInputChange()" maxlength="{{::setNoteController.maxStatusLength}}" class="statusInput" id="settingsSetNote-statusInputBox">\n  </textarea>\n  <div class="statusLength">{{setNoteController.statusLengthCounter}}</div>\n</div>\n<div class="setStatusError" ng-show="setNoteController.showStatusFailedError">\n  {{::$root.resources.strings.settings_note_status_fail_error|translate}}\n</div>\n<div class="expiryTimeLabel" data-tid="expiryTimeLabel" id="expiryTimeLabel" aria-label="{{::$root.resources.strings.settings_note_status_expiry_header|translate}}">\n  {{::$root.resources.strings.settings_note_status_expiry_header|translate}}\n</div>\n<dropdown-select id="settings-set-note-dropdown-dropdown-select" class="form-field-input" ds-options="::setNoteController.expirationTimes" ds-selected-value="setNoteController.selectedExpirationTime" ds-on-change="setNoteController.onSelectExpiryTime(newOption, oldOption)" ds-highlight-selected-option="true" ds-labelledby-id="expiryTimeLabel" ds-max-viewable-items="8" ng-keydown="setNoteController.keyboardToggleExpiry($event)" ng-click="setNoteController.keyboardToggleExpiry($event)">\n</dropdown-select>\n<button ng-if="::!sdc.enableStatusNoteV2" class="ts-btn ts-btn-fluent ts-btn-fluent-primary done" ng-click="setNoteController.setStatus()" aria-label="{{::$root.resources.strings.settings_status_dropdown_done_label|translate}}" ng-disabled="setNoteController.isDoneDisabled">\n  {{::$root.resources.strings.settings_status_dropdown_done_label|translate}}\n</button>\n<div ng-if="::sdc.enableStatusNoteV2">\n  <date-time-picker ng-if="setNoteController.showCustomDateControl" selected-date="setNoteController.expirationDate" selected-time="setNoteController.expirationTime" source="statusNoteDropdown">\n  </date-time-picker>\n  <div class="setStatusNote">\n    <a id="oofSettingsLink" class="oof-settings-link" ng-if="setNoteController.enableOOFMessageSettings" ng-click="setNoteController.openOofSettingsDialog()" tabindex="0" track-gesture="{{::$root.trackConstants.trackGesture.click}}" track-outcome="{{::$root.trackConstants.trackOutcome.openDialog}}" track-scenario="{{::$root.trackConstants.trackScenario.oofSettingsOpen}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.oofSettings}}" track-name="{{::$root.trackConstants.trackModuleName.oofSettingsOpenLink}}" track-type="{{::$root.trackConstants.trackType.link}}">\n      {{::$root.resources.strings.oof_settings_link_text|translate}}\n    </a>\n    <button id="setStatusNoteDone" class="doneButton ts-btn ts-btn-fluent ts-btn-fluent-primary" ng-click="setNoteController.setStatus()" tabindex="0" data-tid="doneButton" aria-label="{{::$root.resources.strings.settings_status_dropdown_done_label|translate}}" ng-disabled="setNoteController.isDoneDisabled" translate-once="{{::$root.resources.strings.settings_status_dropdown_done_label}}">\n    </button>\n  </div>\n</div>'},2182:function(t,e){t.exports='<div class="pinNoteTooltip tooltip-container" role="alert" aria-live="assertive">\n  <div class="content-container">\n      <div class="tooltip-arrow-up"></div>        \n      <div class="tooltip-content" translate-once="{{::$root.resources.strings.settings_note_status_pinnote_tooltip_content}}"></div>\n  </div>\n</div>'},2183:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=n(2184),i=n(2185),o=function(){return function(t,e,n,s,i,o,a,r,c){this.displayName=t,this.id=e,this.unreadActivityCount=n,this.isCurrentTenant=s,this.isHomeTenant=i,this.rank=o,this.isRedeemed=a,this.shouldShowError=r,this.isGuestInTenant=c}}();e.TenantViewModel=o;var a=function(){function t(t,e,n,s,i,o,a,r,c,l,u,d,p,g,m){this.$scope=e,this.$timeout=s,this.authenticationService=i,this.tenantService=a,this.eventingService=r,this.constants=c,this.settingsService=l,this.guestAccessService=u,this.tooltipCssApplicators=d,this.tooltipService=p,this.mtmaUtilityService=g,this.tenantInformationDict={},this.logger=t.newLogger("SettingsDropdownTenants"),this.viewMoreTenantsArialLabel=n.instant(o.strings.tenant_settings_dropdown_overflow_btn_aria_label),this.uniqueId=m.generateUUID()}return t.$inject=["loggingService","$scope","$translate","$timeout","authenticationService","resources","tenantService","eventingService","constants","settingsService","guestAccessService","tooltipCssApplicators","tooltipService","mtmaUtilityService","utilityService"],t.prototype.$onInit=function(){var t=this;this.tenantService.isReady().then(function(){t.isMultiTenantAuthEnabled=t.mtmaUtilityService.isMultiTenantAuthEnabled;var e=t.tenantService.getCachedTenantNotification();e&&e.length>1?t.createTenantVMs(e).finally(function(){t.isReady=!0,t.defaultTenants.length>0&&t.$timeout(function(){$("settings-dropdown-tenants .tenant-option").first().attr("tabindex","0").focus()},0,!1)}):(t.isReady=!1,t.defaultTenants=[],t.overflowedTenants=[]),t.settingsService.valueAsBoolean(t.constants.settings.names.enableChangeOrgName)&&e&&e.length>1&&t.eventingService.$on(t.$scope,t.constants.events.freemium.changeOrgName,function(e,n){var s=t.defaultTenants.find(function(t){return t.isCurrentTenant});if(s){s.displayName=n;var i=s.id;i in t.tenantInformationDict&&(t.tenantInformationDict[i].tenantName=n)}}),t.eventingService.$on(t.$scope,"hideSettingsDropdown",function(e,n){t.closeSettingsDropdown()})})},t.prototype.selectTenant=function(t){t&&t.id?(this.closeSettingsDropdown(),this.switchTenant(t)):this.logger.warn("[selectTenant] Invalid tenant or tenant ID")},t.prototype.fetchTokensForTenant=function(t){if(t&&t.id){var e=this.tenantInformationDict[t.id];this.closeSettingsDropdown(),this.guestAccessService.firePassiveReloginIPC(e)}else this.logger.warn("[fetchTokensForTenant] Invalid tenant or tenant ID")},t.prototype.switchTenant=function(t){var e=this,n=this.tenantInformationDict[t.id];this.guestAccessService.switchTenant(this.$scope,n).catch(function(t){e.logger.warn("In-App Redemption failed. Could not change tenants.")})},t.prototype.closeSettingsDropdown=function(){for(var t=this.$scope;t&&!t.$hide;)t=t.$parent;t&&t.$hide&&t.$hide()},t.prototype.contextMenuHandler=function(e,n,s){var i=this,o={templateUrl:t.MoreActionsTemplateId,trigger:"manual",container:"body",scope:n,autoClose:!0,placement:"auto bottom-right"},a={sourceElement:angular.element(e.currentTarget),tooltipType:teamspace.services.TooltipType.Popover,options:o,tooltipId:this.uniqueId+"tenant_dropdown",cssApplicator:function(){i.tooltipCssApplicators.contextMenu(e)}};this.tooltipService.showTooltip(a)},t.prototype.createTenantVMs=function(t){var e=this;return this.authenticationService.getUserInformation().then(function(n){var s=[];_.each(t,function(t){if(!t.hasNoAccess){var i=t.tenantName||t.tenantId,a=e.guestAccessService.isPresentInErrorList(t.tenantId),r=t.tenantId===n.profile.tid,c=n.profile.idp?n.profile.idp.indexOf(t.tenantId)>=0:t.tenantId===n.profile.tid,l=c?1:r?2:3,u=teamspace.services.isGuest(t,c);e.tenantInformationDict[t.tenantId]=t,s.push(new o(i,t.tenantId,t.unreadCount,r,c,l,t.isInvitationRedeemed,a,u))}}),e.defaultTenants=_.sortBy(s,function(t){return t.rank})})},t.MoreActionsTemplateId="components/settings-dropdown/settings-dropdown-tenants/dropdown-tenants-more.html",t}();e.SettingsDropdownTenantsController=a,angular.module("teamspace.settingsDropdownTenants",["pascalprecht.translate","teamspace.authenticationService","teamspace.locales","teamspace.loggingService","teamspace.settingsService","teamspace.tenantService"]).component("settingsDropdownTenants",{template:s,controller:a,controllerAs:"sdtc"}).run(["$templateCache",function(t){t.put("components/settings-dropdown/settings-dropdown-tenants/dropdown-tenants-more.html",i)}])},2184:function(t,e){t.exports='\x3c!-- Home Tenant, Current Tenant, and 1 Additional Tenant --\x3e\n<li acc-role="menu-item list focus-default" ng-if="::sdtc.isReady" class="tenant-option hide-overflow-tenant-button" aria-describedby="active-{{tenant.id}}" ng-repeat="tenant in ::sdtc.defaultTenants track by tenant.id" data-tid="settingsDropdown-selectTenant-list" aria-posinset="{{::($index+1)}}" aria-setsize="{{::sdtc.defaultTenants.length}}">\n  <button class="ts-sym right-align-icon tenant-btn float-left" ng-class="::{\'unredeemed-tenant\': !tenant.isRedeemed}" title="{{::tenant.displayName}}" ng-disabled="::tenant.isCurrentTenant" ng-click="sdtc.selectTenant(tenant)" track-gesture="{{::$root.trackConstants.trackGesture.click}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.guestAccess}}" track-scenario="{{::$root.trackConstants.trackScenario.selectTenant}}" track-name="{{::$root.trackConstants.trackModuleName.selectTenantButton}}" track-type="{{::$root.trackConstants.trackType.button}}" track-summary="Select tenant {{::tenant.id}}" data-tid="settingsDropdown-selectTenant-{{::tenant.id}}">\n    <div class="tenant-list-text">\n      <ng-include class="icon hide-text flex-child-no-shrink" src="\'svg/icons-accept.html\'" ng-if="::tenant.isCurrentTenant">\n      </ng-include>\n      <span ng-show="false" id="active-{{tenant.id}}" ng-if="::tenant.isCurrentTenant" translate-once="{{::$root.resources.strings.tenant_active_label}}">\n      </span>\n      <span class="tenant-name flex-child-no-shrink" ng-bind="::tenant.displayName">\n      </span>\n      <span class="guest-tenant-indicator flex-child-no-shrink" ng-if="::tenant.isGuestInTenant" translate-once="{{::$root.resources.strings.guest_tenant_postfix}}">\n      </span>\n      <span ng-if="::tenant.unreadActivityCount" class="activity-badge activity-badge-alerts">{{::tenant.unreadActivityCount}}</span>\n    </div>\n  </button>\n  <button class="error-btn" title="{{::$root.resources.strings.tenant_auth_error_tooltip | translate}}" ng-click="sdtc.fetchTokensForTenant(tenant)">\n    <ng-include class="icon hide-text flex-child-no-shrink" src="\'svg/icons-error-small.html\'" ng-if="tenant.shouldShowError">\n    </ng-include>\n  </button>\n  <button title="{{::$root.resources.strings.icons_more | translate}}" class="ts-sym icons-more app-icons-fill-hover settings-dropdown-list-show-icon-on-hover" ng-click="sdtc.contextMenuHandler($event, this)" ng-if="::(sdtc.isMultiTenantAuthEnabled && !tenant.isCurrentTenant)" space-action track-default="contextMenuHandler" track-summary="">\n      <svg class="app-svg icons-unfilled icons-default-fill">\n        <use xlink:href="#icons-more" href="#icons-more"/>\n      </svg>\n      <svg class="app-svg icons-filled icons-default-fill">\n        <use xlink:href="#icons-more-filled" href="#icons-more-filled"/>\n      </svg>\n    </button>\n</li>\n\n\x3c!-- Overflowed Guest Tenant List --\x3e\n<li ng-if="::sdtc.overflowedTenants.length" acc-role="menu-item has-sub-menu" class="popover-parent">\n  <button class="ts-sym view-more-tenants-btn" role="button" aria-label="{{::sdtc.viewMoreTenantsArialLabel}}" track-gesture="{{::$root.trackConstants.trackGesture.click}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.guestAccess}}" track-scenario="{{::$root.trackConstants.trackScenario.viewMoreTenants}}" track-name="{{::$root.trackConstants.trackModuleName.viewMoreTenantsButton}}" track-type="{{::$root.trackConstants.trackType.button}}" track-summary="View more tenants" data-tid="settingsDropdown-viewMoreTenants">\n    <div>\n      <span aria-hidden="true" translate-once="{{::$root.resources.strings.tenant_settings_dropdown_overflow_btn_text}}">\n      </span>\n      <ng-include class="right-align-icon icon hide-text" src="\'svg/icons-patharrow.html\'" aria-hidden="true">\n      </ng-include>\n    </div>\n  </button>\n  <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1">\n    <li acc-role="sub-menu-item focus-default" class="menuitem" ng-repeat="tenant in ::sdtc.overflowedTenants track by tenant.id">\n      <button class="ts-sym tenant-btn" title="{{::tenant.displayName}}" ng-click="sdtc.selectTenant(tenant)" ng-class="::{\'unredeemed-tenant\': !tenant.isRedeemed}" track-gesture="{{::$root.trackConstants.trackGesture.click}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.guestAccess}}" track-scenario="{{::$root.trackConstants.trackScenario.selectTenant}}" track-name="{{::$root.trackConstants.trackModuleName.selectTenantButton}}" track-type="{{::$root.trackConstants.trackType.button}}" track-summary="Select tenant {{::tenant.id}}" data-tid="settingsDropdown-selectTenant-{{::tenant.id}}">\n        <div>\n          <span class="tenant-name flex-child-no-shrink" ng-bind="::tenant.displayName">\n          </span>\n          <span class="guest-tenant-indicator flex-child-no-shrink" ng-if="::tenant.isGuestInTenant" translate-once="{{::$root.resources.strings.guest_tenant_postfix}}">\n          </span>\n          <span ng-if="::tenant.unreadActivityCount" class="activity-badge">{{::tenant.unreadActivityCount}}</span>\n        </div>\n      </button>\n    </li>\n  </ul>\n</li>'},2185:function(t,e){t.exports='<tenant-actions-menu class="tenants-more-menu popover ts-leftrail-popover" tenant-info="::tenant" track-click-silent="true"></tenant-actions-menu>'},2186:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=n(2187),i=n(87),o=function(){function t(t,e,n,s,i,o,a,r,c,l){var u=this;this.$translate=t,this.resources=e,this.$scope=n,this.constants=i,this.presenceService=o,this.ariaLiveService=a,this.localizationService=l,this.selectedDate=new Date,this.showCustomDateControl=!1,this.showStatusFailedError=!1,this.enablePresenceAppearOfflineStatus=!1,this.expirationTimeValuesInHours={},this.offlineStatusNeverExpiryDate="9999-12-31T23:59:59.9999999Z",this.logger=c.newLogger(this.constructor.name),this.enablePresenceAppearOfflineStatus=r.valueAsBoolean(i.settings.names.enablePresenceAppearOfflineStatus),s(function(){u.registerTabHandlers()},0,!1)}return t.$inject=["$translate","resources","$scope","$timeout","constants","presenceService","ariaLiveService","settingsService","loggingService","localizationService"],t.prototype.back=function(){var t=this;this.showStatusFailedError=!1,this.$scope.sdc.state=i.SettingsDropDownStates.INITIAL,this.$scope.sdc.closeOpenDropdowns(),_.debounce(function(){var e=angular.element("#settings-dropdown-list");if(e&&_.forEach(e.find(".kb-active"),function(t){t.removeAttribute("tabindex"),t.classList.remove("kb-active")}),t.$scope.sdc.enableMeMenuV2)(n=angular.element("#settings-dropdown-user-presence-button"))&&n.addClass("kb-active").attr("tabindex","0").focus();else{var n=angular.element("#personAvailabilityPopover");n&&n.addClass("kb-active").attr("tabindex","0").focus()}},10)()},t.prototype.$onInit=function(){var t=this;this.expirationResourceStrings=[this.resources.strings.settings_expiry_status_half_hour,this.resources.strings.settings_expiry_status_hour,this.resources.strings.settings_expiry_status_hours_two,this.resources.strings.settings_expiry_status_today,this.resources.strings.settings_expiry_status_this_week,this.resources.strings.settings_expiry_status_custom],this.statusResourceStrings=[this.resources.strings.status_online,this.resources.strings.status_busy,this.resources.strings.status_doNotDisturb,this.resources.strings.status_beRightBack,this.resources.strings.status_appear_away],this.statuses=[SkypeX.Services.UserStatus.Online,SkypeX.Services.UserStatus.Busy,SkypeX.Services.UserStatus.OutToLunch,SkypeX.Services.UserStatus.BeRightBack,SkypeX.Services.UserStatus.AppearAway],this.enablePresenceAppearOfflineStatus&&(this.statusResourceStrings.push(this.resources.strings.status_appearOffline),this.statuses.push(SkypeX.Services.UserStatus.AppearOffline)),this.presence=this.$scope.sdc.presence;var e=this.resources.strings.settings_expiry_status_today;this.showCustomDateControl=!1,this.selectedDate=this.getExpirationDate(),!this.selectedDate||this.isEndOfToday(this.selectedDate)||this.isDefaultForcedAvailability()?e=this.resources.strings.settings_expiry_status_today:this.isEndOfWeek(this.selectedDate)?e=this.resources.strings.settings_expiry_status_this_week:(e=this.resources.strings.settings_expiry_status_custom,this.showCustomDateControl=!0),void 0==this.selectedDate&&(this.selectedDate=new Date),this.selectedExpirationTime=this.$translate.instant(e),this._expirationTimes=this.expirationResourceStrings.map(function(e){return t.$translate.instant(e)}),this._statusStrings=this.statusResourceStrings.map(function(e){return t.$translate.instant(e)}),this.expirationTimeValuesInHours[this.$translate.instant(this.resources.strings.settings_expiry_status_half_hour)]=.5,this.expirationTimeValuesInHours[this.$translate.instant(this.resources.strings.settings_expiry_status_hour)]=1,this.expirationTimeValuesInHours[this.$translate.instant(this.resources.strings.settings_expiry_status_hours_two)]=2,this.updateSelectedStatus(),this.focusOnStatusDropdown()},t.prototype.closeOpenDropdowns=function(){this.toggleDropdown(!1,!0,!1),this.toggleDropdown(!1,!0,!0)},t.prototype.isDefaultForcedAvailability=function(){var t=this.presence.status,e=this.presence.forcedAvailability;if(!(e&&e.expiry&&e.publishTime))return!0;var n=new Date(e.expiry),s=new Date(e.publishTime);switch(t){case SkypeX.Services.UserStatus.Busy:case SkypeX.Services.UserStatus.OutToLunch:return n.getTime()-s.getTime()===this.constants.timeInMiliseconds.day;case SkypeX.Services.UserStatus.Offline:return n.getTime()===new Date(this.offlineStatusNeverExpiryDate).getTime();default:return n.getTime()-s.getTime()===this.constants.timeInMiliseconds.week}},t.prototype.focusOnStatusDropdown=function(){var t=this;_.debounce(function(){var e=t.getDropdownOptionsElement(!0).find("button").first();e&&e.focus()},10)()},t.prototype.setStatus=function(){var t=this,e=this._statusStrings.indexOf(this.selectedStatus),n=this.statuses[e];if(null!=n){var s=SkypeX.Services.UserStatus[n],i=this._expirationTimes.indexOf(this.selectedExpirationTime),o=this.expirationResourceStrings[i],a={selectedStatus:s,selectedExpiryTime:o},r=this.getExpiryTime();o===this.resources.strings.settings_expiry_status_custom&&(a.customDurationInMin=(new Date(r).getTime()-(new Date).getTime())/this.constants.timeInMiliseconds.minute);var c=this.presenceService.createPanelActionEventData(teamspace.components.PanelActionGesture.click,teamspace.components.PanelActionOutcome.select,teamspace.components.PanelModuleName.setPresence,teamspace.components.PanelModuleType.menu,"settings-expiry-status-dropdown.setStatus",a);this.presenceService.setMyStatus(n,c,!0,!0,!1,r).then(function(){t.logger.info("Set status expiry success."),t.$scope.sdc.hide()}).catch(function(e){t.showStatusFailedError=!0,t.ariaLiveService.update(t.$translate.instant(t.resources.strings.settings_expiry_status_fail_error_live),!0),t.logger.error(e)})}},t.prototype.getPlacement=function(){return this.localizationService.langDirection===this.constants.languageDirectionStrings.rtl?"bottom-right":void 0},t.prototype.onSelectExpiryTime=function(t,e){this.selectedExpirationTime=t,t===this.$translate.instant(this.resources.strings.settings_expiry_status_custom)?this.showCustomDateControl=!0:this.showCustomDateControl=!1},t.prototype.onSelectStatus=function(t,e){this.selectedStatus=t},t.prototype.registerTabHandlers=function(){var t=this,e=$("#setExpiryStatusDone"),n=$("#expiryBackButton");e.keydown(function(e){e.shiftKey||e.keyCode!==t.constants.keyCodes.tab||(e.stopImmediatePropagation(),e.preventDefault(),n.focus())}),n.keydown(function(n){n.keyCode===t.constants.keyCodes.tab&&n.shiftKey&&(n.stopImmediatePropagation(),n.preventDefault(),e.focus())})},t.prototype.keyboardToggleDropdown=function(t,e){var n=t.keyCode,s="click"==t.type,i=this.getDropdownOptionsElement(e),o=$(i.find("button").first());s?(this.toggleDropdown(!0,!0,e),t.preventDefault(),t.stopImmediatePropagation()):n!==this.constants.keyCodes.down&&n!==this.constants.keyCodes.up&&n!==this.constants.keyCodes.enter||$(document.activeElement)[0]!==o[0]||this.focusActiveDropdownElement(e)},t.prototype.toggleDropdown=function(t,e,n){void 0===t&&(t=!0),void 0===e&&(e=!0);var s=this.getDropdownOptionsElement(n),i=$(s.find("button").first()),o=$(s.find("div.dropdown-menu"));!s.hasClass("open")&&t?this.openDropdown(s,o,i):s.hasClass("open")&&e&&this.closeDropdown(s,o,i,n)},t.prototype.openDropdown=function(t,e,n){t.addClass("open"),e.css({display:"block"}),n.attr("aria-expanded","true"),$('<div class="dropdown-backdrop"></div>').insertAfter(n)},t.prototype.closeDropdown=function(t,e,n,s){t.removeClass("open"),e.css({display:"none"}),n.attr("aria-expanded","false"),this.getDropdownOptionsElement(s).find("div.dropdown-backdrop").remove()},t.prototype.focusActiveDropdownElement=function(t){var e=this,n=this.getDropdownOptionsElement(t),s=$(n.find("div.dropdown-menu"));this._focusOnDropdownMenuItem||(this._focusOnDropdownMenuItem=_.debounce(function(){if(s){var n=$(s[0].getElementsByClassName("highlight-selected")[0]);n.length>0&&e.setTabAndIndex(n),e.setDropdownHandlers(t),e._focusOnDropdownMenuItem=void 0}},10),this._focusOnDropdownMenuItem())},t.prototype.setDropdownHandlers=function(t){var e=this,n=this.getDropdownOptionsElement(t),s=$(n.find("div.dropdown-menu"));s.keydown(function(t){t.preventDefault(),t.stopImmediatePropagation()}),s.keypress(function(t){t.preventDefault(),t.stopImmediatePropagation()}),s.keyup(function(n){e.dropdownKeyHandlers(n,t)})},t.prototype.dropdownKeyHandlers=function(t,e){var n=this.getDropdownOptionsElement(e),s=$(n.find("button").first()),i=$(n.find("div.dropdown-menu"));t.keyCode===this.constants.keyCodes.escape||t.keyCode===this.constants.keyCodes.enter?(t.preventDefault(),t.stopImmediatePropagation(),s.focus(),this.toggleDropdown(!1,!0,e),i.keyup=null):t.keyCode!==this.constants.keyCodes.down&&t.keyCode!==this.constants.keyCodes.up||(t.preventDefault(),t.stopImmediatePropagation())},t.prototype.setTabAndIndex=function(t){angular.isUndefined(t.attr("tabIndex"))&&t.attr("tabIndex","-1"),t[0].focus()},t.prototype.getDropdownOptionsElement=function(t){return t?$("#settings-expiry-status-dropdown-dropdown-select-status"):$("#settings-expiry-status-dropdown-dropdown-select-time")},Object.defineProperty(t.prototype,"expirationTimes",{get:function(){return this._expirationTimes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"statusStrings",{get:function(){return this._statusStrings},enumerable:!0,configurable:!0}),t.prototype.updateSelectedStatus=function(){var t=this.getStatus(),e=this.statuses.indexOf(t);this.selectedStatus=e>=0?this._statusStrings[e]:this.$translate.instant(this.resources.strings.status_online)},t.prototype.getStatus=function(){return this.presence.status},t.prototype.getExpirationDate=function(){var t=this.presence.forcedAvailability;return t&&t.expiry&&t.expiry!==this.offlineStatusNeverExpiryDate?new Date(t.expiry):void 0},t.prototype.getExpiryTime=function(){var t=new Date;return this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_expiry_status_today)?t=moment().endOf("day").toDate():this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_expiry_status_this_week)?t=moment().endOf("week").toDate():this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_expiry_status_custom)?t=this.combineDateAndTime(this.selectedDate,moment(this.selectedTime,"LT").toDate()):t.setMinutes(t.getMinutes()+60*this.expirationTimeValuesInHours[this.selectedExpirationTime]),t.toISOString()},t.prototype.combineDateAndTime=function(t,e){return moment(t).hours(e.getHours()).minutes(e.getMinutes()).seconds(0).toDate()},t.prototype.isEndOfToday=function(t){return moment().endOf("day").isSame(moment(t))},t.prototype.isEndOfWeek=function(t){return moment().endOf("week").isSame(moment(t))},t}();e.SettingsExpiryStatusDropdownController=o,angular.module("teamspace.settingsExpiryStatusDropdown",["teamspace.constants"]).controller("SettingsExpiryStatusDropdownController",o).run(["$templateCache",function(t){t.put("components/settings-dropdown/settings-expiry-status-dropdown/settings-expiry-status-dropdown.html",s)}])},2187:function(t,e){t.exports='<button id="expiryBackButton" class="backButton" data-tid="backButton" ng-click="expiryController.back()" aria-label="{{::$root.resources.strings.settings_status_dropdown_back_label|translate}}">\n  <ng-include src="\'svg/icons-chevron-left.html\'" class="backArrow"></ng-include>\n  <div class="backText">\n    {{::$root.resources.strings.settings_status_dropdown_back_label|translate}}\n  </div>\n</button>\n\n<div acc-role="menu-separator" class="divider"></div>\n\n<div class="promptLabel promptLabel-status" data-tid="statusPromptLabel" id="statusPromptLabel" aria-label="{{::$root.resources.strings.status_prompt|translate}}">\n  {{::$root.resources.strings.status_prompt|translate}}\n</div>\n\x3c!-- TODO Jason Wang rich-content dropdown support for status --\x3e\n<dropdown-select id="settings-expiry-status-dropdown-dropdown-select-status" class="form-field-input" ds-options="::expiryController.statusStrings" ds-selected-value="expiryController.selectedStatus" ds-on-change="expiryController.onSelectStatus(newOption, oldOption)" ds-highlight-selected-option="true" ds-labelledby-id="statusPromptLabel" ds-max-viewable-items="8" ng-keydown="expiryController.keyboardToggleDropdown($event, true)" ng-click="expiryController.keyboardToggleDropdown($event, true)">\n</dropdown-select>\n\n<div class="promptLabel promptLabel-expiry" data-tid="expiryPromptLabel" id="expiryPromptLabel" aria-label="{{::$root.resources.strings.status_reset_after|translate}}">\n  {{::$root.resources.strings.status_reset_after|translate}}\n</div>\n\n<dropdown-select id="settings-expiry-status-dropdown-dropdown-select-time" class="form-field-input" ds-options="::expiryController.expirationTimes" ds-selected-value="expiryController.selectedExpirationTime" ds-on-change="expiryController.onSelectExpiryTime(newOption, oldOption)" ds-highlight-selected-option="true" ds-labelledby-id="expiryPromptLabel" ds-max-viewable-items="8" ng-keydown="expiryController.keyboardToggleDropdown($event, false)" ng-click="expiryController.keyboardToggleDropdown($event, false)">\n</dropdown-select>\n\n<div class="setStatusError" ng-show="expiryController.showStatusFailedError">\n  {{::$root.resources.strings.settings_expiry_status_fail_error|translate}}\n</div>\n\n<date-time-picker ng-if="expiryController.showCustomDateControl" selected-date="expiryController.selectedDate" selected-time="expiryController.selectedTime" source="expiryStatusDropdown">\n</date-time-picker>\n\n<button id="setExpiryStatusDone" class="ts-btn ts-btn-fluent ts-btn-fluent-primary done" ng-click="expiryController.setStatus()" aria-label="{{::$root.resources.strings.settings_status_dropdown_done_label|translate}}" ng-disabled="expiryController.isDoneDisabled">\n  {{::$root.resources.strings.settings_status_dropdown_done_label|translate}}\n</button>\n'},2188:function(t,e,n){"use strict";var s=this&&this.__assign||function(){return(s=Object.assign||function(t){for(var e,n=1,s=arguments.length;n<s;n++){e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var i=n(2189),o=n(2190),a=n(2191),r=function(){function t(t,e,n,s,i,o,a,r,c,l,u,d,p,g,m){this.$scope=t,this.$translate=e,this.analyticsService=n,this.constants=s,this.desktopEventsService=i,this.eventingService=o,this.guestAccessService=a,this.mtmaUtilityService=c,this.resources=l,this.settingsService=u,this.tenantService=d,this.tooltipCssApplicators=p,this.tooltipService=g,this.utilityService=m,this.tenantInformationDict={},this.logger=r.newLogger("settings-dropdown-account-profile-"+this.accountIndex),this.flights={isOverflowMenuEnabled:c.isMultiTenantAuthEnabled||u.valueAsBoolean(s.auth.hookMods.multiAccount.meMenuForceTenantOverflowMenu),verboseLogging:u.valueAsBoolean(s.auth.hookMods.multiAccount.meMenuVerboseLogging),enableChangeOrgName:u.valueAsBoolean(s.settings.names.enableChangeOrgName),enableMultiAccountTenantSwitch:u.valueAsBoolean(s.auth.settings.multiAccount.enableMultiAccountTenantSwitch),enableSecondaryAccountTenants:u.valueAsBoolean(s.settings.names.auth.enableMultiAccountMtEndpoint)&&u.valueAsBoolean(s.auth.settings.multiAccount.enableSecondaryAccountTenantsMeMenu)},this.flights.verboseLogging&&(this.logger.log("[MultiAccount] Initializing account profile {0}",this.accountIndex),this.logger.log("[MultiAccount] Flights: {0}",JSON.stringify(this.flights))),this.isDesktop=u.valueAsBoolean(s.settings.names.isDesktopApp);var h=!u.valueAsBoolean(s.settings.names.displaySettingsMenuButtonInAppHeaderBar),v=c.isBlueberryEnabled||u.valueAsBoolean(s.auth.settings.multiAccount.meMenuV2Enabled);this.isMeMenuL1Enabled=v&&!h&&!u.valueAsBoolean(s.auth.settings.multiAccount.disableMeMenuL1)}return t.$inject=["$scope","$translate","analyticsService","constants","desktopEventsService","eventingService","guestAccessService","loggingService","mtmaUtilityService","resources","settingsService","tenantService","tooltipCssApplicators","tooltipService","utilityService"],t.prototype.$onInit=function(){this.logger.log("[MultiAccount] onInit account profile {0}/{1}",this.accountIndex,this.accountCount),this.initScenario=this.getAndStartInitScenario(),this.upn||(this.upn=this.userName),this.isPrimary||this.flights.enableSecondaryAccountTenants?this.initializeTenantList():(this.homeTenant=s({id:this.tenantId},{}),this.tenantViewModels=void 0,this.isReady=!0,this.initScenario.stop({reason:"Secondary account"}))},t.prototype.onSwitchTenant=function(t){this.logger.log("[MultiAccount] onSwitchTenant clicked. TenantId: {0}",t),this.closeSettingsDropdown(),this.switchTenant(t)},t.prototype.onMoreMenuSelect=function(t,e,n){this.moreMenuSelectedTenant&&n&&this.moreMenuSelectedTenant.id===n.id?this.closeMoreMenuTooltip():this.openMoreMenuTooltip(n,e,t)},t.prototype.switchTenant=function(t){var e=this,n=t===this.constants.tflConstants.consumerTenantId?services.TeamsWebAccountType.MSA:services.TeamsWebAccountType.AAD,s=this.getAndStartTenantSwitchScenario(n);if(t&&(this.homeTenant&&this.homeTenant.id===t&&this.homeTenant.isCurrentTenant||this.tenantViewModels&&this.tenantViewModels.some(function(e){return e.isCurrentTenant&&e.id===t})))return this.logger.log("[MultiAccount] Selected tenant is already current, aborting tenant switch"),void s.incomplete({reason:"Selected tenant is already current"});if(this.isDesktop&&n===services.TeamsWebAccountType.MSA&&!this.flights.enableMultiAccountTenantSwitch)this.logger.log("[MultiAccount] Tenant switch: MSA tenant. Attempting switch in other window"),this.desktopEventsService.onSwitchToMsaAccountWindow(),s.stop();else{this.logger.log("[MultiAccount] Tenant switch for account {0}. Tenant type: {1}.",this.accountIndex,n);var i=this.tenantInformationDict[t];if(!i){if(!(!this.isPrimary&&this.flights.enableMultiAccountTenantSwitch&&this.tenantId&&this.accountId&&this.userName))return s.fail({reason:"Could not find selected tenant."}),void this.logger.error("[MultiAccount] Failed to switch tenant. Could not find the selected tenant: {0}",t);var o=this.constants.auth.telemetry.scenarios.multiAccount.meMenuAccountSwitcherInit;s.mark(o.markers.accountSwitchBeforeInit),i={tenantId:this.tenantId,userId:this.accountId,userName:this.userName,tenantType:n===services.TeamsWebAccountType.MSA?this.constants.settings.accountType.consumer:this.constants.settings.accountType.organization,tenantName:"TenantSwitchDefault"}}this.guestAccessService.switchTenant(this.$scope,i).then(function(){s.stop(),e.sendTenantSwitchBiData(n,t)}).catch(function(t){s.fail({reason:"Exception thrown in guest access service."}),e.logger.warn("In-App Redemption failed. Could not change tenants.")})}},t.prototype.initializeTenantList=function(){var t=this;this.logger.info("[MultiAccount] Initializing tenants list for account {0}",this.accountIndex);var e=this.constants.auth.telemetry.scenarios.multiAccount.meMenuAccountSwitcherInit;this.tenantService.isReady().then(function(){t.flights.verboseLogging&&t.logger.info("[MultiAccount] Tenant service is ready, fetching tenants");var n=void 0;t.isPrimary||(n={oid:t.accountId,tenantId:t.tenantId,accountType:t.accountType});var s=t.tenantService.shouldIgnoreCache("settings-dropdown-account-profile"),i=[];t.tenantService.getTenants(!1,n,s).then(function(n){var s=n?n.length:-1;t.logger.log("[MultiAccount] Tenant fetch complete, received {0} results.",s);var o={};o[e.properties.tenantCountRaw]=s,t.initScenario.appendEventData(o),t.initScenario.mark(e.markers.getTenantListComplete.name),t.sendTenantFetchBiTelemetry(n),i=n}).catch(function(e){t.initScenario.fail({reason:"Failed to fetch tenants for account."}),t.logger.error("[MultiAccount] Failed to fetch tenants for account {0}. Error: {1}",t.accountIndex,e)}).finally(function(){t.createAndSetTenantViewModels(i),t.setupListenerForTenantNameChange(i),t.initScenario.stop()})})},t.prototype.createAndSetTenantViewModels=function(t){var e=this,n=-1;if(t&&t.length>0){var s=this.createTenantVMs(t);s?((this.settingsService.valueAsBoolean(this.constants.auth.hookMods.multiAccount.meMenuForceSingleTenantPrimary)&&this.isPrimary||this.settingsService.valueAsBoolean(this.constants.auth.hookMods.multiAccount.meMenuForceSingleTenantSecondary)&&!this.isPrimary)&&(s=[s.shift()]),this.settingsService.valueAsBoolean(this.constants.auth.hookMods.multiAccount.meMenuForceManyTenants)&&(s.push.apply(s,s),s.push.apply(s,s)),s.length>1?this.tenantViewModels=s:s.length>0&&(this.tenantViewModels=[],this.homeTenant=s[0]),n=s.length):this.tenantViewModels=[],this.setTenantListScrolling(),this.flights.verboseLogging&&s&&s.forEach(function(t,n){e.logger.info("[MultiAccount] Tenant view models {0}/{1}: {2}",n,s.length,JSON.stringify(t))})}this.isReady=!0,this.logger.info("[MultiAccount] Digesting after completion"),this.utilityService.digest(this.$scope);var i=this.constants.auth.telemetry.scenarios.multiAccount.meMenuAccountSwitcherInit,o={};o[i.properties.tenantCountWithAccess]=n,this.initScenario.appendEventData(o),this.initScenario.mark(i.markers.createViewModelsComplete.name),this.logger.info("[MultiAccount] Tenant list initialized successfully for account: {0}. {1} tenants.",this.accountIndex,n)},t.prototype.createTenantVMs=function(t){var e=this,n=[],s=1;return _.each(t,function(i){if(e.flights.verboseLogging&&e.logger.info("[MultiAccount] Processing tenant: {0}",i.tenantId),i.hasNoAccess)e.flights.verboseLogging&&e.logger.info("[MultiAccount] No access to tenant: {0}",i.tenantId);else{var o=i.tenantName||i.tenantId,a=e.guestAccessService.isPresentInErrorList(i.tenantId),r=e.isPrimary&&i.tenantId===e.tenantId,c=e.accountIdp?e.accountIdp.indexOf(i.tenantId)>=0:i.tenantId===e.tenantId,l=c?1:2,u=teamspace.services.isGuest(i,c),d=i.unreadCount,p=i.isInvitationRedeemed;e.settingsService.valueAsBoolean(e.constants.auth.hookMods.multiAccount.meMenuFakeNotifications)&&(d+=s%2==0?9:s%3==0?22:0,1===t.length&&(d+=5)),e.settingsService.valueAsBoolean(e.constants.auth.hookMods.multiAccount.meMenuFakeError)&&(a=s%2==0,1===t.length&&(a=!0)),e.settingsService.valueAsBoolean(e.constants.auth.hookMods.multiAccount.meMenuForceRedeemedPending)&&(p=s!==t.length,1===t.length&&(p=!1)),i.userName=e.userName,e.tenantInformationDict[i.tenantId]=i;var g={id:i.tenantId,displayName:o,isCurrentTenant:r,isGuestInTenant:u,unreadActivityCount:d,tenantType:i.tenantType===e.constants.settings.accountType.consumer?services.TeamsWebTenantType.Consumer:services.TeamsWebTenantType.Enterprise,invitePending:!r&&!p,isMuted:!(!i||!i.tenantId)&&e.getIsTenantMuted(i.tenantId),isOverflowVisible:!1,shouldShowError:a,rank:l};g.isOverflowVisible=e.flights.isOverflowMenuEnabled&&e.isPrimary&&!g.invitePending&&!g.isCurrentTenant&&g.id!==e.constants.tflConstants.consumerTenantId,g.ariaLabel=e.getAriaLabelForTenant(g,s-1),n.push(g),s++}}),_.sortBy(n,["rank","displayName"])},t.prototype.setupListenerForTenantNameChange=function(t){var e=this;if(this.flights.enableChangeOrgName&&t&&t.length>1){var n=this.constants.auth.telemetry.scenarios.multiAccount.meMenuAccountSwitcherInit;this.initScenario.mark(n.markers.setupListenerForTenantNameChange),this.eventingService.$on(this.$scope,this.constants.events.freemium.changeOrgName,function(t,n){var s=e.tenantViewModels.find(function(t){return t.isCurrentTenant});if(s){s.displayName=n;var i=s.id;i in e.tenantInformationDict&&(e.tenantInformationDict[i].tenantName=n)}})}},t.prototype.setupListenerForMoreMenuClose=function(){var t=this;this.eventingService.$on(this.$scope,"closeTenantMoreMenu",function(){var e=t.getTenantViewModelById(t.moreMenuSelectedTenant.id);e.isMuted=!e.isMuted,t.closeMoreMenuTooltip()})},t.prototype.closeSettingsDropdown=function(){for(var t=this.$scope;t&&!t.$hide;)t=t.$parent;t&&t.$hide&&t.$hide()},t.prototype.getAriaLabelForTenant=function(t,e){var n="";return n+=this.isPrimary||0!==e?"":this.getAriaLabelNextAccount(),n+=" "+t.displayName,n+=t.isGuestInTenant?" "+this.$translate.instant(this.resources.strings.guest_tenant_postfix):"",n+=t.isCurrentTenant?" "+this.$translate.instant(this.resources.strings.meMenu_tenants_is_active_tenant_aria_label):" "+this.$translate.instant(this.resources.strings.meMenu_tenants_not_active_tenant_aria_label),n+=t.invitePending?" "+this.getAriaLabelInvitePending(t.displayName):"",n+=!t.invitePending&&t.shouldShowError?" "+this.$translate.instant(this.resources.strings.meMenu_tenants_warning_indicator_aria_label):"",n+=!t.invitePending&&t.isMuted?" "+this.$translate.instant(this.resources.strings.meMenu_tenants_notification_mute_indicator_aria_label):"",(n+=!t.invitePending&&t.unreadActivityCount?" "+this.getAriaLabelNotificationBadge(t.unreadActivityCount):"").trim()},t.prototype.getAriaLabelNextAccount=function(){return this.$translate.instant(this.resources.strings.meMenu_accounts_next_account_aria_label,{userName:this.userName})},t.prototype.getAriaLabelInvitePending=function(t){return this.$translate.instant(this.resources.strings.meMenu_tenants_invite_pending_aria_label,{tenantName:t})},t.prototype.getAriaLabelNotificationBadge=function(t){return this.$translate.instant(this.resources.strings.meMenu_tenants_notification_count_aria_label,{count:t})},t.prototype.getIsTenantMuted=function(t){var e=this.mtmaUtilityService.getUserIdentifierFromTenantId(t),n="";e&&e.length>0&&(n=e[0]?e[0].oid:"");var s={oid:n,tenantId:t};return this.mtmaUtilityService.isMuted(s)},t.prototype.getTenantViewModelById=function(t){return this.homeTenant&&this.homeTenant.id===t?this.homeTenant:this.tenantViewModels?this.tenantViewModels.find(function(e){return e.id===t}):void 0},t.prototype.setTenantListScrolling=function(){!this.settingsService.valueAsBoolean(this.constants.auth.settings.multiAccount.disableMeMenuTenantScrolling)&&(this.isTenantListScrollShort=this.accountCount>1)},t.prototype.openMoreMenuTooltip=function(e,n,s){var i=this;this.moreMenuSelectedTenant=e,this.moreMenuTooltipId=this.utilityService.generateUUID();var o={templateUrl:t.MoreActionsTemplateId,trigger:"manual",container:"body",scope:n,autoClose:!0,placement:"auto bottom-right"},a={sourceElement:$(s.currentTarget),tooltipType:teamspace.services.TooltipType.Popover,options:o,tooltipId:this.moreMenuTooltipId,cssApplicator:function(){i.tooltipCssApplicators.contextMenu(s)}};s.preventDefault(),s.stopPropagation(),this.setupListenerForMoreMenuClose(),this.tooltipService.showTooltip(a),this.sendMeMenuActionBITelemetry(teamspace.components.PanelActionScenario.showMoreOptions,teamspace.components.PanelModuleName.meMenuOverflowTenantButton,e.id)},t.prototype.closeMoreMenuTooltip=function(){this.moreMenuTooltipId&&this.tooltipService.clearTooltip(services.TooltipType.Popover,this.moreMenuTooltipId),this.moreMenuSelectedTenant=void 0,this.moreMenuTooltipId=void 0},t.prototype.sendTenantSwitchBiData=function(t,e){var n=this.isPrimary?teamspace.components.PanelActionScenario.tenantSwitchSameAccount:teamspace.components.PanelActionScenario.tenantSwitchDifferentAccount,s="Switch to "+t+" tenant: "+e;this.sendMeMenuActionBITelemetry(n,teamspace.components.PanelModuleName.meMenuSelectTenantButton,s,teamspace.components.PanelActionScenarioType.auth)},t.prototype.sendTenantFetchBiTelemetry=function(t){this.sendMeMenuActionBITelemetry(teamspace.components.PanelActionScenario.meMenuTenantFetch,teamspace.components.PanelModuleName.meMenuManageAccountsButton,void 0,void 0,{tenantCount:t?t.length:-1})},t.prototype.sendMeMenuActionBITelemetry=function(t,e,n,s,i){var o=this,a=n||"settings-dropdown.me-menu",r=s||teamspace.components.PanelActionScenarioType.meMenu,c=teamspace.components.PanelActionGesture.click,l=teamspace.components.PanelActionOutcome.submit,u=teamspace.components.PanelModuleType.button;_.defer(function(){var n={action:{gesture:teamspace.shared.AttributeHelper.tryGetEnum(c.toString(),teamspace.components.PanelActionGesture,o.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(l.toString(),teamspace.components.PanelActionOutcome,o.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(t.toString(),teamspace.components.PanelActionScenario,o.logger),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(r.toString(),teamspace.components.PanelActionScenarioType,o.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelModuleName,o.logger.service).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(u.toString(),teamspace.components.PanelModuleType,o.logger.service),summary:a},dataBag:i};o.analyticsService.onPanelAction(o.$scope,n)})},t.prototype.getAndStartInitScenario=function(){var t=this.constants.auth.telemetry.scenarios.multiAccount.meMenuAccountSwitcherInit,e=this.logger.service.newScenario(t.scenarioNames.initializeAccountProfile),n={};return n[t.properties.isPrimaryAccount]=this.isPrimary,e.appendEventData(n),e},t.prototype.getAndStartTenantSwitchScenario=function(t){var e=this.constants.auth.telemetry.scenarios.multiAccount.meMenuTenantSwitch,n=this.logger.service.newScenario(e.name),s={};return s[e.properties.accountType]=t,n.appendEventData(s),n},t.MoreActionsTemplateId="components/settings-dropdown/settings-dropdown-account-profile/tenants-more-menu.html",t}();e.SettingsDropdownAccountProfileController=r,angular.module("teamspace.settingsDropdownAccountProfile",["pascalprecht.translate","teamspace.analyticsService","teamspace.constants","teamspace.desktopEventsService","teamspace.eventingService","teamspace.guestAccessService","teamspace.loggingService","teamspace.mtmaUtilityService","teamspace.settingsService","teamspace.tenantService","teamspace.tooltipCssApplicators","teamspace.tooltipService","teamspace.utilityService"]).component("settingsDropdownAccountProfile",{template:i,controller:r,bindings:{accountId:"<?",displayName:"<?",userName:"<?",upn:"<?",tenantId:"<?",accountIdp:"<?",accountType:"<?",accountIndex:"<?",accountCount:"<?",isPrimary:"<?",isGuest:"<?"}}).run(["$templateCache",function(t){t.put("components/settings-dropdown/settings-dropdown-account-profile/account-profile.html",o),t.put("components/settings-dropdown/settings-dropdown-account-profile/tenants-more-menu.html",a)}])},2189:function(t,e){t.exports='\x3c!-- Primary is never a button, OR if secondary and only has 0|1 tenant --\x3e\n<div ng-if="!$ctrl.isPrimary && (!$ctrl.tenantViewModels.length || $ctrl.tenantViewModels.length === 1)" class="profile-root">\n  <div class="single-tenant-root" acc-role="menu-item" ng-class="{moreMenuEnabled: $ctrl.flights.isOverflowMenuEnabled && !$ctrl.isPrimary}">\n    \x3c!-- Wrap in button if actionable --\x3e\n    <button class="ts-sym profile-button" ng-click="$ctrl.onSwitchTenant($ctrl.tenantId)" aria-label="{{::$ctrl.homeTenant.ariaLabel}}" tabindex="-1">\n      <ng-include src="\'components/settings-dropdown/settings-dropdown-account-profile/account-profile.html\'" class="account-include">\n      </ng-include>\n    </button>\n    \x3c!-- actions menu --\x3e\n    <button ng-if="$ctrl.homeTenant.isOverflowVisible" ng-click="$ctrl.onMoreMenuSelect($event, this, $ctrl.homeTenant)" title="{{::$root.resources.strings.icons_more | translate}}" aria-label="{{::$root.resources.strings.meMenu_tenants_more_options_aria_label | translate}}" class="ts-sym icons-more app-icons-fill-hover inline-button tenant-more-button" tabindex="-1" space-action track-default="contextMenuHandler" track-summary="">\n      <svg class="app-svg icons-unfilled icons-default-fill">\n        <use xlink:href="#icons-more" href="#icons-more"/>\n      </svg>\n      <svg class="app-svg icons-filled icons-default-fill">\n        <use xlink:href="#icons-more-filled" href="#icons-more-filled"/>\n      </svg>\n    </button>\n  </div>\n</div>\n<div ng-if="$ctrl.isPrimary || $ctrl.tenantViewModels.length > 1" class="profile-root with-tenants-list">\n  \x3c!-- Don\'t wrap if not actionable --\x3e\n  <div ng-include="\'components/settings-dropdown/settings-dropdown-account-profile/account-profile.html\'" ng-if="!($ctrl.isMeMenuL1Enabled && $ctrl.isPrimary)">\n  </div>\n  <div class="scrollContainer">\n    <div simple-scrollbar scroll-direction="vert" scrollbar-ignore-firefox-adjust="false" class="scrollbarRoot" ng-class="{shortScroll: $ctrl.isTenantListScrollShort}">\n      \x3c!-- must have single child element --\x3e\n      <ul class="tenants-list">\n        <li acc-role="menu-item" class="tenant-list-item" ng-if="::$ctrl.isReady" ng-repeat="tenant in ::$ctrl.tenantViewModels track by $index" aria-posinset="{{::($index+1)}}" aria-setsize="{{::$ctrl.tenantViewModels.length}}">\n          <button class="ts-sym inline-button tenant-button" ng-class="{active: tenant.isCurrentTenant && $ctrl.isPrimary}" ng-click="$ctrl.onSwitchTenant(tenant.id)" aria-label="{{::tenant.ariaLabel}}" data-tid="settingsDropdown-selectTenant-{{::tenant.id}}" tabindex="-1">\n            \x3c!-- tenant avatar --\x3e\n            <div class="tenant-avatar" aria-hidden="true">\n              <ng-include ng-if="tenant.tenantType !== \'consumer\'" src="\'svg/icons-tenant-work.html\'"></ng-include>\n              <ng-include ng-if="tenant.tenantType === \'consumer\'" src="\'svg/icons-tenant-personal.html\'"></ng-include>\n            </div>\n            \x3c!-- tenant name --\x3e\n            <div class="tenant-name-container" ng-class="::{ \'unredeemedInvite\': (tenant.invitePending) }" title="{{::tenant.displayName}}" aria-hidden="true">\n              <div class="tenant-name">\n                {{::tenant.displayName}}\n              </div>\n              \x3c!-- add "Guest" label if necessary --\x3e\n              <div class="guest-tenant-indicator flex-child-no-shrink" ng-if="::tenant.isGuestInTenant" translate-once="{{::$root.resources.strings.guest_tenant_postfix}}">\n              </div>\n            </div>\n            \x3c!-- redemption indicator --\x3e\n            <div ng-if="::tenant.invitePending" class="tenant-icon" title="{{::$root.resources.strings.tenant_invitation_pending_tooltip | translate}}">\n              <ng-include class="icon hide-text flex-child-no-shrink" src="\'[[staticsPath]]/hashed/svg/icons-email-with-dot-c740e4b.html\'">\n              </ng-include>\n            </div>\n            \x3c!-- warning indicator for MFA issue --\x3e\n            <div ng-if="(!tenant.invitePending && tenant.shouldShowError)" class="tenant-icon" title="{{::$root.resources.strings.tenant_auth_error_tooltip | translate}}">\n              <ng-include class="icon hide-text flex-child-no-shrink" src="\'svg/icons-error-small.html\'">\n              </ng-include>\n            </div>\n            \x3c!-- notifications muted indicator --\x3e\n            <div ng-if="(!tenant.invitePending && tenant.isMuted)" class="tenant-icon" title="{{::$root.resources.strings.tenant_notifications_muted_tooltip | translate}}">\n              <ng-include class="icon hide-text flex-child-no-shrink" src="\'svg/icons-bell-mute.html\'">\n              </ng-include>\n            </div>\n            \x3c!-- notification count indicator --\x3e\n            <div ng-if="(!tenant.invitePending && tenant.unreadActivityCount)" aria-hidden="true" class="activity-badge">{{::tenant.unreadActivityCount}}</div>\n          </button>\n          \x3c!-- actions menu --\x3e\n          <button ng-if="tenant.isOverflowVisible" ng-click="$ctrl.onMoreMenuSelect($event, this, tenant)" title="{{::$root.resources.strings.icons_more | translate}}" aria-label="{{::$root.resources.strings.meMenu_tenants_more_options_aria_label | translate}}" class="ts-sym icons-more app-icons-fill-hover inline-button tenant-more-button" tabindex="-1" space-action track-default="contextMenuHandler" track-summary="">\n            <svg class="app-svg icons-unfilled icons-default-fill">\n              <use xlink:href="#icons-more" href="#icons-more"/>\n            </svg>\n            <svg class="app-svg icons-filled icons-default-fill">\n              <use xlink:href="#icons-more-filled" href="#icons-more-filled"/>\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>'},2190:function(t,e){t.exports='\x3c!-- Account container --\x3e\n<div class="account-container" aria-hidden="true">\n  \x3c!-- Person icon --\x3e\n  <div class="profile-img-parent">\n    <profile-picture principal-name="::$ctrl.upn" display-name="::$ctrl.displayName" source="settings"></profile-picture>\n  </div>\n  \x3c!-- Account details --\x3e\n  <div class="profile-details-container">\n    \x3c!-- Name --\x3e\n    <div class="profile-name-text single-line-truncation">\n      <span ng-bind="::$ctrl.displayName"></span>\n      <span ng-if="::$ctrl.isGuestUser" translate-once="{{::$root.resources.strings.guest_tenant_postfix}}"></span>\n    </div>\n    \x3c!-- Email --\x3e\n    <div class="profile-email-text single-line-truncation">\n      <span ng-bind="::$ctrl.userName"></span>\n    </div>\n    \x3c!-- Badge --\x3e\n    <div class="profile-badge-text single-line-truncation" ng-if="::$ctrl.homeTenant.displayName">\n      <span ng-bind="::$ctrl.homeTenant.displayName"></span>\n    </div>\n  </div>\n  <div class="account-indicators">\n    \x3c!-- redemption indicator --\x3e\n    <div ng-if="$ctrl.homeTenant.invitePending" class="tenant-icon" title="{{::$root.resources.strings.tenant_invitation_pending_tooltip | translate}}">\n      <ng-include class="icon hide-text flex-child-no-shrink" src="\'[[staticsPath]]/hashed/svg/icons-email-with-dot-c740e4b.html\'">\n      </ng-include>\n    </div>\n    \x3c!-- warning indicator for MFA issue --\x3e\n    <span ng-if="!$ctrl.homeTenant.invitePending && $ctrl.homeTenant.shouldShowError" class="tenant-icon" title="{{::$root.resources.strings.tenant_auth_error_tooltip | translate}}">\n      <ng-include class="icon hide-text flex-child-no-shrink" src="\'svg/icons-error-small.html\'">\n      </ng-include>\n    </span>\n    \x3c!-- notifications muted indicator --\x3e\n    <span ng-if="!$ctrl.homeTenant.invitePending && $ctrl.homeTenant.isMuted" class="tenant-icon" title="{{::$root.resources.strings.tenant_notifications_muted_tooltip | translate}}">\n      <ng-include class="icon hide-text flex-child-no-shrink" src="\'svg/icons-bell-muted.html\'">\n      </ng-include>\n    </span>\n\n    \x3c!-- notification count indicator --\x3e\n    <span ng-if="!$ctrl.homeTenant.invitePending && $ctrl.homeTenant.unreadActivityCount" class="activity-badge">{{::$ctrl.homeTenant.unreadActivityCount}}</span>\n  </div>\n</div>'},2191:function(t,e){t.exports='<tenant-actions-menu class="tenants-more-menu-root popover ts-leftrail-popover" tenant-info="$ctrl.moreMenuSelectedTenant" track-click-silent="true"></tenant-actions-menu>'},2192:function(t,e,n){"use strict";var s=this&&this.__assign||function(){return(s=Object.assign||function(t){for(var e,n=1,s=arguments.length;n<s;n++){e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var i=n(2193),o=n(2194),a=n(87),r=function(){function t(t,e,n,s,i,o,a,r,c,l){this.$scope=t,this.analyticsService=e,this.authenticationService=n,this.authenticationUtilityService=s,this.constants=i,this.desktopEventsService=o,this.desktopUtilityService=a,this.identityService=r,this.logger=c.newLogger("settings-manage-account-dropdown"),this.flights={verboseLogging:l.valueAsBoolean(i.auth.hookMods.multiAccount.meMenuVerboseLogging),isAccountFetchBypassDisabled:l.valueAsBoolean(i.auth.settings.multiAccount.disableMeMenuAccountFetchBypass)}}return t.$inject=["$scope","analyticsService","authenticationService","authenticationUtilityService","constants","desktopEventsService","desktopUtilityService","identityService","loggingService","settingsService"],t.prototype.$onInit=function(){this.logger.info("[MultiAccount] Manage Account Dropdown onInit"),this.initializeAccountList(),this.focusOnBackButton()},t.prototype.back=function(){this.navigateToSettingsDropdown(),t.focusOnManageAccounts(),this.sendMeMenuActionBITelemetry(teamspace.components.PanelActionScenario.back,teamspace.components.PanelModuleName.backButton)},t.prototype.initializeAccountList=function(){var t=this,e=this.constants.auth.telemetry.scenarios.multiAccount.getAddedAccounts,n=this.logger.service.newScenario(e.scenarioNames.initializeAccountsList),s={};s[e.properties.loadSource]="MeMenuL2",n.appendEventData(s);try{n.mark(e.markers.ui.requestCurrentAccount),this.authenticationService.getUserInformation().then(function(s){n.mark(e.markers.ui.receiveCurrentAccount),t.logger.info("[MultiAccount] Received current account profile");var i=[t.mapAccountToViewModel(s,!0,n)];t.desktopEventsService.getAddedAccounts(n).then(function(o){t.flights.isAccountFetchBypassDisabled||t.desktopUtilityService.isDesktop()?(t.logger.info("[MultiAccount] Received accounts. Count: {0}",o?o.length:-1),t.flights.verboseLogging&&t.logger.info("[MultiAccount] comparing accounts. Curr: {0}",JSON.stringify(t.cleanAccountForLogging(s))),o&&o.forEach(function(e){t.authenticationUtilityService.isUserNameMismatch(s,e)&&(t.flights.verboseLogging&&t.logger.info("[MultiAccount] comparing accounts. Compar: {0}",JSON.stringify(t.cleanAccountForLogging(e))),i.push(t.mapAccountToViewModel(e,!1,n)))}),t.sendAccountFetchBiTelemetry(i)):t.logger.info("[MultiAccount] Skipped account fetch, not running on desktop."),t.logger.info("[MultiAccount] Created account list with {0} accounts",i.length),t.setAccountList(i);var a={};a[e.properties.accountsCount]=i.length,n.stop(a)}).catch(function(e){t.setAccountList(i),n.fail({reason:"[Manage Accounts] Failed while gettings added accounts"}),t.logger.error("[MultiAccount] Failed to getAddedAccounts. Error: "+(e&&e.message?e.message:e))})}).catch(function(e){n.fail({reason:"[Manage Accounts] Failed while gettings current account"}),t.logger.error("[MultiAccount] Failed to getCurrentAccountProfile. Error: "+(e&&e.message?e.message:e))})}catch(t){n.fail({reason:"[Manage Accounts] Failed while initializing account list for Me Menu"}),this.logger.error("[MultiAccount] Uber catch for initializeAccountList. Error: "+(t&&t.message?t.message:t))}},t.prototype.mapAccountToViewModel=function(t,e,n){if(t&&t.profile){var s=t.profile,i=t.userName?t.userName:s.email,o="",a="",r=s.name&&s.name===i;return t.accountType===services.TeamsWebAccountType.MSA||r&&!t.accountType?(o+=s.given_name?s.given_name+" ":"",o+=s.family_name?s.family_name:""):o=s.name,(o=o&&o.trim())?a=i:o=i,{accountId:s.oid,primaryText:o,secondaryText:a,tenantId:s.tid,isPrimary:e,isGuest:e?this.identityService.isGuestUserType():t.userRole===teamspace.services.UserRole.guest,upn:s.upn,idp:s.idp,accountType:t.accountType?t.accountType:teamspace.services.TeamsWebAccountType.AAD}}this.logger.warn("[MultiAccount] Could not build account viewmodel. Account or Profile was not defined. IsPrimary: {0}, Account: {1}",e,t);var c=this.constants.auth.telemetry.scenarios.multiAccount.getAddedAccounts;n.mark(c.markers.ui.undefinedAccount)},t.prototype.setAccountList=function(t){var e=this;this.flights.verboseLogging&&t&&t.forEach(function(n,s){e.logger.info("[MultiAccount] Added accounts {0}/{1}: {2}",s,t.length,JSON.stringify(n))}),this.accounts=t},t.prototype.navigateToSettingsDropdown=function(){this.$scope.sdc.state=a.SettingsDropDownStates.INITIAL},t.focusOnManageAccounts=function(){t._focusOnManageAccountsTimeout&&t._focusOnManageAccountsTimeout.cancel(),t._focusOnManageAccountsTimeout=t.focusElementWithDebounce("settingsDropdown-manageAccountListItem")},t.prototype.focusOnBackButton=function(){t.focusElementWithDebounce("settings-manage-account-back")},t.focusElementWithDebounce=function(t){var e=_.debounce(function(){var e=document.getElementById(t);e&&e.focus()},10);return e(),e},t.prototype.sendAccountFetchBiTelemetry=function(t){this.sendMeMenuActionBITelemetry(teamspace.components.PanelActionScenario.meMenuAccountFetch,teamspace.components.PanelModuleName.meMenuManageAccountsButton,{accountCount:t?t.length:-1})},t.prototype.sendMeMenuActionBITelemetry=function(t,e,n){var s=this,i=teamspace.components.PanelActionScenarioType.meMenu,o=teamspace.components.PanelActionGesture.click,a=teamspace.components.PanelActionOutcome.submit,r=teamspace.components.PanelModuleType.button;_.defer(function(){var c={action:{gesture:teamspace.shared.AttributeHelper.tryGetEnum(o.toString(),teamspace.components.PanelActionGesture,s.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(a.toString(),teamspace.components.PanelActionOutcome,s.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(t.toString(),teamspace.components.PanelActionScenario,s.logger),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(i.toString(),teamspace.components.PanelActionScenarioType,s.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelModuleName,s.logger.service).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(r.toString(),teamspace.components.PanelModuleType,s.logger.service),summary:"settings-dropdown.me-menu"},dataBag:n};s.analyticsService.onPanelAction(s.$scope,c)})},t.prototype.cleanAccountForLogging=function(t){if(!t||!t.profile)return null;var e=t.profile;return s({profile:s({altsecid:e.altsecid,upn:e.upn,email:e.email,name:e.name,family_name:e.family_name,given_name:e.given_name,oid:e.oid,puid:e.puid,tid:e.tid,unique_name:e.unique_name},{}),userName:t.userName,profileType:t.profileType},{})},t}();e.SettingsManageAccountDropdownController=r,angular.module("teamspace.settingsManageAccountDropdown",["teamspace.analyticsService","teamspace.authenticationService","teamspace.authenticationUtilityService","teamspace.constants","teamspace.desktopEventsService","teamspace.identityService","teamspace.loggingService","teamspace.settingsService"]).controller("SettingsManageAccountDropdownController",r).run(["$templateCache",function(t){t.put("components/settings-dropdown/settings-manage-account-dropdown/settings-manage-account-dropdown-v2.html",o),t.put("components/settings-dropdown/settings-manage-account-dropdown/settings-manage-account-dropdown.html",i)}])},2193:function(t,e){t.exports='<div id="manageAccountsRoot">\n  <ul acc-role="menu list dialog" class="dropdown-menu">\n    <li acc-role="menu-item" id="settings-manage-account-back" aria-label="{{::$root.resources.strings.settings_options_manage_account_dropdown_back_label | translate}}">\n      <button id="manageAccountBackButton" class="ts-sym left-align-icon" data-tid="backButton" ng-click="manageAccountController.back()">\n        <ng-include src="\'svg/icons-chevron-left.html\'"></ng-include>\n        {{::$root.resources.strings.settings_options_manage_account_dropdown_back_label | translate}}\n      </button>\n    </li>\n    <li ng-repeat="account in manageAccountController.accounts" aria-posinset="{{::($index+2)}}" aria-setsize="{{::($ctrl.tenants.length + 1)}}">\n      <settings-dropdown-account-profile display-name="::account.primaryText" account-id="::account.accountId" upn="::account.upn" user-name="::account.secondaryText" account-type="::account.accountType" account-index="::$index" account-count="manageAccountController.accounts.length" tenant-id="::account.tenantId" account-idp="::account.idp" is-primary="::account.isPrimary" is-updates-enabled="false" is-guest="::account.isGuest" is-ready="!!account.primaryText">\n      </settings-dropdown-account-profile>\n    </li>\n    <li acc-role="menu-separator" ng-if="sdc.isAddAccountEnabled" class="divider">\n    </li>\n    <li acc-role="menu-item" ng-if="sdc.isAddAccountEnabled" aria-label="{{::$root.resources.strings.settings_options_add_account | translate }}" id="settingsDropdown-addAccountListItem">\n      <button data-tid="addAccountButton" id="settings-add-account-button" class="ts-sym left-align-icon" space-action ng-click="sdc.addAccount()">\n        <ng-include src="\'svg/icons-add.html\'"></ng-include>\n        {{ ::sdc.addAccountText }}\n      </button>\n    </li>\n  </ul>\n</div>'},2194:function(t,e){t.exports='<div id="manageAccountsRoot">\n  <ul class="dropdown-menu">\n    <li ng-repeat="account in manageAccountController.accounts" aria-posinset="{{::($index+1)}}" aria-setsize="{{::($ctrl.tenants.length)}}">\n      <settings-dropdown-account-profile display-name="::account.primaryText" account-id="::account.accountId" upn="::account.upn" user-name="::account.secondaryText" account-type="::account.accountType" account-index="::$index" account-count="manageAccountController.accounts.length" tenant-id="::account.tenantId" account-idp="::account.idp" is-primary="::account.isPrimary" is-updates-enabled="false" is-guest="::account.isGuest" is-ready="!!account.primaryText">\n      </settings-dropdown-account-profile>\n    </li>\n  </ul>\n</div>'},307:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=n(2181),i=n(2182),o=n(87),a=function(){function t(t,e,n,s,i,o,a,r,c,l,u,d,p,g,m,h,v,f,y,S,b,k,w,_,M,A,T,C,x,P,D,E){var I=this;if(this.$translate=t,this.$compile=e,this.resources=n,this.$scope=s,this.$timeout=i,this.$window=o,this.appConfig=a,this.constants=r,this.loggingService=c,this.analyticsService=l,this.unifiedPresenceService=u,this.htmlSanitizer=d,this.utilityService=p,this.channelService=g,this.eventingService=m,this.routeUtilityService=h,this.teamMembershipPropertiesService=v,this.settingsService=f,this.ariaLiveService=y,this.conversationsService=b,this.performanceDetectService=k,this.messageService=w,this.authenticationService=M,this.semanticObjectService=A,this.atMentionService=T,this.peopleService=C,this.tooltipService=x,this.oofService=P,this.dialogService=D,this.exceptionUtilityService=E,this.showBigStatusInputBox=!1,this.showPlaceholder=!0,this.noteIsPinned=!1,this.showCustomDateControl=!1,this.enableStatusNoteV2=!1,this.enableOOFMessageSettings=!1,this.isDoneDisabled=!0,this.isValidExpiryDate=!0,this.expirationTimeValuesInHours={},this.largeMessageLengthThreshold=192,this.mrisAtMentioned=[],this.isMeMenuV2Enabled=!1,this.isCharsRemainingLow=!1,this.logger=c.newLogger(this.constructor.name),this.enableStatusNoteV2=f.valueAsBoolean(r.settings.names.enableStatusNoteV2),this.enableOOFMessageSettings=f.valueAsBoolean(r.settings.names.enableOOFMessageSettings),this.isMeMenuV2Enabled=_.isBlueberryEnabled||f.valueAsBoolean(r.auth.settings.multiAccount.meMenuV2Enabled),this.enableStatusNoteV2){this.pinNoteTooltipId=p.generateUUID(),this.allowedKeys=[r.keyCodes.backspace,r.keyCodes.left,r.keyCodes.up,r.keyCodes.right,r.keyCodes.down,r.keyCodes.delete,r.keyCodes.tab];var O=o.CKEDITOR,N={};N.enterMode=O.ENTER_BR||2,N.keystrokes=[[O.CTRL+66,null],[O.CTRL+73,null],[O.CTRL+85,null]],N.forcePasteAsPlainText=!0;var U=p.generateUUID();i(function(){$(".statusInput").attr("id",U),I.textEditor=S.initEditor(U,N,void 0,void 0,!1),I.updateEditorHandlers()},0,!1),s.searchText="",s.hideEmptyResults=!0,s.showExactMatchesOnly=!1,s.atMentionResultsChanged=function(t){I.textEditor&&I.textEditor.commandSearchResultsChanged(t)}}}return t.$inject=["$translate","$compile","resources","$scope","$timeout","$window","appConfig","constants","loggingService","analyticsService","unifiedPresenceService","htmlSanitizer","utilityService","channelService","eventingService","routeUtilityService","teamMembershipPropertiesService","settingsService","ariaLiveService","textEditorService","conversationsService","performanceDetectService","messageService","mtmaUtilityService","authenticationService","semanticObjectService","atMentionService","peopleService","tooltipService","oofService","dialogService","exceptionUtilityService"],t.prototype.registerTabHandlers=function(){var t=this,e=$("#settings-set-note-dropdown-dropdown-select").find("button").first(),n=$("#oofSettingsLink"),s=$("#setStatusNoteDone"),i=$("#setNoteBackButton");s.keydown(function(e){e.shiftKey||e.keyCode!==t.constants.keyCodes.tab||(e.stopImmediatePropagation(),e.preventDefault(),i.focus())}),i.keydown(function(i){i.keyCode===t.constants.keyCodes.tab&&i.shiftKey&&(i.stopImmediatePropagation(),i.preventDefault(),s.prop("disabled")?t.enableOOFMessageSettings?n.focus():e.focus():s.focus())}),e.keydown(function(e){e.keyCode!==t.constants.keyCodes.tab||t.showCustomDateControl||t.enableOOFMessageSettings||!s.prop("disabled")||e.shiftKey||(e.stopImmediatePropagation(),e.preventDefault(),i.focus())}),n.keydown(function(e){e.keyCode===t.constants.keyCodes.tab&&s.prop("disabled")&&!e.shiftKey&&(e.stopImmediatePropagation(),e.preventDefault(),i.focus())})},t.prototype.registerExpiryTabHandler=function(){var t=this;this.$timeout(function(){var e=$("#setNoteBackButton"),n=$("#setStatusNoteDone");$("#statusNoteDropdownTimePicker").keydown(function(s){s.keyCode===t.constants.keyCodes.tab&&t.showCustomDateControl&&n.prop("disabled")&&!s.shiftKey&&(s.stopImmediatePropagation(),s.preventDefault(),e.focus())})},0,!1)},t.prototype.$onInit=function(){var t=this;this.statusMessageInEdit=this.$scope.sdc.statusMessage||"",this.statusMessageInEdit=this.statusMessageInEdit&&this.statusMessageInEdit.trim(),this.expirationDate=this.$scope.sdc.expirationDate,this.expirationResourceStrings=[this.resources.strings.settings_note_expiry_never,this.resources.strings.settings_note_expiry_hour,this.resources.strings.settings_note_expiry_hours_four,this.resources.strings.settings_note_expiry_today,this.resources.strings.settings_note_expiry_this_week],this.logger.log("this.statusMessageInEdit = "+this.statusMessageInEdit);var e=this.resources.strings.settings_note_expiry_today;this.enableStatusNoteV2?(this.expirationResourceStrings.push(this.resources.strings.settings_note_expiry_custom),this.showCustomDateControl=!1,!this.expirationDate||this.isEndOfToday(this.expirationDate)?e=this.resources.strings.settings_note_expiry_today:this.isEndOfWeek(this.expirationDate)?e=this.resources.strings.settings_note_expiry_this_week:this.expirationDate.getFullYear()===SkypeX.Services.neverExpireDate.getFullYear()?e=this.resources.strings.settings_note_expiry_never:(e=this.resources.strings.settings_note_expiry_custom,this.showCustomDateControl=!0,this.registerExpiryTabHandler())):this.expirationDate&&this.isEndOfWeek(this.expirationDate)?e=this.resources.strings.settings_note_expiry_this_week:this.expirationDate&&this.expirationDate.getFullYear()===SkypeX.Services.neverExpireDate.getFullYear()&&(e=this.resources.strings.settings_note_expiry_never),this.expirationDate||(this.expirationDate=new Date),this._expirationTimes=this.expirationResourceStrings.map(function(e){return t.$translate.instant(e)}),this.selectedExpirationTime=this.$translate.instant(e),this.expirationTimeValuesInHours[this.$translate.instant(this.resources.strings.settings_note_expiry_hour)]=1,this.expirationTimeValuesInHours[this.$translate.instant(this.resources.strings.settings_note_expiry_hours_four)]=4,this.plainTextMessageBeforeEdit=this.utilityService.stripHtml(this.statusMessageInEdit.trim()),this.noteIsPinned=this.isPinnedMessage(this.statusMessageInEdit),this.showPlaceholder=!this.statusMessageInEdit,this.updateStatusCounter(),this.resizeInputBox(),this.focusOnStatusInputBox(),this.sendStatusNoteBITelemetry(teamspace.components.PanelActionOutcome.show,teamspace.components.PanelActionScenario.viewStatusMessageForm,teamspace.components.PanelModuleType.viewer)},t.prototype.$onDestroy=function(){this.textEditor&&(this.peoplePickerHandler&&this.textEditor.deregisterHandler(this.peoplePickerHandler),this.textEditor.teardownEditor()),this.textEditor=null},t.prototype.showPinNoteTooltip=function(t,e){if(e){var n={template:i,trigger:"manual",placement:this.constants.popover.placement.bottomRight,autoClose:!0,scope:this.$scope},s={sourceElement:angular.element(t.currentTarget),tooltipType:teamspace.services.TooltipType.Popover,options:n,tooltipId:this.pinNoteTooltipId};this.tooltipService.showTooltip(s)}else this.tooltipService.clearTooltip(teamspace.services.TooltipType.Popover,this.pinNoteTooltipId)},t.prototype.back=function(){var e=!!this.$scope.sdc.statusMessage;this.$scope.sdc.shouldFocusOnEditStatus=e,this.navigateToSettingsDropdown(),t.focusOnStatusMessage(e,this.isMeMenuV2Enabled)},t.prototype.updateEditorHandlers=function(){var t=this;this.textEditor?(this.registerTabHandlers(),this.peoplePickerHandler?this.textEditor.deregisterHandler(this.peoplePickerHandler):(this.peoplePickerHandler=new teamspace.services.PeoplePickerHandler(this.$scope,this.$compile,this.textEditor,this.constants,this.channelService,this.appConfig,this.eventingService,this.loggingService,this.utilityService,this.routeUtilityService,this.teamMembershipPropertiesService,this.settingsService,this.analyticsService,this.conversationsService,this.$translate,this.resources,this.ariaLiveService,this.performanceDetectService),this.textEditor.registerHandler(this.peoplePickerHandler),this.textEditor.initEditor().then(function(){return t.onEditorReady()}))):this.logger.error("textEditor not created inside updateEditorHandlers")},t.prototype.onEditorReady=function(){this.statusMessageBox=$(".statusEditBox"),this.textEditor.editor.setData(this.statusMessageInEdit),this.registerEditorFocus(),this.registerEditorBlur(),this.registerEditorOnKey(),this.setFocusOnEditor(),this.textEditor.editor.editable().setAttribute("aria-label",""===this.statusMessageInEdit?this.$translate.instant(this.resources.strings.settings_note_status_set_message_placeholder_mentions):""),this.ariaLiveService.update(this.$translate.instant(this.resources.strings.settings_note_status_max_length,{maxLength:t._maxStatusLength}),!0)},Object.defineProperty(t.prototype,"expirationTimes",{get:function(){return this._expirationTimes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxStatusLength",{get:function(){return t._maxStatusLength},enumerable:!0,configurable:!0}),t.prototype.updateStatusCounter=function(){var e=this;if(this.messageLength=this.getMessageLength(),this.noteCharsLeftCounter=t._maxStatusLength-this.messageLength,this.isDoneDisabled=!(this.messageLength>0&&this.noteCharsLeftCounter>=0),this.enableStatusNoteV2?(this.checkAndShowPlaceholder(),this.noteCharsLeftCounter=t._maxStatusLength-this.messageLength,this.updateDoneButtonState()):this.statusLengthCounter=this.$translate.instant(this.resources.strings.settings_note_length,{position:this.messageLength,count:t._maxStatusLength}),this.messageLength>t._maxStatusLength)this.ariaLiveService.update(this.$translate.instant(this.resources.strings.settings_note_status_exceeds_length,{maxLength:t._maxStatusLength}),!0);else if(this.noteCharsLeftCounter<=25){var n=void 0;0===this.noteCharsLeftCounter?n=this.$translate.instant(this.resources.strings.settings_note_status_no_characters_remaining):this.isCharsRemainingLow||(n=this.$translate.instant(this.resources.strings.settings_note_characters_left,{count:this.noteCharsLeftCounter}),this.isCharsRemainingLow=!0),n&&this.ariaLiveService.update(n,!0)}else this.enableStatusNoteV2||(this._updateStatusCounter&&this._updateStatusCounter.cancel(),this._updateStatusCounter=_.debounce(function(){e.ariaLiveService.update(e.statusLengthCounter,!0)},this.constants.timeInMiliseconds.second),this._updateStatusCounter())},t.prototype.onSelectExpiryTime=function(t,e){this.selectedExpirationTime=t,t===this.$translate.instant(this.resources.strings.settings_note_expiry_custom)?(this.expirationDate&&this.expirationDate.getFullYear()===SkypeX.Services.neverExpireDate.getFullYear()&&(this.expirationDate=new Date),this.showCustomDateControl=!0,this.registerExpiryTabHandler()):this.showCustomDateControl=!1,this.updateDoneButtonState(!0)},t.prototype.onPlaceholderClick=function(t){this.setFocusOnEditor(),t.preventDefault()},t.prototype.checkAndShowPlaceholder=function(){this.showPlaceholder=this.textEditor&&this.textEditor.isEmpty()},t.prototype.setFocusOnEditor=function(){this.textEditor&&this.textEditor.editor&&(this.textEditor.editor.focus(),this.textEditor.setCursorToEnd())},t.prototype.getSanitizedMessage=function(){return this.textEditor?this.htmlSanitizer.sanitizeHtml(this.textEditor.getHTML().trim()):this.statusMessageInEdit},t.prototype.getPlainTextMessage=function(){return this.utilityService.stripHtml(this.getSanitizedMessage()).trim()},t.prototype.getMessageLength=function(){return this.getPlainTextMessage().length},t.prototype.getTextLengthForHtmlMessage=function(t){return this.utilityService.stripHtml(t).length},t.prototype.sendChatMessages=function(t){var e=this,n=this.loggingService.newScenario("status note mentions notification"),s=this.semanticObjectService.extractSemanticObjects(t,!1);if(s){var i=s[this.constants.semanticObjectSchemas.mention]||[];i.length?this.authenticationService.getUserInformation().then(function(s){_.each(i,function(o){if(o&&SkypeX.Services.ChatServiceUtils.isRealUserMri(o.userObjectId)){var a=o.userObjectId;e.peopleService.getPeopleProfile(a,"StatusNoteMessage",!1).then(function(o){var r=s.profile.given_name||s.profile.name,c=o.givenName||o.displayName,l=e.$translate.instant(e.resources.strings.status_note_mention_chat_message,{name1:r,name2:c}),u='<div style="width:60rem;">\n                                    <strong>'+l+"</strong>\n                                  </div>\n                                  <blockquote>"+t+"</blockquote>";if(-1===e.mrisAtMentioned.indexOf(a)){e.mrisAtMentioned.push(a);var d=e.conversationsService.getChatConversationWith(a);if(d){var p=SkypeX.Services.Utilities.newClientMessageId();e.messageService.createMessage({conversationId:d.id,replyChainId:null,messageSubject:l,messageBody:u,messagePreview:u,fileAttachments:null,extensions:null,mentions:i,inputExtensionAttachments:null,embeddedLinks:null,isHtml:!0,importance:null,clientId:p,externalId:null,draftObjectId:null,inlineImages:null,scenario:n})}}})}})}):this.logger.log("no @ mentions found in the status note and no chat messages will be sent")}else this.logger.log("no @ mentions found in the status note and no chat messages will be sent")},t.prototype.openOofSettingsDialog=function(){var t=this;this.oofService.retrieveOofSettings().finally(function(){t.$scope.sdc.hide(),t.dialogService.openLazyDialog(t.constants.lazyDialogs.oofMessageDialog,t.constants.lazyModules.oofMessageDialog,{openedFromStatusNoteOofLink:!0})})},t.prototype.setStatus=function(){var e,n=this,s="",i=this.loggingService.newScenario(this.constants.scenarios.statusNoteSettings.setNote),o={isV2:this.enableStatusNoteV2};if(this.enableStatusNoteV2)if((s=this.getSanitizedMessage()).length&&(this.noteIsPinned&&!this.isPinnedMessage(s)?s+=this.constants.statusNotePinnedTag:!this.noteIsPinned&&this.isPinnedMessage(s)&&(s=s.substring(0,s.indexOf(this.constants.statusNotePinnedTag)))),this.getTextLengthForHtmlMessage(s)<=t._maxStatusLength){a={message:s,expiry:this.getExpiryTime()};this.unifiedPresenceService.setMyStatusNote(a).then(function(){n.getPlainTextMessage()!==n.plainTextMessageBeforeEdit&&(s=n.atMentionService.addPersonCardAttributesToMentionsInMessage(s),n.sendChatMessages(s)),i.stop(o),n.navigateToSettingsDropdown();var e=s.length>0;t.focusOnStatusMessage(e,n.isMeMenuV2Enabled)}).catch(function(t){n.setStatusNoteFailure(i,o,t)})}else this.showStatusFailedError=!0,this.ariaLiveService.update(this.$translate.instant(this.resources.strings.settings_note_status_fail_error_live),!0);else{var a={message:s=this.utilityService.stripHtml(this.htmlSanitizer.sanitizeHtml(this.statusMessageInEdit)).trim(),expiry:this.getExpiryTime()};this.unifiedPresenceService.setMyStatusNote(a).then(function(){n.navigateToSettingsDropdown();var e=s.length>0;t.focusOnStatusMessage(e,n.isMeMenuV2Enabled),i.stop(o)}).catch(function(t){n.setStatusNoteFailure(i,o,t)})}var r=this.expirationResourceStrings.filter(function(t){return n.$translate.instant(t)===n.selectedExpirationTime})[0];e={statusMessageLength:s.length,expiryDate:r,mentions:this.getMentionsCountInMessage(s),pinned:this.noteIsPinned,oof:!!this.$scope.sdc.isOOF,v2:this.enableStatusNoteV2},this.sendStatusNoteBITelemetry(teamspace.components.PanelActionOutcome.submit,teamspace.components.PanelActionScenario.setStatusMessage,teamspace.components.PanelModuleType.button,e)},t.prototype.onInputChange=function(){this.updateStatusCounter(),this.resizeInputBox(),this.showStatusFailedError=!1},t.prototype.resizeInputBox=function(){this.showBigStatusInputBox=this.messageLength>=this.largeMessageLengthThreshold},t.prototype.addMention=function(t,e,n){void 0===e&&(e=!1),void 0===n&&(n={}),this.peoplePickerHandler.insertInEditor(t,n)},t.prototype.registerEditorFocus=function(){var t=this;this.textEditor.editor.editable().on("focus",function(){t.checkAndShowPlaceholder(),t.statusMessageBox.addClass("statusEditBoxFocus")})},t.prototype.registerEditorBlur=function(){var t=this;this.textEditor.editor.editable().on("blur",function(){t.statusMessageBox.removeClass("statusEditBoxFocus")})},t.prototype.registerEditorOnKey=function(){var t=this;this.textEditor.editor.on("key",function(e){e.data.parent=e,t.onKeyDown(e.data)},null,null,100)},t.prototype.setStatusNoteFailure=function(t,e,n){e.errorMessage=n&&n.message||"",e.error=JSON.stringify(n),this.exceptionUtilityService.failScenarioSelectively(t,n,e),this.showStatusFailedError=!0,this.ariaLiveService.update(this.$translate.instant(this.resources.strings.settings_note_status_fail_error_live),!0)},t.prototype.onKeyDown=function(e){this.messageLength>=t._maxStatusLength&&-1===this.allowedKeys.indexOf(e.keyCode)&&(e.keyCode!==this.constants.keyCodes.a||!e.ctrlKey)&&(e.preventDefault(),e.stopPropagation())},t.prototype.focusActiveExpiryDropdownElement=function(t){var e=this;this._focusOnDropdownMenuItem||(this._focusOnDropdownMenuItem=_.debounce(function(){if(t){var n=$(t[0].getElementsByClassName("highlight-selected")[0]);n.length>0&&e.setTabAndIndex(n),e.setDropdownHandlers(t),e._focusOnDropdownMenuItem=void 0}},10),this._focusOnDropdownMenuItem())},t.prototype.setDropdownHandlers=function(t){var e=this,n=$("#settings-set-note-dropdown-dropdown-select").find("button").first();t.keydown(function(t){t.preventDefault(),t.stopImmediatePropagation()}),t.keypress(function(t){t.preventDefault(),t.stopImmediatePropagation()}),t.keyup(function(s){e.dropdownKeyHandlers(s,t,n)})},t.prototype.closeOpenDropdowns=function(){this.toggleExpiry(!1,!0)},t.prototype.dropdownKeyHandlers=function(t,e,n){t.keyCode===this.constants.keyCodes.escape||t.keyCode===this.constants.keyCodes.enter?(t.preventDefault(),t.stopImmediatePropagation(),n.focus(),this.toggleExpiry(!1,!0),e.keyup=null):t.keyCode!==this.constants.keyCodes.down&&t.keyCode!==this.constants.keyCodes.up||(t.preventDefault(),t.stopImmediatePropagation())},t.prototype.setTabAndIndex=function(t){angular.isUndefined(t.attr("tabIndex"))&&t.attr("tabIndex","-1"),t[0].focus()},t.prototype.keyboardToggleExpiry=function(t){var e=t.keyCode,n="click"==t.type,s=$("#settings-set-note-dropdown-dropdown-select"),i=$(s.find("button").first()),o=$(s.find("div.dropdown-menu"));n?(this.toggleExpiry(!0,!0),t.preventDefault(),t.stopImmediatePropagation()):e!==this.constants.keyCodes.down&&e!==this.constants.keyCodes.up&&e!==this.constants.keyCodes.enter||$(document.activeElement)[0]!==i[0]||this.focusActiveExpiryDropdownElement(o)},t.prototype.toggleExpiry=function(t,e){void 0===t&&(t=!0),void 0===e&&(e=!0);var n=$("#settings-set-note-dropdown-dropdown-select"),s=$(n.find("button").first()),i=$(n.find("div.dropdown-menu"));!n.hasClass("open")&&t?this.openExpiry(n,i,s):n.hasClass("open")&&e&&this.closeExpiry(n,i,s)},t.prototype.openExpiry=function(t,e,n){t.addClass("open"),e.css({display:"block"}),n.attr("aria-expanded","true"),$('<div class="dropdown-backdrop"></div>').insertAfter(n)},t.prototype.closeExpiry=function(t,e,n){t.removeClass("open"),e.css({display:"none"}),n.attr("aria-expanded","false"),$("#settings-set-note-dropdown-dropdown-select").find("div.dropdown-backdrop").remove()},t.prototype.getExpiryTime=function(){if(this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_note_expiry_never))return SkypeX.Services.neverExpireDate.toISOString();var t=new Date;return this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_note_expiry_today)?t=moment().endOf("day").toDate():this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_note_expiry_this_week)?t=moment().endOf("week").toDate():this.selectedExpirationTime===this.$translate.instant(this.resources.strings.settings_note_expiry_custom)?t=this.combineDateAndTime(this.expirationDate,moment(this.expirationTime,"LT").toDate()):t.setHours(t.getHours()+this.expirationTimeValuesInHours[this.selectedExpirationTime]),t.toISOString()},t.prototype.navigateToSettingsDropdown=function(){this.showStatusFailedError=!1,this.$scope.sdc.state=o.SettingsDropDownStates.INITIAL,this.sendStatusNoteBITelemetry(teamspace.components.PanelActionOutcome.submit,teamspace.components.PanelActionScenario.discardStatusMessage,teamspace.components.PanelModuleType.button),this.$scope.sdc.shouldFocusOnStatusMessage=!0},t.focusOnStatusMessage=function(e,n){var s=e?"settings-dropdown-status-note-actions-edit":"settingsDropdown-statusMessageListItemUnset";n&&(s="settings-dropdown-update-status-button"),t._focusOnStatusMessageTimeout&&t._focusOnStatusMessageTimeout.cancel(),t._focusOnStatusMessageTimeout=_.debounce(function(){var t=document.getElementById(s);t&&t.focus()},10),t._focusOnStatusMessageTimeout()},t.prototype.focusOnStatusInputBox=function(){_.debounce(function(){var t=document.getElementById("settingsSetNote-statusInputBox");t&&t.focus()},10)()},t.prototype.sendStatusNoteBITelemetry=function(t,e,n,s){var i=this;_.defer(function(){var o={action:{gesture:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionGesture.click.toString(),teamspace.components.PanelActionGesture,i.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(t.toString(),teamspace.components.PanelActionOutcome,i.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelActionScenario,i.logger),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.statusMessage.toString(),teamspace.components.PanelActionScenarioType,i.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.statusMessageForm.toString(),teamspace.components.PanelModuleName,i.loggingService).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(n.toString(),teamspace.components.PanelModuleType,i.loggingService),summary:i.resources.strings.settings_options_status_note}};s&&(o.dataBag=s),i.analyticsService.onPanelAction(i.$scope,o)})},t.prototype.isPinnedMessage=function(t){return-1!==t.indexOf(this.constants.statusNotePinnedTag)},t.prototype.isEndOfToday=function(t){return moment().endOf("day").isSame(moment(t))},t.prototype.isEndOfWeek=function(t){return moment().endOf("week").isSame(moment(t))},t.prototype.updateDoneButtonState=function(t){void 0!=t&&(this.isValidExpiryDate=t),this.isDoneDisabled=!(this.messageLength>0&&this.noteCharsLeftCounter>=0&&this.isValidExpiryDate)},t.prototype.combineDateAndTime=function(t,e){return moment(t).hours(e.getHours()).minutes(e.getMinutes()).seconds(0).toDate()},t.prototype.getMentionsCountInMessage=function(t){var e=this,n=0;try{var s=this.$window.htmlparser2,i=s.parseDOM("<div>"+t+"</div>");n=s.DomUtils.findAll(function(t){return"span"===t.name&&t.attribs&&t.attribs.itemtype===e.constants.semanticObjectSchemas.mention},i).length}catch(t){this.loggingService.error("error parsing message to get the number of mentions: "+t)}return n},t._maxStatusLength=280,t}();e.SettingsSetNoteDropdownController=a,angular.module("teamspace.settingsSetNoteDropdown",["teamspace.authenticationService","teamspace.constants","teamspace.mtmaUtilityService"]).controller("SettingsSetNoteDropdownController",a).run(["$templateCache",function(t){t.put("components/settings-dropdown/settings-set-note-dropdown/settings-set-note-dropdown.html",s)}])},87:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s,i=n(2179),o=n(2180),a=n(307),r=n(16);!function(t){t[t.INITIAL=0]="INITIAL",t[t.STATUSNOTE=1]="STATUSNOTE",t[t.MANAGEACCOUNT=2]="MANAGEACCOUNT",t[t.EXPIRYSTATUS=3]="EXPIRYSTATUS"}(s=e.SettingsDropDownStates||(e.SettingsDropDownStates={}));var c=function(){function t(t,e,n,i,o,a,r,c,l,u,d,p,g,m,h,v,f,y,S,b,k,w,M,A,T,$,C,x,P,D,E,I,O,N,U,B,L,F,H,V,z,R,G,X,j,W,K,q,Y,J,Z,Q,tt,et,nt,st,it){var ot=this;this.$window=t,this.$q=e,this.workerDataLayerClientHandler=n,this.$translate=i,this.$state=o,this.resources=a,this.authenticationService=r,this.constants=c,this.callingPolicyStore=l,this.layoutService=u,this.ngDialog=d,this.settingsService=p,this.tenantSettingsStore=g,this.userResourcesSettingsStore=m,this.downloadAppService=h,this.protocolLauncherService=v,this.updateAppService=f,this.$timeout=y,this.dialogService=S,this.helpService=b,this.shortcutService=k,this.navigationService=w,this.identityService=A,this.$scope=T,this.clientDatabase=$,this.presenceService=x,this.presenceManagerService=P,this.voiceSettingsStore=E,this.loggingService=I,this.analyticsService=O,this.desktopUtilityService=N,this.appInfoService=U,this.freemiumUtilities=L,this.unifiedPresenceService=F,this.sfbTeamsUpgradeService=H,this.htmlSanitizer=V,this.dateFormatService=z,this.utilityService=R,this.atMentionService=X,this.appsService=j,this.ariaLiveService=W,this.tenantPrivacyProfileService=K,this.offlineActionsManager=q,this.desktopEventsService=Y,this.tooltipCssApplicators=J,this.tooltipService=Z,this.teamsUpdateManagementSettingsStore=Q,this.tflUtilityService=tt,this.peopleService=et,this.eventingService=nt,this.accountService=st,this.hybridContentVisibilityManager=it,this.enableNewHelpInAppBar=!1,this.zoomUiEnabled=!1,this.zoomPercentString="100%",this.canUserSetBusyOnShiftStatus=!1,this.enableFlwPresence=!1,this.enableMeMenuV2=!1,this.disableMeMenuV2Cache=!1,this.enableExpiryStatusMenu=!1,this.isAddAccountEnabled=!1,this.shouldShowFlwPresence=!1,this.enableAppearOfflineStatus=!1,this.enablePresenceInTFL=!1,this.DropdownStates=s,this.state=this.DropdownStates.INITIAL,this.isStatusNoteButtonFocused=!1,this.chatServiceIntEnvironmentApis=["merlotcity","local"],this.teamsPrivacyFaqUrl=void 0,this.displayPreviewButtonInMeMenu=!1,this.showPublicPreviewSetting=!1,this.displayCastingElement=!1,this.isPresenceTooltipOpen=!1,this.logger=I.newLogger("settings-dropdown"),this.isMac=p.getOsPlatform()===teamspace.services.OsPlatform.Mac,this.processApis(),this.processRings(),this.processPublicDevPreviewSetting(),this.isDesktopHwaApp=N.isDesktopHwa(),this.isDesktopApp=N.isDesktopHwa()||N.isElectron(),this.isCentennial=t.desktopEnvironment&&t.desktopEnvironment.isCentennial,this.showAppPreferences=p.valueAsBoolean(c.settings.names.enableAppPreferences)&&this.isDesktopApp,this.enableMopoLink=p.valueAsBoolean(c.settings.names.enableMopoLinkInSettingsDropdown),this.enableHelpItem=p.valueAsBoolean(c.settings.names.botsEnabled),this.enableWebTPN=p.valueAsBoolean(c.settings.names.enableThirdPartyNoticeEntry)&&!this.isDesktopApp,this.enableDesktopTpn=p.valueAsBoolean(c.settings.names.enableThirdPartyNoticeEntry)&&this.isDesktopApp,this.enableNewHelpInAppBar=p.valueAsBoolean(c.settings.names.enableNewHelpInAppBar),this.enableStatusNoteV2=p.valueAsBoolean(c.settings.names.enableStatusNoteV2),this.displaySettingsComponents=!p.valueAsBoolean(c.settings.names.displaySettingsMenuButtonInAppHeaderBar),this.enableSaved=p.valueAsBoolean(c.settings.names.enableSaved),this.enableMeMenuV2=G.isBlueberryEnabled||p.valueAsBoolean(c.auth.settings.multiAccount.meMenuV2Enabled),this.isMeMenuL1Enabled=this.enableMeMenuV2&&!this.displaySettingsComponents&&!p.valueAsBoolean(c.auth.settings.multiAccount.disableMeMenuL1),this.disableMeMenuV2Cache=p.valueAsBoolean(c.auth.settings.multiAccount.meMenuV2AccountCache),this.enableMultiAccountManagement=G.isBlueberryEnabled||p.valueAsBoolean(c.auth.settings.multiAccount.meMenuEnableMultiAccountManagement)||p.valueAsBoolean(c.auth.hookMods.multiAccount.meMenuForceManageAccounts),this.logger.info("[MultiAccount] Settings flights: showSettingsComps: "+this.displaySettingsComponents+", meMenuV2: "+this.enableMeMenuV2+", meMenuL1: "+this.isMeMenuL1Enabled+", multiAccount: "+this.enableMultiAccountManagement),this.enableAppearOfflineStatus=p.valueAsBoolean(c.settings.names.enablePresenceAppearOfflineStatus),this.enablePresenceInTFL=p.valueAsBoolean(c.settings.names.enablePresenceInTFL),this.isMSAEditDisplayNameEnabled=p.valueAsBoolean(c.settings.names.enableMSAEditDisplayName),this.enableExpiryStatusMenu=p.valueAsBoolean(c.settings.names.enableExpiryStatusMenu),this.isMSAEditProfilePictureEnabled=p.valueAsBoolean(c.settings.names.enableMSAEditProfilePicture),this.isLivePersonaCardInMeControlEnabled=p.valueAsBoolean(c.settings.names.enableLivePersonaCardInMeControl),this.displayPreviewButtonInMeMenu=this.isDesktopApp&&p.valueAsBoolean(c.settings.names.displayPreviewButtonInMeMenu),this.presenceAriaLabel=this.getPresenceAriaLabel(),this.zoomUiEnabled=N.isElectron()&&t.desktopSettings.zoomUiEnabled,this.handleZoomUi(),this.presenceTooltipId=R.generateUUID(),this.displayCastingElement=N.isElectron()&&p.valueAsBoolean(c.settings.names.enableTeamsCasting),this.teamsPrivacyFaqUrl=p.valueFor(c.settings.names.teamsPrivacyFaqUrl),this.unfiedPresenceStatesEnabled=x.isUnfiedPresenceStatesEnabled();var at=B.isCortanaEnabled();teamspace.services.QCancelable.toCancelablePromise(e,at,T).then(function(t){return ot.showCortanaDevTools=t}).catch(function(){return ot.showCortanaDevTools=!1}),this.isMsInternalUser=r.isMsInternalUser(),this.legalLinkUrl=this.isFreemiumTenant?this.isFreemiumAdmin?c.legal.legalUrlFreemium.admin:c.legal.legalUrlFreemium.user:c.legal.legalUrl,this.mopoLinkUrl=c.itpro.mopoUrl,this.showDesktopDownload=h.isDownloadSupported(),this.showMobileDownload=p.valueAsBoolean(c.settings.names.promoteMobile),this.enableFeatureByTenantAndUserSettings(),this.availabilityDropdownTemplate=c.files.templates.availabilityDropdown,this.enableFlwPresence=p.valueAsBoolean(c.settings.names.enableFlwPresence),this.authenticatedUserMri=D.getCurrentSkypeMri(),this.processUserProfile(),this.initializeAddAccountButtonText(),this.isGuestAccessEnabled=M.isGuestAccessEnabled(),this.isGuestUser=A.isGuestUserType(),this.isMSAEditProfilePictureEnabled||this.isMSAEditDisplayNameEnabled?this.enableUserEditProfile=!0:C.waitForSettingAndGetValue(SkypeX.Services.UserPropertiesStorageKey.isMailboxDiscoverable).then(function(t){ot.enableUserEditProfile=t||ot.isFreemiumTenant&&!ot.isGuestUser}),this.changeUserInfoDisplayText=this.isFreemiumTenant?i.instant(a.strings.user_profile_edit_profile):i.instant(a.strings.user_profile_change_picture),this.shouldFocusOnStatusMessage=!1,T.focusOnStatusMessage=function(t){y(function(){if(ot.shouldFocusOnStatusMessage)if(ot.enableMeMenuV2){var e=angular.element("#settings-dropdown-list");e&&_.forEach(e.find(".kb-active"),function(t){t.removeAttribute("tabindex"),t.classList.remove("kb-active")});var n=angular.element("#settings-dropdown-update-status-button");n&&n.addClass("kb-active").attr("tabindex","0").focus()}else{var s=ot.shouldFocusOnEditStatus?t[0].parentElement.parentElement.children:t[0].parentElement.children;_.forEach(s,function(t){t.classList.contains("kb-active")&&(t.removeAttribute("tabindex"),t.classList.remove("kb-active"))}),t&&t.addClass("kb-active").attr("tabindex","0").focus()}})},this.initializeListState(),this.initializeExternalTeamsPersonalButton(),this.fetchAccountsList()}return t.$inject=["$window","$q","workerDataLayerClientHandler","$translate","$state","resources","authenticationService","constants","callingPolicyStore","layoutService","ngDialog","settingsService","tenantSettingsStore","userResourcesSettingsStore","downloadAppService","protocolLauncherService","updateAppService","$timeout","dialogService","helpService","shortcutService","navigationService","guestAccessSettingsService","identityService","$scope","clientDatabase","userOfficeSettingsStore","presenceService","presenceManagerService","sxConfig","voiceSettingsStore","loggingService","analyticsService","desktopUtilityService","appInfoService","cortanaConfigurationService","freemiumUtilities","unifiedPresenceService","sfbTeamsUpgradeService","htmlSanitizer","dateFormatService","utilityService","mtmaUtilityService","atMentionService","appsService","ariaLiveService","tenantPrivacyProfileService","offlineActionsManager","desktopEventsService","tooltipCssApplicators","tooltipService","teamsUpdateManagementSettingsStore","tflUtilityService","peopleService","eventingService","accountService","hybridContentVisibilityManager"],Object.defineProperty(t.prototype,"isFreemiumTenant",{get:function(){return this.settingsService.valueAsBoolean(this.constants.settings.names.enableFreemium)&&this.identityService.isFreemiumTenant()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isFreemiumAdmin",{get:function(){return this.isFreemiumTenant&&this.identityService.isTenantAdmin()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isAdmin",{get:function(){return this.identityService.isTenantAdmin()||this.identityService.isServiceAdmin()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isCheckForUpdatesEnabled",{get:function(){return this.isDesktopApp&&!this.isCentennial},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"teamsProductName",{get:function(){return this.isFreemiumTenant&&this.settingsService.valueFor(this.constants.settings.names.teamsProductName)},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){var e=this;this.showSelfPresence=!this.settingsService.valueAsBoolean(this.constants.settings.names.hideSelfPresenceForSfBUser);var n=!1;this.sfbTeamsUpgradeService.getUpgradePolicyV2().then(function(t){e.loggingService.info("SfbTeamsUpgradeService: Fetched sfb upgrade policy "+t.mode),n=e.sfbTeamsUpgradeService.isSfbPolicy(t)}).finally(function(){e.showSelfPresence=e.showSelfPresence||!n,e.selfPresenceSource=n?SkypeX.Services.PresenceSource.SFB:SkypeX.Services.PresenceSource.UPS,e.canUserChangePresence=e.settingsService.valueAsBoolean(e.constants.settings.names.postPresenceToChatService)||e.unifiedPresenceService.isPostToUpsEnabled(),e.canSetStatusMessage=!n,e.presence=e.presenceManagerService.trackPresenceV2(e.authenticatedUserMri,teamspace.services.PresencePriority.Medium,t.componentName,e.onPresenceUpdate.bind(e),!1,e.selfPresenceSource),e.onPresenceUpdate()})},t.prototype.$onDestroy=function(){this.presenceManagerService.untrackPresenceV2(this.authenticatedUserMri,teamspace.services.PresencePriority.Medium,t.componentName,!1,this.selfPresenceSource)},t.prototype.onPresenceUpdate=function(){if(_.isEmpty(this.presence))return this.shouldShowFlwPresence=!1,this.canUserSetBusyOnShiftStatus=!1,this.showOOFMessage=!1,this.showSetStatusMessage=!1,void(this.showStatusMessage=!1);if(!this.enableFlwPresence)return this.shouldShowFlwPresence=!1,this.canUserSetBusyOnShiftStatus=!1,void this.updateStatusMessage();var t=this.presence.flwPresence,e=this.presence.status;switch(t){case SkypeX.Services.UserFlwPresence.OnShift:return this.shouldShowFlwPresence=!0,void(e===SkypeX.Services.UserStatus.Busy?(this.canUserSetBusyOnShiftStatus=!1,this.updateStatusMessage()):(this.canUserSetBusyOnShiftStatus=!0,this.showOOFMessage=!1,this.showStatusMessage=!1,this.showSetStatusMessage=!1));case SkypeX.Services.UserFlwPresence.OffShift:return this.shouldShowFlwPresence=!0,this.canUserChangePresence=!1,this.canUserSetBusyOnShiftStatus=!1,this.showOOFMessage=!1,this.showStatusMessage=!1,void(this.showSetStatusMessage=!1);default:return this.shouldShowFlwPresence=!1,this.canUserSetBusyOnShiftStatus=!1,void this.updateStatusMessage()}},t.prototype.onFocus=function(t){t&&t.target&&t.target.setAttribute("aria-label",this.changeUserInfoDisplayText)},t.prototype.onBlur=function(t){t&&t.target&&t.target.removeAttribute("aria-label")},t.prototype.onMenuRootClick=function(){this.closePresenceMenuIfOpen()},t.prototype.renderStatusMessage=function(){this.plainTextStatusMessage=this.statusMessage&&this.utilityService.stripHtml(this.htmlSanitizer.sanitizeHtml(this.statusMessage)).trim(),this.formattedExpirationTime=this.dateFormatService.getMessageDisplayableDateTime(this.expirationDate),this.expirationDisplay=this.$translate.instant(this.resources.strings.settings_note_display_until,{expiryTime:this.formattedExpirationTime}),this.showStatusMessage=!!this.statusMessage&&this.isExpiryTimeValid(new Date(this.presence.note.expiry));var t=SkypeX.Services.neverExpireDate.getFullYear()===this.expirationDate.getFullYear();this.showExpiryTime=this.showStatusMessage&&!t&&(!this.showOOFMessage||this.enableStatusNoteV2),this.statusAriaLabel=this.getStatusAriaLabel()},t.prototype.onFocusPresenceButton=function(){var t=this;setTimeout(function(){t.presenceAriaLabel=t.getPresenceAriaLabel()},this.constants.timeInMiliseconds.second)},t.prototype.getPresenceAriaLabel=function(){var t=this.getCurrentUserPresence("#settings-dropdown-user-presence-button");return this.canUserChangePresence?this.$translate.instant(this.resources.strings.meMenu_presence_update_presence_button_aria_label_enabled,{currentPresence:t}):this.$translate.instant(this.resources.strings.meMenu_presence_update_presence_button_aria_label_disabled,{currentPresence:t})},t.prototype.getCurrentUserPresence=function(t){var e=angular.element(t);return e?e.find(".ts-skype-status").attr("title"):""},t.prototype.getStatusAriaLabel=function(){return this.plainTextStatusMessage&&this.plainTextStatusMessage.length?this.$translate.instant(this.resources.strings.settings_note_display_message,{statusMessage:this.plainTextStatusMessage,time:this.formattedExpirationTime}):this.isOOF?this.$translate.instant(this.resources.strings.settings_note_oof_message,{statusMessage:this.presence.calendarData.outOfOfficeNote.message}):this.$translate.instant(this.resources.strings.settings_options_status_note)},t.prototype.getChangeStatusAriaLabel=function(){return this.canUserChangePresence?this.$translate.instant(this.resources.strings.aria_dashboard_change_my_activity):""},t.prototype.getChangeStatusText=function(){return this.showSetStatusMessage?this.$translate.instant(this.resources.strings.settings_options_status_note):this.$translate.instant(this.resources.strings.settings_options_status_note_v2_edit)},Object.defineProperty(t.prototype,"isOOF",{get:function(){return this.presence.calendarData&&this.presence.calendarData.isOutOfOffice&&this.presence.calendarData.outOfOfficeNote&&this.presence.calendarData.outOfOfficeNote.message},enumerable:!0,configurable:!0}),t.prototype.onChangePresenceClick=function(e,n){var s=this;if(!this.closePresenceMenuIfOpen()){this.isPresenceTooltipOpen=!0;var i={templateUrl:t.PresencePopupTemplate,trigger:"manual",container:"body",scope:n,autoClose:!0,placement:"bottom"},o={sourceElement:$(e.currentTarget),tooltipType:teamspace.services.TooltipType.Popover,options:i,tooltipId:this.presenceTooltipId,cssApplicator:function(){s.tooltipCssApplicators.contextMenu(e)}};e.preventDefault(),e.stopPropagation(),this.tooltipService.showTooltip(o),this.sendPresenceMenuOpenBiTelemetry()}},t.prototype.updateStatusMessage=function(){this.showOOFMessage=!1,this.showStatusMessage=!1,this.showSetStatusMessage=!1,this.enableStatusNoteV2?(this.statusMessage=this.presence.note&&this.presence.note.message&&this.htmlSanitizer.sanitizeHtml(this.presence.note.message.trim()),this.statusMessage=this.atMentionService.addPersonCardAttributesToMentionsInMessage(this.statusMessage)):(this.statusMessage=this.presence.note&&this.presence.note.message&&this.utilityService.stripHtml(this.htmlSanitizer.sanitizeHtml(this.presence.note.message)),this.statusMessage=this.statusMessage&&this.statusMessage.trim().substring(0,a.SettingsSetNoteDropdownController._maxStatusLength)),this.expirationDate=this.presence.note&&this.presence.note.message&&new Date(this.presence.note.expiry),this.isExpiryTimeValid(this.expirationDate)||(this.statusMessage="",this.expirationDate=void 0);var t=!!this.statusMessage&&!!this.expirationDate;this.isOOF&&(this.oofMessage=this.utilityService.stripHtml(this.htmlSanitizer.sanitizeHtml(this.presence.calendarData.outOfOfficeNote.message)),this.showOOFMessage=!0),this.isOOF&&!this.enableStatusNoteV2||(t?this.renderStatusMessage():this.showSetStatusMessage=!0)},t.prototype.preventLeftArrowCloseStatusMenu=function(t){t.keyCode===this.constants.keyCodes.left&&(t.stopImmediatePropagation(),document.getElementById("settings-dropdown-status-note-actions-edit").focus())},t.prototype.isExpiryTimeValid=function(t){return new Date<t},t.prototype.setStatusNote=function(){this.state=this.DropdownStates.STATUSNOTE,this.sendStatusNoteBITelemetry(teamspace.components.PanelActionScenario.openStatusMessageForm,teamspace.components.PanelModuleName.setStatusMessageButton)},t.prototype.editStatusNote=function(){this.state=this.DropdownStates.STATUSNOTE,this.sendStatusNoteBITelemetry(teamspace.components.PanelActionScenario.openStatusMessageForm,teamspace.components.PanelModuleName.editStatusMessageButton)},t.prototype.deleteStatusNote=function(){var t=this,e={message:"",expiry:SkypeX.Services.neverExpireDate.toISOString()};this.unifiedPresenceService.setMyStatusNote(e).then(function(){t.statusMessage="",t.showStatusMessage=!1,t.setFocusOnSetStatusMessage(),t.ariaLiveService.update(t.$translate.instant(t.resources.strings.settings_options_status_note_delete_confirmation),!0)}),this.sendStatusNoteBITelemetry(teamspace.components.PanelActionScenario.deleteStatusMessage,teamspace.components.PanelModuleName.deleteStatusMessageButton)},t.prototype.onStatusNoteButtonFocused=function(){this.isStatusNoteButtonFocused=!0},t.prototype.onStatusNoteButtonBlur=function(){this.isStatusNoteButtonFocused=!1},t.prototype.sendPresenceMenuOpenBiTelemetry=function(){this.sendActionBITelemetry(teamspace.components.PanelActionScenario.meMenuOpenPresenceMenu,teamspace.components.PanelModuleName.meMenuPresenceMenuRootButton,teamspace.components.PanelActionScenarioType.meMenu,"Opened presence options menu in Me Menu")},t.prototype.setFocusOnSetStatusMessage=function(){var e=document.getElementById(t.setStatusNoteComponentName);e&&e.focus()},t.prototype.sendStatusNoteBITelemetry=function(t,e){var n=this;_.defer(function(){var s={action:{gesture:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionGesture.click.toString(),teamspace.components.PanelActionGesture,n.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.submit.toString(),teamspace.components.PanelActionOutcome,n.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(t.toString(),teamspace.components.PanelActionScenario,n.logger),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.statusMessage.toString(),teamspace.components.PanelActionScenarioType,n.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelModuleName,n.loggingService).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.button.toString(),teamspace.components.PanelModuleType,n.loggingService),summary:n.resources.strings.settings_options_status_note}};n.analyticsService.onPanelAction(n.$scope,s)})},t.prototype.sendActionBITelemetry=function(t,e,n,s,i){var o=this,a=teamspace.components.PanelActionGesture.click,r=teamspace.components.PanelActionOutcome.submit,c=teamspace.components.PanelModuleType.button;_.defer(function(){var l={action:{gesture:teamspace.shared.AttributeHelper.tryGetEnum(a.toString(),teamspace.components.PanelActionGesture,o.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(r.toString(),teamspace.components.PanelActionOutcome,o.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(t.toString(),teamspace.components.PanelActionScenario,o.logger),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(n.toString(),teamspace.components.PanelActionScenarioType,o.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelModuleName,o.logger.service).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(c.toString(),teamspace.components.PanelModuleType,o.logger.service),summary:s},dataBag:i};o.analyticsService.onPanelAction(o.$scope,l)})},t.prototype.closePresenceMenuIfOpen=function(){return!!this.isPresenceTooltipOpen&&(this.isPresenceTooltipOpen=!1,this.tooltipService.clearTooltip(services.TooltipType.Popover,this.presenceTooltipId),!0)},t.prototype.manageAccount=function(){this.isMeMenuL1Enabled?(this.hide(),this.settingsAccountsDialogShow()):this.state=this.DropdownStates.MANAGEACCOUNT},t.prototype.addAccount=function(){this.dialogService.close(),this.hide(),this.sendActionBITelemetry(teamspace.components.PanelActionScenario.addAccountClick,teamspace.components.PanelModuleName.meMenuAddAccountButton,teamspace.components.PanelActionScenarioType.meMenu,"Click Add Account button in Me Menu"),this.desktopEventsService.onAddAccountClick()},t.prototype.onUsePersonalClick=function(){this.dialogService.close(),this.hide(),this.sendActionBITelemetry(teamspace.components.PanelActionScenario.usePersonalTeamsClick,teamspace.components.PanelModuleName.meMenuUsePersonalTeamsButton,teamspace.components.PanelActionScenarioType.meMenu,"Click use Teams for personal button in Me Menu"),this.logger.info("[TFL backwards compat] Clicked Use Personal Account in Me Menu"),this.tflUtilityService.launchTflPersonal()},t.prototype.onUpgradeClick=function(){this.freemiumUtilities.openUpgradeTeamsUrl()},t.prototype.processApis=function(){var t=this;this.apis=[];var e=this.settingsService.getApi();if(e){var n=this.settingsService.valueFor(this.constants.settings.names.apiSettings);n&&_.keys(n).length>0?(this.showApiSelector=!0,this.currentApiDisplayName=e.friendlyName,this.currentApiId=e.id,_.keys(n).forEach(function(s){var i=n[s];i.friendlyName&&i.friendlyName.length>0&&t.apis.push({identifier:i,displayName:i.friendlyName,active:i.id===e.id})})):this.showApiSelector=!1}},t.prototype.processRings=function(){var t=this;this.rings=[];var e=this.settingsService.valueFor(this.constants.settings.names.ringOverridePermission),n=this.settingsService.getRing();if(n){var s=this.settingsService.valueFor(this.constants.settings.names.availableRings);if(e&&s&&(this.showRingSelector=!0),this.ringSelectorTitle=this.$translate.instant(this.resources.strings.settings_version),this.currentWebRingDisplayName=n.friendlyName,e==this.constants.ringSelection.ringOverridePermission.any)_.forEach(s,function(e){e.friendlyName&&e.friendlyName.length>0&&t.rings.push({identifier:e,displayName:e.friendlyName,active:e.id===n.id})});else if(e==this.constants.ringSelection.ringOverridePermission.optOut){this.ringSelectorTitle=this.$translate.instant(this.resources.strings.settings_preview);var i=this.$translate.instant(this.resources.strings.settings_preview_enabled),o=this.$translate.instant(this.resources.strings.settings_preview_disabled);this.currentWebRingDisplayName=n.isPublic?o:i,_.forEach(s,function(e){t.rings.push({identifier:e,displayName:e.isPublic?o:i,active:e.id===n.id})})}}},t.prototype.switchApi=function(t){var e=this;if("local"===t.id&&this.desktopUtilityService.isDesktop())this.showFeatureNotSupportedDialog();else{var n=this.getUrlAndRoute()+"?api="+t.id+(t.additionalQsp||""),s=this.$q.when();if(this.chatServiceIntEnvironmentApis.some(function(n){return n===t.id||n===e.currentApiId})){var i=SkypeX.Services.SyncTasks.fromThenable(this.workerDataLayerClientHandler.wipeLocalData());this.authenticationService.clearSkypeCache(),this.authenticationService.clearAdalCache(),s=SkypeX.Services.SyncTasks.whenAll([this.clientDatabase.nukeDB(),i]).then(function(){}).toNgPromise(this.$q)}s.finally(function(){e.layoutService.reloadApp(e.resources.strings.refresh_message_default,"apiChange",n)})}},t.prototype.getUrlAndRoute=function(){var t=this.isDesktopApp?"_":"";return""+this.settingsService.getRootUri()+t},t.prototype.showFeatureNotSupportedDialog=function(){var t={confirmMessageTitle:"Local middle tier is not supported in desktop app!",confirmMessageHtmlBody:"Desktop app doesn't work with local middle tier yet. There is some work needed to use 3rd party AAD App when connecting to local middle tier instance.",isConfirmation:!0,confirmDialogType:teamspace.PanelType.lastOwnerLeaveTeamDialog};this.dialogService.open(this.constants.dialogs.confirmDialog,t)},t.prototype.switchRing=function(t){var e=this.getUrlAndRoute()+"?ring="+t.id;this.layoutService.reloadApp(this.resources.strings.refresh_message_default,"ringChange",e)},t.prototype.processPublicDevPreviewSetting=function(){var t=this,e=this.tenantSettingsStore.getSettingValue(SkypeX.Services.TenantSettingsStorageKey.isSideLoadedAppsEnabled),n=!!this.settingsService.valueFor(this.constants.settings.names.publicDevPreviewRing);if(this.publicDevPreviewEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.publicDevPreviewEnabled),this.showPublicDevPreviewSetting=this.publicDevPreviewEnabled||e&&n,this.settingsService.valueAsBoolean(this.constants.settings.names.enableTeamsUpdateManagementSettingsAggFetch)){var s=this.teamsUpdateManagementSettingsStore.getSettings(),i=!(!s||!s.allowPreview)&&s.allowPreview;this.showPublicPreviewSetting=this.publicDevPreviewEnabled||i&&n}this.appsService.getUserAppPolicy("settings-dropdown").then(function(s){e=!(!s||!s.isSideloadingAllowed)&&s.isSideloadingAllowed,t.loggingService.info("settings-dropdown, Get user app policy, isSideloadingAllowed: "+e),t.showPublicDevPreviewSetting=t.publicDevPreviewEnabled||e&&n,t.loggingService.info("settings-dropdown, showPublicDevPreviewSetting: "+t.showPublicDevPreviewSetting)}).catch(function(e){t.loggingService.error("settings-dropdown, Get user app policy failed, error: "+e)})},t.prototype.togglePublicDevPreview=function(t){if(this.publicDevPreviewEnabled){var e=this.getUrlAndRoute()+"?ring=clear";this.layoutService.reloadApp(this.resources.strings.refresh_message_default,t?"disableDevPreview":"disablePublicPreview",e)}else this.ngDialog.open({template:"components/dev-preview-dialog/dev-preview-dialog.html",className:"ngdialog-dev-preview ngdialog-shared ngdialog-theme-default",closeByEscape:!0,closeByDocument:!0,data:{isDeveloperPreview:t}})},t.prototype.navigateToSaved=function(){this.navigationService.navigateToDefaultMySavedState()},t.prototype.settingsDialog=function(t,e,n,s){void 0===n&&(n=!1),this.ngDialog.open({template:"components/settings-list/settings-list.html",className:"ngdialog-settings ngdialog-theme-default",closeByEscape:!0,closeByDocument:!0,controller:"SettingsListController",data:{title:t,cancel:"Cancel",okButton:"OK",settings:e,isTmpSetting:n,allSetting:s}})},t.prototype.debug=function(){this.settingsDialog("Debug settings",this.settingsService.debugSettings)},t.prototype.settings=function(){this.settingsDialog("Experimental settings",this.settingsService.settings)},t.prototype.tmpsettings=function(){this.settingsDialog("TMP experimental settings",this.settingsService.tmpSettings,!0)},t.prototype.openPreviewNewFeaturesDialog=function(){this.sendPreviewNewFeaturesClickedTelemetry(),this.dialogService.open(this.constants.dialogs.previewNewFeaturesDialog)},t.prototype.sendPreviewNewFeaturesClickedTelemetry=function(){var t=this,e={action:{scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.previewFeatures.toString(),teamspace.components.PanelActionScenarioType,this.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.navSettings.toString(),teamspace.components.PanelActionScenario,this.logger),gesture:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionGesture.click.toString(),teamspace.components.PanelActionGesture,this.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.nav.toString(),teamspace.components.PanelActionOutcome,this.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.previewSetting.toString(),teamspace.components.PanelModuleName,this.loggingService).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.settingsButton.toString(),teamspace.components.PanelModuleType,this.loggingService),summary:"User clicked on preview new features button in settings dropdown"}};this.analyticsService.getAnalyticsPanelActionEventData(e).then(function(e){e.panel.type=teamspace.shared.AttributeHelper.tryGetEnum(teamspace.PanelType.settingsDropdown.toString(),teamspace.PanelType,t.logger).toString(),t.analyticsService.sendPanelAction(e)})},t.prototype.openUiToolkit=function(){return this.navigationService.navigatePromise(this.$scope,this.constants.states.toolkit,{})},t.prototype.cortanaDevToolsDialog=function(){this.dialogService.open(this.constants.dialogs.cortanaDevToolsDialog)},t.prototype.showRingSelectionDialog=function(){this.dialogService.open(this.constants.dialogs.ringSelection)},t.prototype.showRoutingSettingsDialog=function(){this.dialogService.open(this.constants.dialogs.routingSettings)},t.prototype.thirdPartyNoticeDialogShow=function(){this.ngDialog.open({template:"components/third-party-notice/third-party-notice.html",className:"ts-modal-dialog",closeByEscape:!0,closeByDocument:!0})},t.prototype.desktopThirdPartyNoticeShow=function(){this.$window.electronSafeIpc.send(this.constants.events.desktopApp.thirdPartyNotice)},t.prototype.notificationSettingsDialogShow=function(){this.settingsService.valueAsBoolean(this.constants.settings.names.notificationsSettingsRevamp)?this.dialogService.open(this.constants.dialogs.notificationSettingsv2):this.dialogService.open(this.constants.dialogs.notificationSettings)},t.prototype.callForwardingSettingsDialogShow=function(){this.dialogService.open(this.constants.dialogs.callForwardingSettings)},t.prototype.optionsSettingsDialogShow=function(){this.dialogService.open(this.constants.dialogs.optionsSettingsDialog,{preActiveElementIds:[this.constants.appHeaderBar.buttonid.profileButton]})},t.prototype.settingsAccountsDialogShow=function(){this.dialogService.open(this.constants.dialogs.optionsSettingsDialog,{preActiveElementIds:[this.constants.appHeaderBar.buttonid.profileButton],tabItemId:"Accounts"})},t.prototype.logOut=function(){var t=this;if(this.offlineActionsManager.hasActionsOfType(r.MessagingOfflineActionType.SendMessageOfflineActionData)||this.offlineActionsManager.hasActionsOfType(r.MessagingOfflineActionType.EditMessageOfflineActionData)){var e={okButtonText:this.$translate.instant(this.resources.strings.main_gear_logout),confirmMessageTitle:this.$translate.instant(this.resources.strings.main_gear_signout_and_delete_messages),confirmMessageHtmlBody:this.$translate.instant(this.resources.strings.main_gear_signout_and_delete_messages_explanation),callback:function(){t.authenticationService.logOut(t.constants.events.appState.reasons.userInitiated)}};this.loggingService.info("OAM had stored messages. Showing signout confirmation dialog"),this.dialogService.open(this.constants.dialogs.confirmDialog,e)}else this.authenticationService.logOut(this.constants.events.appState.reasons.userInitiated)},t.prototype.logOutAllAccounts=function(){},t.prototype.about=function(){this.appInfoService.getVersionInfo()},t.prototype.hasTeamsPrivacyFaqUrl=function(){return!_.isNil(this.teamsPrivacyFaqUrl)},t.prototype.openPrivacyFaqLink=function(){this.$window.open(this.teamsPrivacyFaqUrl,"_blank")},t.prototype.openPrivacyLink=function(){var t=this;this.tenantPrivacyProfileService.getPrivacyPolicyURL().then(function(e){t.$window.open(e,"_blank")})},t.prototype.checkForUpdates=function(){this.updateAppService.update()},t.prototype.downloadApp=function(){this.downloadAppService.download()},t.prototype.openStoreListing=function(){this.protocolLauncherService.launchStoreListing()},t.prototype.downloadMobileApp=function(){this.settingsService.valueAsBoolean(this.constants.settings.names.enableMobileDownloadMailDialog)?this.dialogService.open(this.constants.dialogs.mobileDownload,{preActiveElementIds:[this.constants.appHeaderBar.buttonid.profileButton]}):this.$window.open("https://aka.ms/downloadteams","_blank")},t.prototype.gotoHelp=function(){this.helpService.gotoHelp()},t.prototype.gotoManage=function(){this.$state.go(this.constants.states.appManageTenant)},t.prototype.keyboardShortcuts=function(){var t=this;this.$timeout(function(){return t.shortcutService.executeCommand(teamspace.services.CommandIdentifier.ShowShortcuts)})},t.prototype.processUserProfile=function(){var t=this;this.processAuthenticatedUserProfile(),this.settingsService.valueAsBoolean(this.constants.settings.names.enableForceFetchMSAProfileFromSettings)&&this.peopleService.getMeMSAProfile("app-header-bar",!1,!0).then(function(e){if(!t.peopleService.isUnknownUser(e)){var n=t.decodeUserName(e.displayName);t.authenticatedUserName!=n&&t.eventingService.$emit(t.constants.events.user.profileUpdate,e),t.authenticatedUserName=n,t.authenticatedUserUpn=e.userPrincipalName,t.authenticatedUserEmail=e.email,t.meUser=e}})},t.prototype.processAuthenticatedUserProfile=function(){var t=this;this.authenticationService.getUserInformation().then(function(e){t.authenticatedUserName=t.decodeUserName(e.profile.name),t.authenticatedUserUpn=e.profile.upn,t.authenticatedUserEmail=e.userName})},t.prototype.setUserPresenceAndHideDropdown=function(t,e){this.setUserPresence(e),t.stopPropagation(),this.hide()},t.prototype.startSetExpiryDropdown=function(t){this.state=this.DropdownStates.EXPIRYSTATUS,this.isPresenceTooltipOpen&&(this.isPresenceTooltipOpen=!1,this.tooltipService.clearTooltip(teamspace.services.TooltipType.Popover,this.presenceTooltipId)),t.stopPropagation()},t.prototype.setUserPresence=function(t){var e=this.presenceService.createPanelActionEventData(teamspace.components.PanelActionGesture.click,teamspace.components.PanelActionOutcome.select,teamspace.components.PanelModuleName.setPresence,teamspace.components.PanelModuleType.menu,this.enableMeMenuV2?"settings-dropdown-me-menu-v2.setUserPresence":"settings-dropdown.setUserPresence");this.presenceService.setMyStatus(t,e,!0)},t.prototype.editPictureClicked=function(){this.dialogService.close(),this.hide();var t=this.constants.appHeaderBar.buttonid.profileButton;this.dialogService.open(this.constants.dialogs.changeUserPicture,{preActiveElementIds:[t]})},t.prototype.editNameClicked=function(){this.dialogService.close(),this.hide();var t=this.constants.appHeaderBar.buttonid.profileButton;this.dialogService.open(this.constants.dialogs.updateUserProfile,{isFre:!1,preActiveElementIds:[t],user:this.meUser,isMSAEditNameClick:!0})},t.prototype.changeProfile=function(){this.dialogService.close(),this.hide();var t=this.constants.appHeaderBar.buttonid.profileButton;this.isFreemiumTenant?this.dialogService.open(this.constants.dialogs.updateUserProfile,{isFre:!1,preActiveElementIds:[t],isMSAEditNameClick:!1}):this.dialogService.open(this.constants.dialogs.changeUserPicture,{preActiveElementIds:[t]})},t.prototype.openCastWindow=function(){var t=this;if(this.displayCastingElement&&this.hybridContentVisibilityManager){var e={id:null,type:"cast",action:"view"},n=this.utilityService.generateUUID(),s={entity:e,command:{visibilityState:"show",stateTransition:"new",correlation:{id:n,startTimestamp:Date.now(),source:this.constants.events.multiWindow.entryPoints.teamsCast}}};this.hybridContentVisibilityManager.enqueueEntityCommand(s).then(function(){t.logger.info("Cast app popping out with command: "+s.entity.type+", action: "+s.entity.action+", correlationId: "+n)}).catch(function(e){t.logger.error("Error popping out cast window: "+JSON.stringify(e)+". CorrelationId: "+n)})}},t.prototype.hide=function(){this.$scope.$parent.$hide()},t.prototype.closeOpenDropdowns=function(){$(".settings-dropdown .child-popover").removeAttr("style")},t.prototype.zoomIn=function(){this.zoomIpc(this.constants.events.desktopApp.zoomIn)},t.prototype.zoomOut=function(){this.zoomIpc(this.constants.events.desktopApp.zoomOut)},t.prototype.zoomReset=function(){this.zoomIpc(this.constants.events.desktopApp.zoomReset)},t.prototype.zoomIpc=function(t){this.desktopUtilityService.isElectron()&&this.$window.electronSafeIpc.send(t,!0,this.constants.desktopApp.telemetry.zoomSource.settingsDropdownUi)},t.prototype.onZoomLevelChange=function(t,e){this.loggingService.info("New zoom percent: "+e),this.zoomPercentString=this.$translate.instant(this.resources.strings.zoom_percent_ui_string).replace("{0}",String(e)),this.loggingService.info("New zoom percent string is: "+this.zoomPercentString)},t.prototype.handleZoomUi=function(){var t=this;if(this.zoomUiEnabled&&this.$window.electronSafeIpc){var e=this.onZoomLevelChange.bind(this);this.zoomPercentString=this.$translate.instant(this.resources.strings.zoom_percent_ui_string).replace("{0}",String(this.desktopUtilityService.getZoomPercent())),this.$window.electronSafeIpc.on(this.constants.events.desktopApp.zoomLevelChange,e),this.$scope.$on("$destroy",function(){t.$window.electronSafeIpc.removeListener(t.constants.events.desktopApp.zoomLevelChange,e)})}},t.prototype.decodeUserName=function(t){if(!t)return t;var e=decodeURIComponent(t);return e&&e.trim()!==t.trim()&&this.loggingService.event(this.constants.auth.telemetry.events.multiAccount.meMenuUserNameContainsEncoding),this.settingsService.valueAsBoolean(this.constants.auth.settings.multiAccount.meMenuDisableUserNameDecode)?t:e},t.prototype.initializeAddAccountButtonText=function(){var t=this.resources.strings.settings_options_add_account;this.settingsService.valueAsBoolean(this.constants.auth.settings.multiAccount.disableNewAddAccountButtonText)||(t=this.authenticationService.isCurrentUserTFLOrMsaAccount()?this.resources.strings.meMenu_add_account_work_or_school:this.resources.strings.meMenu_add_account_personal),this.addAccountText=this.$translate.instant(t)},t.prototype.fetchAccountsList=function(){var e=this;if(this.initializeManageAccountsText(0),this.enableMeMenuV2&&!this.settingsService.valueAsBoolean(this.constants.auth.settings.multiAccount.meMenuDisablePrefetchAccountList)){var n=this.constants.auth.telemetry.scenarios.multiAccount.getAddedAccounts,s=this.logger.service.newScenario(n.scenarioNames.initializeAccountsList),i={};i[n.properties.loadSource]="MeMenuL1",s.appendEventData(i),this.desktopEventsService.getAddedAccounts(s,this.disableMeMenuV2Cache).then(function(i){var o=i?i.length:-1,a=e.$window.desktopSettings.enableAadAddAccount;e.logger.log("[MultiAccount] Received accounts. Count: {0}, AAD Add Account Enabled: {1}",o,a);var r={};r[n.properties.accountsCount]=o,s.stop(r),e.initializeManageAccountsText(o),i&&(e.isAddAccountEnabled=e.accountService.isAddAccountEnabled(i,t.componentName))}).catch(function(){s.fail({reason:"[Settings Dropdown] Failed while getting added accounts"})})}else this.isAddAccountEnabled=this.accountService.isAddAccountEnabled([],t.componentName)},t.prototype.initializeExternalTeamsPersonalButton=function(){var t=this.tflUtilityService.isTflBackwardsCompatibilityEnabled,e=this.tflUtilityService.isUsePersonalVisible;return this.isExternalTflLinkVisible=t&&e,this.logger.info("[TFLBackCompat] Should show link: "+this.isExternalTflLinkVisible+". {0}, {1}",t,e),this.isExternalTflLinkVisible},t.prototype.initializeManageAccountsText=function(t){if(this.isMeMenuL1Enabled){var e=t>1?this.resources.strings.settings_options_manage_account_v2_plural:this.resources.strings.settings_options_manage_account_v2_singular;this.manageAccountsText=this.$translate.instant(e)}else this.manageAccountsText=this.$translate.instant(this.resources.strings.settings_options_manage_account);this.utilityService.digest(this.$scope)},t.prototype.initializeListState=function(){this.settingsService.valueAsBoolean(this.constants.auth.hookMods.multiAccount.meMenuForceL2OnOpen)?this.state=s.MANAGEACCOUNT:this.state=s.INITIAL},t.prototype.enableFeatureByTenantAndUserSettings=function(){var t=this;return this.callingPolicyStore.waitForSettingAndGetValue(SkypeX.Services.CallingPolicyStorageKey.allowPrivateCalling).then(function(e){if(e){if(t.settingsService.valueAsBoolean(t.constants.settings.names.routingSettings)){t.enableRoutingSettings=!0;var n=t.settingsService.valueAsBoolean(t.constants.settings.names.readIsSfbCloudFromVoiceSettings);(n?t.voiceSettingsStore.waitForSettingAndGetValue(SkypeX.Services.VoiceSettingsStorageKey.isSipEnabled):t.userResourcesSettingsStore.waitForSettingAndGetValue(SkypeX.Services.UserResourcesStorageKey.isSipEnabled)).then(function(e){var s=n?t.voiceSettingsStore.getSettingValue(SkypeX.Services.VoiceSettingsStorageKey.isSfbCloud):t.userResourcesSettingsStore.getSettingValue(SkypeX.Services.UserResourcesStorageKey.isSfbCloud);e&&s||(t.logger.debug("Setting enableRoutingSettings to false, isSipEnabled={0}, isSfbCloud={1}",e,s),t.enableRoutingSettings=!1)}).catch(function(e){t.logger.error("userResourcesSettingsStore.waitForSettingAndGetValue errored out {0}",e)})}t.settingsService.valueAsBoolean(t.constants.settings.names.enableCallForwardingSettings)&&t.voiceSettingsStore.waitForSettingAndGetValue(SkypeX.Services.VoiceSettingsStorageKey.isEvEnabled).then(function(e){t.callForwardingSettingsEnabled=e})}}).catch(function(e){t.logger.error("callingPolicyStore.waitForSettingAndGetValue errored out for key: "+SkypeX.Services.CallingPolicyStorageKey.allowPrivateCalling+" error: "+e)})},t.componentName="settings-dropdown",t.setStatusNoteComponentName="settings-dropdown-update-status-button",t.PresencePopupTemplate="components/settings-dropdown/settings-presence-pop.html",t}();e.SettingsDropdownController=c,angular.module("teamspace.settingsDropdown",["teamspace.authenticationService","teamspace.constants","teamspace.guestAccessSettingsService","teamspace.mtmaUtilityService","teamspace.identityService","teamspace.layoutService","teamspace.settingsService","teamspace.downloadAppService","teamspace.protocolLauncherService","teamspace.updateAppService","teamspace.helpService","teamspace.shortcutService","teamspace.eventingService","teamspace.desktopUtilityService","teamspace.appInfoService","teamspace.freemiumUtilities","teamspace.postRender","teamspace.tenantPrivacyProfileService","teamspace.offlineActionsManager","teamspace.appsService","teamspace.settingsDropdownAccountProfile","teamspace.settingsManageAccountDropdown","teamspace.tflUtilityService","teamspace.tooltipCssApplicators","teamspace.tooltipService","teamspace.desktopEventsService","teamspace.peopleService","skypeX.teamsUpdateManagementSettingsStore","skypeX.userResourcesSettingsStore","teamspace.hybridContentVisibilityManager"]).component("settingsDropdown",{template:i,controller:c,controllerAs:"sdc"}).run(["$templateCache",function(t){t.put("components/settings-dropdown/settings-presence-pop.html",o)}])}},[2178]);