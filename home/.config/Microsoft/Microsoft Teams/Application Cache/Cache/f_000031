webpackJsonp([24],{139:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,a,i,s,n,r,l,c){this.title=t,this.messages=e,this.valueCSSClass=a,this.compareType=i,this.sourceStatKey=s,this.eventsThatEnableMetric=n,this.eventsThatDisableMetric=r,this.thresholds=l,this.valueConversion=c,this.state=teamspace.services.CallHealthStateOld.NotAvailable,this.enabled=!1}return t.prototype.updateMetric=function(t){var e=t.get(this.sourceStatKey);return null!=e&&(null==this.value&&(this.enabled=!0),this.value=this.valueConversion(e),1!==this.compareType&&(this.state=this.getState(e)),!0)},t.prototype.getState=function(t){if("number"!=typeof parseInt(t.toString())||2===this.compareType)return teamspace.services.CallHealthStateOld.NotAvailable;switch(this.compareType){case 4:return t<this.thresholds.Amber?teamspace.services.CallHealthStateOld.Green:t<this.thresholds.Red?teamspace.services.CallHealthStateOld.Amber:teamspace.services.CallHealthStateOld.Red;case 3:return t>this.thresholds.Amber?teamspace.services.CallHealthStateOld.Green:t>this.thresholds.Red?teamspace.services.CallHealthStateOld.Amber:teamspace.services.CallHealthStateOld.Red;default:return teamspace.services.CallHealthStateOld.NotAvailable}},t.prototype.disableMetric=function(){this.enabled=!1},t.prototype.enableMetric=function(){null!=this.value&&(this.enabled=!0)},t.prototype.handleEvent=function(t){_.includes(this.eventsThatEnableMetric,t)&&this.enableMetric(),_.includes(this.eventsThatDisableMetric,t)&&this.disableMetric()},t}();e.CallHealthMetricOld=i},2521:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),a(2522)},2522:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),a(2523),a(2529)},2523:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=a(2524),s=a(2525),n=function(){function t(t,e,a,i,n,r,l,c,o){this.meetingPolicySettingsStore=t,this.loggingService=e,this.$scope=a,this.$interval=i,this.$q=n,this.constants=r,this.telemetryBag={trackScenario:teamspace.components.PanelActionScenario.meetingShowPanel,trackScenarioType:teamspace.components.PanelActionScenarioType.broadcast,trackType:teamspace.components.PanelModuleType.button,trackSummary:"Close Call health panel from header"},this.categories=[],this.healthStates=teamspace.services.CallHealthStateOld,this.customRightRailHeader=!1,this.callTechInfoRefreshInterval=null,this.technicalInfoApiCount=0,this.panelType=teamspace.components.Calling.RightPanel.CallHealth,this.metricDefinitionFactory=new s.CallHealthMetricDefinitionFactoryOld(c,o),this.callHealthTabSettings=l.valueFor(r.callHealthTab.settings);var h=(this.callHealthTabSettings.technicalInfoRefreshRate/1e3).toString();this.disclaimerText=c.instant(o.strings.call_health_tab_disclaimer,{refreshRate:h}),this.isUbarEnabled=3===this.meetingPanelLocation&&l.valueAsBoolean(r.settings.names.enableUnifiedControlBar)||(2===this.meetingPanelLocation||1)&&l.valueAsBoolean(r.settings.names.enableUbarV2ForBroadcast),this.customRightRailHeader=l.valueAsBoolean(r.settings.names.customRightRailHeader),this.initialize()}return t.$inject=["meetingPolicySettingsStore","loggingService","$scope","$interval","$q","constants","settingsService","$translate","resources"],t.prototype.initialize=function(){var t=this,e=this.callHealthTabSettings.technicalInfoRefreshRate;this.isVideoOn=this.call.isVideoOn,this.categories=this.metricDefinitionFactory.getCategories(this.meetingPanelLocation);var a=this.getPolicyStats();this.updateCategories(a),this.getCallTechnicalInfoStatsPromise=teamspace.services.QCancelable.toCancelablePromise(this.$q,this.getCallTechnicalInfoStats()),this.getCallTechnicalInfoStatsPromise.then(function(e){t.updateCategories(e)}),this.callChangedSubscription=this.call.changed(function(){t.callChanged()}),this.callTechInfoRefreshInterval=this.$interval(function(){return t.refreshFromCallTechnicalInfo()},e,0,!0),this.$scope.$on("$destroy",function(){return t.destroy()})},t.prototype.destroy=function(){var t;if(this.$interval.cancel(this.callTechInfoRefreshInterval),this.callTechInfoRefreshInterval=null,this.callChangedSubscription&&(this.callChangedSubscription.dispose(),this.callChangedSubscription=null),this.getTechnicalInfoScenario&&(this.getTechnicalInfoScenario.cancel(),this.getTechnicalInfoScenario=null),this.technicalInfoApiCount%this.callHealthTabSettings.technicalInfoScenarioSampleNumber!=1){var e=this.loggingService.newScenario(this.constants.callHealthTab.getTechnicalInfoScenario);this.technicalInfoApiLastCallSuccess?e.stop():e.fail((t={},t[this.constants.scenarioDataPropNames.broadcastError]=this.technicalInfoApiLastCallError,t))}this.getCallTechnicalInfoStatsPromise&&(teamspace.services.QCancelable.cancel(this.getCallTechnicalInfoStatsPromise),this.getCallTechnicalInfoStatsPromise=null)},t.prototype.updateCategories=function(t){this.categories.forEach(function(e){return e.updateMetrics(t)})},t.prototype.handleEvent=function(t){this.categories.forEach(function(e){return e.handleEvent(t)})},t.prototype.getPolicyStats=function(){var t=new Map;t.set("MediaBitRateKb",this.meetingPolicySettingsStore.getSettingValue(SkypeX.Services.MeetingPolicySettingsStorageKey.mediaBitRateKb));var e,a=this.meetingPolicySettingsStore.getSettingValue(SkypeX.Services.MeetingPolicySettingsStorageKey.allowIPVideo),i=this.meetingPolicySettingsStore.getSettingValue(SkypeX.Services.MeetingPolicySettingsStorageKey.screenSharingMode)===SkypeX.Services.ScreenSharingMode.entireScreen;return e=a&&i?3:a||i?a?1:2:4,t.set("IPVideoVBSSPolicyState",e),t},t.prototype.getCallTechnicalInfoStats=function(){var t=this,e=new Map;return this.technicalInfoApiCount%this.callHealthTabSettings.technicalInfoScenarioSampleNumber==0&&(this.getTechnicalInfoScenario=this.loggingService.newScenario(this.constants.callHealthTab.getTechnicalInfoScenario)),this.technicalInfoApiCount++,new Promise(function(a,i){t.call.getTechnicalInformationJson().then(function(i){var s=JSON.parse(i),n=s&&s.channels,r=n&&n[1];if(r&&(r.hasOwnProperty("Received BW estimate")&&e.set("Received BW estimate",r["Received BW estimate"]),r.hasOwnProperty("Send RTT (Avg)")&&e.set("Send RTT (Avg)",r["Send RTT (Avg)"]),r.hasOwnProperty("Send Actual Height")&&e.set("Send Actual Height",r["Send Actual Height"]),r.hasOwnProperty("Sent Codec Name"))){var l=void 0,c=r["Sent Codec Name"].toString().trim().split(" ");2===c.length?l="hw"==c[1]?1:2:c.length>2&&(l=3),e.set("Sent Codec Name",l)}return t.technicalInfoApiLastCallSuccess=!0,t.technicalInfoApiLastCallError=null,t.getTechnicalInfoScenario&&(t.getTechnicalInfoScenario.stop(),t.getTechnicalInfoScenario=null),t.getCallTechnicalInfoStatsPromise=null,a(e)}).catch(function(e){var a;return t.logger.error("Error while fetching technical information from call."),t.technicalInfoApiLastCallSuccess=!1,t.technicalInfoApiLastCallError=JSON.stringify(e),t.getTechnicalInfoScenario&&(t.getTechnicalInfoScenario.fail((a={},a[t.constants.scenarioDataPropNames.broadcastError]=JSON.stringify(e),a)),t.getTechnicalInfoScenario=null),t.loggingService.event(t.constants.callHealthTab.getTechnicalInfoFailure,{error:JSON.stringify(e)}),t.getCallTechnicalInfoStatsPromise=null,i(e)})})},t.prototype.callChanged=function(){if(this.call.isVideoOn!=this.isVideoOn){this.isVideoOn=this.call.isVideoOn;var t=this.isVideoOn?2:1;this.handleEvent(t),2==t&&this.refreshFromCallTechnicalInfo()}},t.prototype.refreshFromCallTechnicalInfo=function(){var t=this;this.getCallTechnicalInfoStatsPromise&&teamspace.services.QCancelable.cancel(this.getCallTechnicalInfoStatsPromise),this.getCallTechnicalInfoStatsPromise=teamspace.services.QCancelable.toCancelablePromise(this.$q,this.getCallTechnicalInfoStats()),this.getCallTechnicalInfoStatsPromise.then(function(e){e&&t.updateCategories(e)})},t}();e.CallHealthTabController=n,angular.module("teamspace.callHealthTab",["teamspace.loggingService","teamspace.constants"]).component("callHealthTab",{bindings:{call:"<?",meetingPanelLocation:"<?"},controllerAs:"ctrl",controller:n,templateUrl:"components/calling/common/call-health-tab/call-health-tab.html"}).run(["$templateCache",function(t){t.put("components/calling/common/call-health-tab/call-health-tab.html",i)}])},2524:function(t,e){t.exports='<div class="health-panel" id="callHealthTab" ng-class="::{\'right-pane-header\': ctrl.customRightRailHeader, \'unified-bar-mode\': ctrl.isUbarEnabled}">\n  <right-pane-header ng-if="ctrl.customRightRailHeader" usage-scenario="meeting-pane" panel-type="{{ctrl.panelType}}" text="{{::$root.resources.strings.call_health_tab_title|translate}}" telemetry-bag="ctrl.telemetryBag">\n  </right-pane-header>\n\n  <div class="disclaimer" ng-bind-html="::ctrl.disclaimerText"></div>\n  <div simple-scrollbar>\n    <div> \x3c!-- Single empty child div required by simple-scrollbar --\x3e\n      <div class="health-tab-content">\n        \x3c!-- Categories --\x3e\n        <ul class="health-category" ng-repeat="category in ctrl.categories">\n          \x3c!-- title --\x3e\n          <div ng-click="category.toggleExpand();" id="{{\'category_\' + $index}}" role="button" aria-expanded="{{category.expand}}" aria-controls="{{\'metrics_of_\'+ $index}}" class="health-category-title inset-border inset-border-themed ts-sym" tabindex="0">\n            <button class="ts-sym category-expand-arrow app-icons-fill-focus" tabindex="-1"><ng-include src="\'svg/icons-triangle-\' + (category.expand ? \'down\' : \'right\') + \'-small.html\'" class="iconWrapper"></ng-include></button> \x3c!-- button with aria-expanded tag--\x3e\n            <h3 class="category-title">{{category.title}}</h3>\n            <div class="category-state-icon" ng-if="!category.expand && category.state !== ctrl.healthStates.NotAvailable"><ng-include src="\'svg/icons-\' + (category.state === ctrl.healthStates.Green ? \'good\' : (category.state === ctrl.healthStates.Amber ? \'circle-warning\' : \'critical\')) + \'.html\'" class="iconWrapper"></ng-include></div>\n          </div>\n          \x3c!-- metrics --\x3e\n          <div id="{{\'metrics_of_\'+ $index}}" aria-labelledby="{{\'category_\' + $index}}">\n            <li class="health-metric" ng-show="category.expand" ng-repeat="(name, metric) in category.metrics">\n              <div>\n                <div class="health-metric-title" ng-class="{\'metric-title-disabled\': !metric.enabled}">\n                  <span class="metric-title">{{metric.title}}</span>\n                  <div class="metric-title-icon-info" ng-attr-title="{{metric.messages[\'helpText\']}}"><ng-include src="\'svg/icons-info.html\'"></ng-include></div>\n                  <div class="metric-state-icon" ng-show="metric.enabled && metric.state !== ctrl.healthStates.NotAvailable"><ng-include src="\'svg/icons-\' + (metric.state === ctrl.healthStates.Green ? \'good\' : (metric.state === ctrl.healthStates.Amber ? \'circle-warning\' : \'critical\')) + \'.html\'" class="iconWrapper"></ng-include></div>\n                </div>\n                <div class="metric-value" ng-class="metric.valueCSSClass" ng-show="metric.enabled">{{metric.value}}</div>\n                <div class="metric-disabled-text" ng-if="metric.messages[\'disabledText\'] && !metric.enabled">{{metric.messages["disabledText"]}}</div>\n                <div class="metric-state-text" ng-if="metric.enabled && metric.state == ctrl.healthStates.Green && metric.messages[\'stateGreenText\']">{{metric.messages["stateGreenText"]}}</div>\n                <div class="metric-state-text" ng-if="metric.enabled && metric.state == ctrl.healthStates.Amber && metric.messages[\'stateAmberText\']">{{metric.messages["stateAmberText"]}}</div>\n                <div class="metric-state-text" ng-if="metric.enabled && metric.state == ctrl.healthStates.Red && metric.messages[\'stateRedText\']">{{metric.messages["stateRedText"]}}</div>\n              </div>\n            </li>\n          </div>\n          \x3c!-- metrics --\x3e\n\n        </ul> \x3c!-- health-category --\x3e\n      </div> \x3c!-- health-tab-content --\x3e\n    </div> \x3c!-- child - simple-scrollbar --\x3e\n  </div> \x3c!-- simple-scrollbar --\x3e\n</div>'},2525:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=a(2526),s=a(139),n=a(2527),r=a(2528),l=function(){function t(t,e){this.$translate=t,this.resources=e}return t.prototype.getCategories=function(t){var e=[];switch(t){case 1:case 2:case 3:var a=[];a.push(this.getNewSendBandwidthEstimateMetric()),a.push(this.getNewRoundTripTimeMetric()),e.push(new i.CallHealthCategoryOld(this.$translate.instant(this.resources.strings.call_health_tab_category_title_network),a));var s=[];s.push(this.getNewCameraCodecMetric()),s.push(this.getNewCameraSendResolutionMetric()),e.push(new i.CallHealthCategoryOld(this.$translate.instant(this.resources.strings.call_health_tab_category_title_devices),s));var n=[];return n.push(this.getNewMediaSharingPolicyMetric()),n.push(this.getNewMediaBitRateLimitPolicyMetric()),e.push(new i.CallHealthCategoryOld(this.$translate.instant(this.resources.strings.call_health_tab_category_title_policy),n)),e;default:return e}},t.prototype.getNewSendBandwidthEstimateMetric=function(){var t=this,e=this.$translate.instant(this.resources.strings.call_health_tab_metric_title_send_bandwidth),a={disabledText:this.$translate.instant(this.resources.strings.call_health_tab_camera_disabled_text),helpText:this.$translate.instant(this.resources.strings.call_health_tab_metric_tooltip_send_bandwidth)};return new s.CallHealthMetricOld(e,a,null,1,"Received BW estimate",[2],[1],null,function(e){var a=parseInt(e.toString());if(!a)return e;var i=parseFloat((a/1e6).toFixed(2));return t.$translate.instant(t.resources.strings.call_health_tab_value_suffix_mbps,{value:i})})},t.prototype.getNewRoundTripTimeMetric=function(){var t=this,e=this.$translate.instant(this.resources.strings.call_health_tab_metric_title_round_trip_time),a={disabledText:this.$translate.instant(this.resources.strings.call_health_tab_camera_disabled_text),helpText:this.$translate.instant(this.resources.strings.call_health_tab_metric_tooltip_round_trip_time)};return new s.CallHealthMetricOld(e,a,null,1,"Send RTT (Avg)",[2],[1],null,function(e){return t.$translate.instant(t.resources.strings.call_health_tab_value_suffix_ms,{value:e})})},t.prototype.getNewCameraCodecMetric=function(){var t=this,e=this.$translate.instant(this.resources.strings.call_health_tab_metric_title_camera_codec),a={disabledText:this.$translate.instant(this.resources.strings.call_health_tab_camera_disabled_text),helpText:this.$translate.instant(this.resources.strings.call_health_tab_metric_tooltip_camera_codec),stateAmberText:this.$translate.instant(this.resources.strings.call_health_tab_metric_amber_state_text_camera_codec),stateRedText:this.$translate.instant(this.resources.strings.call_health_tab_metric_red_state_text_camera_codec)};return new n.CallHealthMetricCodecOld(e,a,"metric-value-small-text",1,"Sent Codec Name",[2],[1],null,function(e){switch(e){case 1:return t.$translate.instant(t.resources.strings.call_health_tab_camera_codec_hardware);case 2:return t.$translate.instant(t.resources.strings.call_health_tab_camera_codec_software);case 3:return t.$translate.instant(t.resources.strings.call_health_tab_camera_codec_hardware_software_fluctuation);case 4:return}})},t.prototype.getNewCameraSendResolutionMetric=function(){var t=this,e=this.$translate.instant(this.resources.strings.call_health_tab_metric_title_camera_send_resolution),a={disabledText:this.$translate.instant(this.resources.strings.call_health_tab_camera_disabled_text),helpText:this.$translate.instant(this.resources.strings.call_health_tab_metric_tooltip_camera_send_resolution)};return new s.CallHealthMetricOld(e,a,null,1,"Send Actual Height",[2],[1],null,function(e){return t.$translate.instant(t.resources.strings.call_health_tab_value_suffix_resolution,{value:e})})},t.prototype.getNewMediaSharingPolicyMetric=function(){var t=this,e=this.$translate.instant(this.resources.strings.call_health_tab_metric_title_media_sharing_policy),a={helpText:this.$translate.instant(this.resources.strings.call_health_tab_metric_tooltip_media_sharing_policy)};return new r.CallHealthMetricMediaSharingPolicyOld(e,a,"metric-value-small-text",1,"IPVideoVBSSPolicyState",null,null,null,function(e){switch(e){case 1:return t.$translate.instant(t.resources.strings.call_health_tab_media_sharing_ip_video_only);case 2:return t.$translate.instant(t.resources.strings.call_health_tab_media_sharing_screen_sharing_only);case 3:return t.$translate.instant(t.resources.strings.call_health_tab_media_sharing_both_enabled);case 4:return t.$translate.instant(t.resources.strings.call_health_tab_media_sharing_both_disabled)}})},t.prototype.getNewMediaBitRateLimitPolicyMetric=function(){var t=this,e=this.$translate.instant(this.resources.strings.call_health_tab_metric_title_media_bitrate_limit_policy),a={helpText:this.$translate.instant(this.resources.strings.call_health_tab_metric_tooltip_media_bitrate_limit_policy)};return new s.CallHealthMetricOld(e,a,null,1,"MediaBitRateKb",null,null,null,function(e){var a=parseInt(e.toString());if(!a)return e;var i=parseFloat((a/1e3).toFixed(2));return t.$translate.instant(t.resources.strings.call_health_tab_value_suffix_mbps,{value:i})})},t}();e.CallHealthMetricDefinitionFactoryOld=l},2526:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,a){void 0===a&&(a=!0),this.title=t,this.metrics=e,this.expand=a,this.state=teamspace.services.CallHealthStateOld.NotAvailable}return t.prototype.updateMetrics=function(t){var e=!1;this.metrics.forEach(function(a){e=a.updateMetric(t)||e}),e&&this.updateHealthState()},t.prototype.updateHealthState=function(){this.state=Math.max.apply(Math,_.values(this.metrics).map(function(t){return t.state}))},t.prototype.toggleExpand=function(){this.expand=!this.expand},t.prototype.handleEvent=function(t){this.metrics.forEach(function(e){return e.handleEvent(t)})},t}();e.CallHealthCategoryOld=i},2527:function(t,e,a){"use strict";var i=this&&this.__extends||function(){var t=function(e,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a])})(e,a)};return function(e,a){function i(){this.constructor=e}t(e,a),e.prototype=null===a?Object.create(a):(i.prototype=a.prototype,new i)}}();Object.defineProperty(e,"__esModule",{value:!0});var s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i(e,t),e.prototype.getState=function(t){if(2!==this.compareType)return teamspace.services.CallHealthStateOld.NotAvailable;switch(t){case 1:return teamspace.services.CallHealthStateOld.Green;case 2:return teamspace.services.CallHealthStateOld.Amber;case 3:return teamspace.services.CallHealthStateOld.Red;default:return teamspace.services.CallHealthStateOld.NotAvailable}},e}(a(139).CallHealthMetricOld);e.CallHealthMetricCodecOld=s},2528:function(t,e,a){"use strict";var i=this&&this.__extends||function(){var t=function(e,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a])})(e,a)};return function(e,a){function i(){this.constructor=e}t(e,a),e.prototype=null===a?Object.create(a):(i.prototype=a.prototype,new i)}}();Object.defineProperty(e,"__esModule",{value:!0});var s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i(e,t),e.prototype.getState=function(t){if(2!==this.compareType)return teamspace.services.CallHealthStateOld.NotAvailable;switch(t){case 4:return teamspace.services.CallHealthStateOld.Red;case 1:case 2:return teamspace.services.CallHealthStateOld.Amber;case 3:return teamspace.services.CallHealthStateOld.Green;default:return teamspace.services.CallHealthStateOld.NotAvailable}},e}(a(139).CallHealthMetricOld);e.CallHealthMetricMediaSharingPolicyOld=s},2529:function(t,e,a){"use strict";var i=this&&this.__spreadArrays||function(){for(var t=0,e=0,a=arguments.length;e<a;e++)t+=arguments[e].length;for(var i=Array(t),s=0,e=0;e<a;e++)for(var n=arguments[e],r=0,l=n.length;r<l;r++,s++)i[s]=n[r];return i};Object.defineProperty(e,"__esModule",{value:!0});var s=a(2530),n=6e4,r=function(){function t(t,e,a,i,s,r,l,c,o,h,u){var p=this;this.$interval=s,this.$timeout=r,this.$scope=l,this.constants=c,this.utilityService=u,this.telemetryBag={trackScenario:teamspace.components.PanelActionScenario.meetingShowPanel,trackScenarioType:teamspace.components.PanelActionScenarioType.callOrMeetup,trackType:teamspace.components.PanelModuleType.button,trackSummary:"Call transcript panel from header"},this.customRightRailHeader=!1,this.isAtBottom=!0,this.showBusy=!1,this.isTranscribing=!1,this.logTranscriptTelemetryInterval=function(){if(0===p.telemetryData.receivedTranscriptCountSinceLastTick){if(p.telemetryData.noTranscriptInPreviousTick)return;p.telemetryData.noTranscriptInPreviousTick=!0}else p.telemetryData.noTranscriptInPreviousTick=!1;p.scenario.mark("TranscriptTick",p.getScenarioData()),p.telemetryData.receivedTranscriptCountSinceLastTick=0,p.telemetryData.substrateErrorMessageSinceLastTick=void 0};var d=o.valueFor(c.settings.names.callingConstants).callRecording.closedCaptionsBotMri;this.botMri=d,this.logger=h.newLogger("CallTranscriptPanel["+this.call.callId+"]["+this.botMri+"]"),this.logger.info("initializing transcript panel"),this.scenario=h.newScenario(c.scenarios.calling.transcript.main_window_panel,null,null,c.timeInMiliseconds.day,!0),this.panelType=teamspace.components.Calling.RightPanel.CallTranscript,this.customRightRailHeader=o.valueAsBoolean(c.settings.names.customRightRailHeader),this.isUbarEnabled=!0,this.transcriptPanelContainer=i.find(".call-transcript-panel-container"),this.transcripts=[],this.telemetryData={intervalId:s(this.logTranscriptTelemetryInterval,n),lastTranscriptTimestamp:"",lastTranscriptSequenceId:0,outOfOrderTranscriptCount:0,substrateGetSuccessCount:0,substrateGetFailureCount:0,substrateErrorMessageSinceLastTick:"",receivedTranscriptCountSinceLastTick:0,noTranscriptInPreviousTick:!1},l.$on("$destroy",this.destroy.bind(this)),this.lazyLoadPromise=teamspace.services.QCancelable.toCancelablePromise(t,e.load("calling-bot-service")),this.lazyLoadPromise.then(function(){p.callingBotService=a.get("callingBotService"),p.callTranscriptStateSubscription=p.call.on("transcriptStatusChanged",p.updateStatus.bind(p)),l.$on(c.events.scroll.scrollState,function(){p.isAtBottom=!p.transcriptPanelContainer.hasClass("not-at-bottom")}),p.updateStatus(),p.refreshContent()})}return t.$inject=["$q","$ocLazyLoad","$injector","$element","$interval","$timeout","$scope","constants","settingsService","loggingService","utilityService"],t.prototype.getTimeStamp=function(t){var e=new Date(t),a=e.getHours(),i=e.getMinutes();return a+":"+(i<10?"0":"")+i+" "+(a>=12?"PM":"AM")},t.prototype.scrollToBottom=function(t){var e=this;(t||this.isAtBottom)&&this.$timeout(function(){e.utilityService.digest(e.$scope),e.transcriptPanelContainer.scrollTop(e.transcriptPanelContainer.prop("scrollHeight"))},0)},t.prototype.refreshContent=function(){var t=this;this.showBusy=!0,this.call.getTranscript().then(function(e){t.showBusy=!1,e?(t.telemetryData.substrateGetSuccessCount++,t.logger.info("received data from Substrate"),e.entries&&t.mergeSubstrateAndCaptionsData(e.entries)):t.logger.info("nothing received from Substrate")}).catch(function(e){t.showBusy=!1,t.telemetryData.substrateGetFailureCount++,t.telemetryData.substrateErrorMessageSinceLastTick=JSON.stringify(e),t.logger.error("failed to get data from Substrate, error "+t.telemetryData.substrateErrorMessageSinceLastTick)})},t.prototype.registerDataChannel=function(){this.isTranscribing||(this.logger.info("registering data channel callback for channel 3"),this.callingBotService.registerDataCallback(this.call,this.botMri,3,teamspace.services.DataChannelOwnerId.Transcript,this.onDataReceived.bind(this)),this.isTranscribing=!0)},t.prototype.unregisterDataChannel=function(){this.isTranscribing&&(this.logger.info("unregistering data channel callback for channel 3"),this.callingBotService.unregisterDataCallback(this.call,this.botMri,teamspace.services.DataChannelOwnerId.Transcript),this.isTranscribing=!1)},t.prototype.destroy=function(){this.logger.info("cleaning up transcript panel"),this.lazyLoadPromise&&(teamspace.services.QCancelable.cancel(this.lazyLoadPromise),this.lazyLoadPromise=null),this.callingBotService&&this.unregisterDataChannel(),this.callTranscriptStateSubscription&&(this.callTranscriptStateSubscription.dispose(),this.callTranscriptStateSubscription=void 0),this.telemetryData.intervalId&&this.$interval.cancel(this.telemetryData.intervalId),this.logTranscriptTelemetryInterval(),this.scenario.stop(this.getScenarioData())},t.prototype.getEntrySequenceId=function(t){return Number(t.split("/")[1])},t.prototype.mergeSubstrateAndCaptionsData=function(t){if(0!==t.length){if(0===this.transcripts.length)return this.logger.info("updating transcript panel content with data from substrate, size "+t.length),this.transcripts=t,void this.scrollToBottom(!0);this.logger.info("merging substrate data with current transcript, substrate size "+t.length+", current size "+this.transcripts.length);for(var e=this.getEntrySequenceId(t[t.length-1].entryId),a=0;this.transcripts.length>0&&!(this.getEntrySequenceId(this.transcripts[0].entryId)>e);)a++;this.transcripts.slice(a),this.transcripts=i(t,this.transcripts),this.scrollToBottom(!0);var s=this.transcripts[this.transcripts.length-1];this.telemetryData.lastTranscriptTimestamp=s.startTime,this.telemetryData.lastTranscriptSequenceId=this.getEntrySequenceId(s.entryId),this.telemetryData.receivedTranscriptCountSinceLastTick+=t.length}else this.logger.info("no data is stored in substrate for this call yet")},t.prototype.onDataReceived=function(t,e){if(t===teamspace.services.CallingBotDataType.Caption){var a=e,i=a.id,s=a.text;if(a.isFinal&&a.text&&a.text.length){var n=(new Date).toJSON(),r=this.getEntrySequenceId(i);this.transcripts.push({entryId:i,text:s,startTime:n,speakerId:void 0,displayName:void 0,endTime:void 0}),this.scrollToBottom(),r<=this.telemetryData.lastTranscriptSequenceId&&(this.logger.error("received out of order transcript, last sequenceId "+this.telemetryData.lastTranscriptSequenceId+", this sequenceId "+r),this.telemetryData.outOfOrderTranscriptCount++),this.telemetryData.lastTranscriptTimestamp=n,this.telemetryData.lastTranscriptSequenceId=r,this.telemetryData.receivedTranscriptCountSinceLastTick++}}},t.prototype.updateStatus=function(){var t=this.call.getTranscriptStatus();switch(t){case teamspace.services.CallTranscriptStatus.pending:case teamspace.services.CallTranscriptStatus.waiting:this.showBusy=!0;break;case teamspace.services.CallTranscriptStatus.started:this.showBusy=!1,this.registerDataChannel();break;case teamspace.services.CallTranscriptStatus.none:case teamspace.services.CallTranscriptStatus.stopped:case teamspace.services.CallTranscriptStatus.failed:this.showBusy=!1,this.unregisterDataChannel();break;default:this.showBusy=!1,this.logger.error("unhandled state update, state "+teamspace.services.CallTranscriptStatus[t]+" ("+t+")")}},t.prototype.getScenarioData=function(){var t,e={lastTranscriptTimestamp:this.telemetryData.lastTranscriptTimestamp,lastTranscriptSequenceId:this.telemetryData.lastTranscriptSequenceId,outOfOrderTranscriptCount:this.telemetryData.outOfOrderTranscriptCount,substrateGetFailureCount:this.telemetryData.substrateGetFailureCount,substrateGetSuccessCount:this.telemetryData.substrateGetSuccessCount,receivedTranscriptCountSinceLastTick:this.telemetryData.receivedTranscriptCountSinceLastTick,numberOfTranscripts:this.transcripts.length,isScrolling:!this.isAtBottom};return t={Call_Id:this.call.callId},t[this.constants.scenarioDataPropNames.transcriptError]=this.telemetryData.substrateErrorMessageSinceLastTick,t[this.constants.scenarioDataPropNames.transcriptData]=JSON.stringify(e),t},t}();e.CallTranscriptPanel=r,angular.module("teamspace.callTranscriptPanel",["teamspace.constants","teamspace.loggingService","teamspace.settingsService"]).directive("callTranscriptPanel",["constants",function(t){return{restrict:"E",bindToController:{call:"<"},controllerAs:"ctrl",controller:r,template:s}}])},2530:function(t,e){t.exports='<div class="call-transcript-panel" id="callTranscriptPanel" ng-class="::{\'right-pane-header\': ctrl.customRightRailHeader, \'unified-bar-mode\': ctrl.isUbarEnabled}">\n  \x3c!--\n  <call-transcript-bridge />\n  --\x3e\n  <right-pane-header usage-scenario="meeting-pane" panel-type="{{ctrl.panelType}}" text="{{::$root.resources.strings.call_transcript_panel_header|translate}}" telemetry-bag="ctrl.telemetryBag">\n  </right-pane-header>\n\n  <div class="call-transcript-panel-container" simple-scrollbar>\n    <div> \x3c!-- Single empty child div required by simple-scrollbar --\x3e\n      <div class="call-transcript-panel-busy" ng-if="ctrl.showBusy">\n        <busy-animation size="medium"></busy-animation>\n      </div>\n      <div class="call-transcript-panel-content">\n        <ul class="call-transcript-panel-content-ul">\n          <li class="call-transcript-panel-content-li" ng-repeat="transcript in ctrl.transcripts">\n            <div class="call-transcript-panel-timestamp">{{::ctrl.getTimeStamp(transcript.startTime)}}</div>\n            <div class="call-transcript-panel-text">{{::transcript.text}}</div>\n          </li>\n        </ul>\n      </div> \x3c!-- call-transcript-panel-content --\x3e\n    </div> \x3c!-- child - simple-scrollbar --\x3e\n  </div> \x3c!-- simple-scrollbar --\x3e\n\n  <div class="call-transcript-panel-go-to-current" ng-if="!ctrl.isAtBottom">\n    <button ng-click="ctrl.scrollToBottom(true)">\n      <i class="ts-sym arrow"><ng-include src="\'svg/icons-arrow-down.html\'"></ng-include></i>\n      <span class="button-text" translate-once="{{::$root.resources.strings.call_transcript_go_to_current}}"></span>\n    </button>\n  </div>\n</div>\n'}},[2521]);