webpackJsonp([17],{2502:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(2503),n(2505),n(2507),n(2509),n(2512),n(2514),n(2517)},2503:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2504),i=function(){function t(t,e,n,a,i,o){var s=this;this.footerMessage="",this.tabGalleryHeaderMessage="",this.threadId=t.ngDialogData.threadId,this.addTabDialogLabel=i.instant(o.strings.extension_addTabDialogHeader);var r=a.getConversation(this.threadId);r&&r.isChannelConversation()?(this.extensionContext=e.extensibility.teamContextName,this.tabGalleryHeaderMessage=i.instant(o.strings.extension_addTabDialogMessageHeader_channel)):(this.extensionContext=r&&r.isOneOnOne()?e.extensibility.oneOnOneContextName:e.extensibility.groupChatContextName,this.tabGalleryHeaderMessage=i.instant(o.strings.extension_addTabDialogMessageHeader_chat)),this.configureTabInstance=function(a,i){t.closeThisDialog(),n.openLazyDialog(e.lazyDialogs.tabInstanceConfiguration,e.lazyModules.extensibilityTabs,{tabDefinition:a,tabInstance:i,threadId:s.threadId,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings})},this.hoverTabInstance=function(t){s.footerMessage=t||""}}return t.$inject=["$scope","constants","dialogService","conversationsService","$translate","resources"],t}();e.AddTabDialogController=i,angular.module("teamspace.addTabDialog",["teamspace.constants","teamspace.dialogService","teamspace.conversationsService","teamspace.modalDialog"]).run(["constants","dialogService","$templateCache",function(t,e,n){n.put("components/tabs/add-tab-dialog/add-tab-dialog.html",a),e.register(t.lazyDialogs.addTab,{template:"components/tabs/add-tab-dialog/add-tab-dialog.html",className:"ts-modal-dialog custom-width ts-add-tab-dialog",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title",ariaDescribedBySelector:".ts-tab-gallery-header-text"})}]).controller("AddTabDialogController",i)},2504:function(t,e){t.exports='<div class="ts-add-tab-dialog-container" ng-controller="AddTabDialogController as atdc" acc-role="dialog">\n  <modal-dialog dialog-title="{{::atdc.addTabDialogLabel}}" footer-message="atdc.footerMessage" add-close-icon="true" suppress-default-button="true" data-tid="addTabDialog" track-panel-type="{{$root.trackConstants.panelType.addTabDialog}}" skip-auto-focus="true" aria-label="{{::atdc.addTabDialogLabel}}">\n  \t<div class="ts-tab-gallery-header-text-container">\n       <span class="ts-tab-gallery-header-text" ng-bind="atdc.tabGalleryHeaderMessage"></span>\n    </div>\n    <tabs-gallery tg-extension-context="atdc.extensionContext" tg-configure-tab-instance="atdc.configureTabInstance" tg-on-hover-tab="atdc.hoverTabInstance"></tabs-gallery>\n  </modal-dialog>\n</div>'},2505:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2506),i=function(){function t(t,e,n,a,i,o,s,r,c){this.routeUtilityService=t,this.$scope=n,this.constants=a,this.dialogService=i,this.tabService=o,this.extensionDefinitionService=s,this.resources=r,this.utilityService=c,this.logger=e.newLogger("clone-team-tabs"),this.getCloneTeamTabContext()}return t.$inject=["routeUtilityService","loggingService","$scope","constants","dialogService","tabService","extensionDefinitionService","resources","utilityService"],t.prototype.getCloneTeamTabContext=function(){var t=this;null!=this.definitionId&&this.extensionDefinitionService.getExtensionDefinition(this.definitionId).then(function(e){e&&(t.appDefinition=e,t.iconSrc=e.galleryIcon,t.tabName=decodeURIComponent(e.name))}).catch(function(e){t.logger.error("Definition not defined for definition id: "+t.definitionId+" with error: "+e.code)})},t.prototype.addNewTab=function(){var t=this.getConversationId(),e=new teamspace.services.ExtensionInstanceViewModel(this.appDefinition,this.constants),n={tabDefinition:this.appDefinition,tabInstance:e,threadId:t,operationType:0,backToTabGallery:!1,tabId:this.instanceId};this.dialogService.openLazyDialog(this.constants.lazyDialogs.tabInstanceConfiguration,this.constants.lazyModules.extensibilityTabs,n)},t.prototype.removeTabInstance=function(){var t=this.getConversationId();this.tabService.deleteTab(t,this.instanceId)},t.prototype.getConversationId=function(){return this.threadId?this.threadId:this.routeUtilityService.getRootRouteParams().threadId},t}();e.CloneTeamTabController=i,angular.module("teamspace.cloneTeamTabs",[]).directive("cloneTeamTabs",[function(){return{restrict:"E",scope:{context:"=?"},bindToController:{definitionId:"@",instanceId:"@"},controllerAs:"cttc",templateUrl:"components/tabs/clone-team-tabs/clone-team-tabs.html",controller:i}}]).run(["$templateCache",function(t){t.put("components/tabs/clone-team-tabs/clone-team-tabs.html",a)}])},2506:function(t,e){t.exports='<div class="wm-clone-canvas">\n  <div class="sections">\n    <div>\n      <img class="icon-clone" ng-src="{{cttc.iconSrc}}" ng-if="!cttc.utilityService.useNgIncludeForIcon(cttc.iconSrc)"/>\n      <ng-include class="icon-clone" src="cttc.iconSrc" ng-if="cttc.utilityService.useNgIncludeForIcon(cttc.iconSrc)"></ng-include>\n    </div>\n    <div class="text-clone text-tab-name" translate="{{cttc.tabName}}"></div>\n    <div class="title" translate-once="{{::$root.resources.strings.clone_team_tab_setup_text}}"></div>\n    <div class="ts-modal-dialog-footer">\n      <div class="ts-modal-dialog-footer-buttons">\n        <button class="ts-btn ts-btn-secondary" ng-click="cttc.removeTabInstance()" translate-once="{{::$root.resources.strings.clone_remove_tab}}"></button>\n\n        <button class="ts-btn ts-btn-primary inset-border" ng-click="cttc.addNewTab()" translate-once="{{::$root.resources.strings.clone_setup_tab}}"></button>\n      </div>\n    </div>\n  </div>\n</div>'},2507:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2508),i=function(){function t(t,e){t.dialogTitle=t.ngDialogData.confirmMessageTitle,t.panelRegionsDelete=teamspace.PanelRegion,t.performAction=function(){t.ngDialogData.callback(),e.closeAll()}}return t.$inject=["$scope","ngDialog"],t}();e.DeleteTabController=i,angular.module("teamspace.deleteTabDialog",["teamspace.dialogService"]).run(["constants","dialogService","$templateCache",function(t,e,n){n.put("components/tabs/delete-tab-dialog/delete-tab-dialog.html",a),e.register(t.lazyDialogs.deleteTab,{template:"components/tabs/delete-tab-dialog/delete-tab-dialog.html",className:"ts-modal-dialog custom-width ts-delete-tab-dialog",closeByEscape:!0,closeByDocument:!0,controller:"DeleteTabController",ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"delete-tab-dialog-title",ariaDescribedById:"delete-tab-dialog-confirmation"})}]).controller("DeleteTabController",i)},2508:function(t,e){t.exports='<div class="ts-modal-dialog-container ts-delete-tab-modal">\n  <div class="analytics-panel" analytics-panel-on-root="true" analytics-panel="{{::panelRegionsDelete.popover}}" analytics-panel-view="{ panel: {type: {{$root.trackConstants.panelType.notDefined}} }}">\n    <div class="ts-modal-dialog-header">\n      <div class="close-container">\n        <ng-include class="icon icons-close" src="\'svg/icons-close.html\'"></ng-include>\n        <button class="btn btn-default icons-close ngdialog-close inset-border inset-border-round inset-border-themed app-icons-fill-hover" data-tid="closeModelDialogBtn" aria-label="{{::$root.resources.strings.modal_dialog_close_button|translate}}">\n        </button>\n      </div>\n      <h1 class="app-font-family-base ts-modal-dialog-title" id="delete-tab-dialog-title" ng-bind="::dialogTitle"></h1>\n    </div>\n    <div class="ts-modal-dialog-content">\n      <div class="break-long-words" id="delete-tab-dialog-confirmation" ng-if="ngDialogData.confirmMessageHtmlBody" ng-bind-html="ngDialogData.confirmMessageHtmlBody">\n      </div>\n    </div>\n    <div class="ts-modal-dialog-footer">\n      <div class="ts-modal-dialog-footer-buttons">\n        <div>\n          <button ng-click="performAction()" ng-disabled="dialogBusy.length > 0" id="confirmButton" class="ts-btn ts-btn-primary inset-border" data-tid="tidConfirmButton" acc-role="focus-default" track-app-id="{{ngDialogData.dataBag && ngDialogData.dataBag.id}}" track-app-scope="{{ngDialogData.dataBag && ngDialogData.dataBag.scope}}" track-app-scenario-capability="{{ngDialogData.dataBag && ngDialogData.dataBag.scenarioCapability}}" track-outcome="{{::$root.trackConstants.trackOutcome.submit}}" track-scenario="{{::$root.trackConstants.trackScenario.removeTab}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.tabMgmt}}" track-name="{{::$root.trackConstants.trackModuleName.tabRemoveClick}}" track-type="{{::$root.trackConstants.trackType.nav}}" track-data="{{::ngDialogData.dataBag}}" track-summary="Remove Tab Button">\n                  {{::ngDialogData.okButtonText}}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},2509:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2510),i=n(2511),o=teamspace.components.InContextAppStoreDialogHelper,s=teamspace.services.AppsServiceCategoryFilter,r=function(){function t(t,e,n,a,i,s,r,c,l,d,g,p,u,b,h,m){var f=this;this.$scope=t,this.constants=e,this.$q=n,this.resources=a,this.$translate=i,this.$state=s,this.eventingService=r,this.tabService=c,this.dialogService=l,this.conversationsService=d,this.loggingService=g,this.settingsService=p,this.utilityService=u,this.ariaLiveService=b,this.channelService=h,this.analyticsService=m,this.settingsContext={extensionFunctions:{},form:{}},this.buttonIndex=0,this.footerMessage="",this.tabHeaderSectionEnable=!0,this.tabNameSectionEnable=!0,this.customSettingsSectionEnable=!0,this.checkboxSectionEnable=!0,this.showCreateConversation=!0,this.enableNewRemoveFlow=p.valueAsBoolean(e.settings.names.enableTabRemovalWorkflow),this.enableEnhancedTelemetry=p.valueAsBoolean(e.settings.names.enableEnhancedTelemetry),this.enableBotsInGroupChat=p.valueAsBoolean(e.settings.names.enableBotsInGroupChat),this.enableBotsInGroupChat&&(this.appStoreDialogHelper=new o(e,l)),this.existingTabNames=c.getExistingTabNamesMap(this.instance.id);var v=d.getConversation(this.threadId);this.biScenarioScope=v&&v.isOneOnOne()?teamspace.components.PanelAppScope.personal:v&&v.isGroupChat()?teamspace.components.PanelAppScope.group:teamspace.components.PanelAppScope.team,this.logger=g.newLogger("TabInstanceConfiguration"),this.tabExtensionObject={directive:e.tab.directive.instance[this.instance.directive]||this.instance.directive,definitionId:this.instance.definitionId,externalId:this.instance.externalId,id:this.instance.id},v&&v.isChannelConversation()&&(this.channel=h.getChannelByObjectId(this.threadId),this.channelState=h.getChannelState(this.channel)),this.isChat=v&&v.isChat(),this.updateSectionsContext(),this.updateSettingsContext(),this.updateDialogContext(),v&&v.isMeetingConversation()||angular.isDefined(this.definition.canHaveTabConversation)&&!this.definition.canHaveTabConversation?(this.showCreateConversation=!1,this.createConversation=!1):(this.instance.replyChainId&&(this.disableCreateConversation=!0,this.createConversation=!0),this.instance.id&&!this.isInline||(this.createConversation=!0),this.createConversation=this.createConversation&&h.canPostToCurrentChannel()),this.instance&&this.instance.name&&(this.decodedName=this.decodeDisplayName(this.instance.name)),this.showSecurityMessage=this.dialogContext.operationType!==teamspace.components.DialogTabMenuOperationType.RenameTabName&&"com.microsoft.teamspace.tab.web"==this.instance.definitionId,t.$on("$destroy",function(){f.cancelScenarioMarker()}),this.isSvg=!this.definition.galleryIcon.startsWith("data:")&&!this.definition.galleryIcon.startsWith("https:"),this.createConversationLabel=this.isChat?i.instant(a.strings.extensibility_tab_enable_conversation_in_chat):i.instant(a.strings.extensibility_tab_enable_conversation)}return t.$inject=["$scope","constants","$q","resources","$translate","$state","eventingService","tabService","dialogService","conversationsService","loggingService","settingsService","utilityService","ariaLiveService","channelService","analyticsService"],Object.defineProperty(t.prototype,"settingsDirective",{get:function(){return this.settingsContext.definition?this.settingsContext.definition.settingsDirective:""},enumerable:!0,configurable:!0}),t.prototype.isFooterMessageError=function(){return this.dialogContext.footerMessageType===teamspace.components.DialogContextMessageType.Error},t.prototype.save=function(){var t=this;return this.conversationsService.ensureConversationCreated(this.threadId).then(function(e){if(t.threadId!=e.id&&e.isChat()&&t.$state.go(t.constants.states.appConversation,{slug:e.id,middlePane:t.constants.messages.panes.conversations,ctx:t.constants.navigation.context.chat,navCtx:"tab-instance-configuration"}),t.threadId=e.id,t.instance.id){t.eventingService.$emit(t.constants.events.tabSettings.updateConfiguration.replace("{instanceId}",t.instance.id),{settings:t.instance});a={createConversation:t.createConversation,directive:t.instance.directive};t.loggingService.event(t.constants.telemetry.extensibility.tabs.configuration.updateToCreateConversation,{payload:t.utilityService.asString(a)});var n=t.instance.id;return t.tabService.updateTab(t.threadId,t.instance,t.createConversation).then(function(e){return n!==e.id&&t.$state.go(t.$state.current.name,{middlePane:e.id}),t.$q.resolve(e)})}t.eventingService.$emit(t.constants.events.tabSettings.createConfiguration,{settings:t.instance});var a={createConversation:t.createConversation,directive:t.instance.directive};return t.isInline&&(t.instance.order=t.dialogContext.tabOrder),t.loggingService.event(t.constants.telemetry.extensibility.tabs.configuration.configureWithConversation,{payload:t.utilityService.asString(a)}),t.tabService.createTab(t.threadId,t.instance,t.createConversation)})},t.prototype.remove=function(){return this.tabService.deleteTab(this.threadId,this.instance.id)},t.prototype.updateSettingsContext=function(){var t=this;this.settingsContext.threadId=this.threadId,this.settingsContext.definition=this.definition,this.settingsContext.settings=this.instance.settings,this.settingsContext.tabName=this.instance.name,this.settingsContext.tabId=this.instance.id,this.settingsContext.dialogSettings={hideHeader:this.dialogContext.hideHeader,hideTabName:this.dialogContext.hideTabName,dialogTitle:this.dialogContext.title,overrideButtons:function(e,n){n||(n=[]),t.dialogContext.footerButtons=e?n:t.defaultFooterButtons},getDefaultButton:function(e){return t.createDefaultButton(e)},operationType:this.dialogContext.operationType},this.$scope.$watch("ticc.settingsContext.dialogSettings.dialogTitle",function(e){t.dialogContext.title=e}),this.$scope.$watch("ticc.settingsContext.dialogSettings.hideTabName",function(e){t.dialogContext.hideTabName=e}),this.$scope.$watch("ticc.settingsContext.dialogSettings.hideHeader",function(e){t.dialogContext.hideHeader=e})},t.prototype.updateDialogContext=function(){var t=this;this.saveFooterButton="",this.removeFooterButton="",this.saveFooterButton=this.isInline?this.$translate.instant(this.resources.strings.extension_tabInlineConfig_button_text):this.$translate.instant(this.resources.strings.extension_saveButtonText),this.backFooterButton=this.$translate.instant(this.resources.strings.extension_backButtonText),this.removeFooterButton=this.$translate.instant(this.resources.strings.extension_removeButtonText),this.dialogContext&&(this.dialogContext.title=this.instance.id?this.$translate.instant(this.resources.strings.extension_editTabDialogHeader):this.$translate.instant(this.resources.strings.extension_newTabDialogHeader),this.dialogContext.footerMessage="",this.instance.id?(this.dialogContext.operationType===teamspace.components.DialogTabMenuOperationType.RemoveTabSettings?this.defaultFooterButtons=[this.createDefaultButton(teamspace.components.TabInstanceConfigurationButton.Remove)]:this.defaultFooterButtons=[this.createDefaultButton(teamspace.components.TabInstanceConfigurationButton.Save)],this.buttonIndex=0):(this.defaultFooterButtons=[this.createDefaultButton(teamspace.components.TabInstanceConfigurationButton.Back),this.createDefaultButton(teamspace.components.TabInstanceConfigurationButton.Save)],this.buttonIndex=1),this.$scope.$watch("ticc.settingsContext.form.$valid",function(e){t.defaultFooterButtons[t.buttonIndex].disabled=!e}),this.dialogContext.footerButtons=this.defaultFooterButtons)},t.prototype.updateSectionsContext=function(){switch(this.dialogContext.operationType){case teamspace.components.DialogTabMenuOperationType.AddTabSettings:this.scenarioEvent=this.constants.scenarios.extensibility.tabs.tabInstance.add,this.biScenarioName=teamspace.components.PanelActionScenario.createTab,this.checkboxSectionEnable=this.channelService.canPostToCurrentChannel();break;case teamspace.components.DialogTabMenuOperationType.UpdateTabSettings:this.tabHeaderSectionEnable=!0,this.tabNameSectionEnable=!1,this.customSettingsSectionEnable=!0,this.checkboxSectionEnable=!1,this.scenarioEvent=this.constants.scenarios.extensibility.tabs.tabInstance.update,this.biScenarioName=teamspace.components.PanelActionScenario.editTab;break;case teamspace.components.DialogTabMenuOperationType.RenameTabName:this.tabHeaderSectionEnable=!1,this.tabNameSectionEnable=!0,this.customSettingsSectionEnable=!1,this.checkboxSectionEnable=!1,this.scenarioEvent=this.constants.scenarios.extensibility.tabs.tabInstance.rename,this.biScenarioName=teamspace.components.PanelActionScenario.renameTab;break;case teamspace.components.DialogTabMenuOperationType.RemoveTabSettings:this.tabHeaderSectionEnable=!1,this.tabNameSectionEnable=!1,this.customSettingsSectionEnable=!0,this.checkboxSectionEnable=!1,this.scenarioEvent=this.constants.scenarios.extensibility.tabs.tabInstance.remove,this.biScenarioName=teamspace.components.PanelActionScenario.removeTab}},t.prototype.createDefaultButton=function(t){var e=this;switch(t){case teamspace.components.TabInstanceConfigurationButton.Back:return{btnType:"button",text:this.backFooterButton,func:function(){return e.backButtonClicked()},tid:"tabInstanceConfiguration-backBtn",disabled:!1,secondaryStyle:!0};case teamspace.components.TabInstanceConfigurationButton.Save:return{btnType:"submit",text:this.saveFooterButton,func:function(){return e.saveButtonClicked()},tid:"tabInstanceConfiguration-saveBtn",disabled:!0};case teamspace.components.TabInstanceConfigurationButton.Remove:return{btnType:"submit",text:this.removeFooterButton,func:function(){return e.enableNewRemoveFlow?e.removeButtonClickedNewFlow():e.removeButtonClicked()},tid:"tabInstanceConfiguration-removeBtn",disabled:!0};default:return null}},t.prototype.invokeDefaultButton=function(){this.dialogContext&&(this.dialogContext.footerButtons[this.buttonIndex].disabled||this.dialogContext.footerButtons[this.buttonIndex].func())},t.prototype.onConfigSucceeded=function(){var t=this;this.dialogContext.tabId&&this.dialogContext.operationType===teamspace.components.DialogTabMenuOperationType.AddTabSettings&&this.tabService.deleteTab(this.threadId,this.dialogContext.tabId).catch(function(){t.logger.error("[saveButtonClicked] Deleting a tab failed for thread id {0} and clone tab id {1}.",t.threadId,t.dialogContext.tabId)}),this.dialogContext&&(this.dialogContext.footerMessageType=teamspace.components.DialogContextMessageType.Info,this.dialogContext.footerMessage=""),this.finish(),this.dialogContext.operationType===teamspace.components.DialogTabMenuOperationType.AddTabSettings&&this.ariaLiveService.update(this.$translate.instantWithoutEncoding(this.resources.strings.aria_tab_creation_finished,{tabName:this.decodedName}))},t.prototype.onConfigFailed=function(t,e){if(this.footerMessage="",this.footerMessage=t,this.dialogContext)if(this.dialogContext.isBusy=!1,this.dialogContext.footerMessageType=teamspace.components.DialogContextMessageType.Error,this.dialogContext.footerMessage=this.footerMessage,e!==teamspace.components.DialogTabMenuOperationType.RemoveTabSettings){this.dialogContext.footerButtons[this.buttonIndex].text=this.$translate.instant(this.resources.strings.extension_saveButtonText);for(var n=0;n<this.dialogContext.footerButtons.length;n++)n!=this.buttonIndex&&(this.dialogContext.footerButtons[n].disabled=!1)}else this.enableNewRemoveFlow||(this.dialogContext.footerButtons[this.buttonIndex].text=this.$translate.instant(this.resources.strings.extension_removingButtonText),this.definition.model.removeDirective||this.remove(),this.finish());this.deferredSave&&(this.deferredSave.reject(),this.deferredSave=void 0)},t.prototype.onConfigCompleted=function(){if(this.dialogContext){this.dialogContext.isBusy=!1,this.dialogContext.footerButtons[this.buttonIndex].text=this.$translate.instant(this.resources.strings.extension_saveButtonText);for(var t=0;t<this.dialogContext.footerButtons.length;t++)this.dialogContext.footerButtons[t].disabled=!1}this.deferredSave&&(this.deferredSave.resolve(),this.deferredSave=void 0)},t.prototype.finish=function(){this.eventingService.$emit(this.constants.events.extensibility.finishConfiguration,null)},t.prototype.decodeDisplayName=function(t){if(this.settingsService.valueAsBoolean(this.constants.settings.names.enableSpoSpecialChars))try{return decodeURIComponent(t)}catch(e){return this.logger.warn("Unable to decode display name:",t),t}return decodeURIComponent(t)},t.prototype.backButtonClicked=function(){this.logTelemetryForBackButton(),this.finish(),this.backToTabGallery&&(this.enableBotsInGroupChat?this.appStoreDialogHelper.openDialog(this.threadId,s.Tabs):this.dialogService.openLazyDialog(this.constants.lazyDialogs.tabsGallery,this.constants.lazyModules.extensibilityTabs,{threadId:this.threadId}))},t.prototype.removeButtonClickedNewFlow=function(){var t=this;this.startScenarioMarker(),this.removeFooterButton="",this.footerMessage="",this.removeFooterButton=this.$translate.instant(this.resources.strings.extension_removingButtonText),this.footerMessage=this.$translate.instantWithoutEncoding(this.resources.strings.extension_removingConfigurationFooterMessage,{tabName:this.decodedName});var e=this.$translate.instantWithoutEncoding(this.resources.strings.extension_unableToRemoveConfigurationFooterMessage,{tabName:this.decodedName});this.$q(function(e,n){t.settingsContext.form.$valid?(t.dialogContext&&(t.dialogContext.isBusy=!0,t.dialogContext.footerButtons[t.buttonIndex].text=t.removeFooterButton,t.dialogContext.footerButtons[t.buttonIndex].disabled=!0,t.dialogContext.footerMessageType=teamspace.components.DialogContextMessageType.Info,t.dialogContext.footerMessage=t.footerMessage),e(),t.logTelemetryForRemoveTab()):n()}).then(function(){if(t.settingsContext.extensionFunctions.onRemove)return t.settingsContext.extensionFunctions.onRemove(t.instance.id,t.saveExtensionInstanceCounter).catch(function(n){return e=n,t.onConfigFailed(e,t.dialogContext.operationType),t.$q.reject(n)})})},t.prototype.removeButtonClicked=function(){var t=this;this.startScenarioMarker(),this.removeFooterButton="",this.footerMessage="",this.removeFooterButton=this.$translate.instant(this.resources.strings.extension_removingButtonText),this.footerMessage=this.$translate.instantWithoutEncoding(this.resources.strings.extension_removingConfigurationFooterMessage,{tabName:this.decodedName});var e=this.$translate.instantWithoutEncoding(this.resources.strings.extension_unableToRemoveConfigurationFooterMessage,{tabName:this.decodedName});this.$q(function(e,n){t.settingsContext.form.$valid?(t.dialogContext&&(t.dialogContext.isBusy=!0,t.dialogContext.footerButtons[t.buttonIndex].text=t.removeFooterButton,t.dialogContext.footerButtons[t.buttonIndex].disabled=!0,t.dialogContext.footerMessageType=teamspace.components.DialogContextMessageType.Info,t.dialogContext.footerMessage=t.footerMessage),e()):(t.cancelScenarioMarker(),n())}).then(function(){if(t.settingsContext.extensionFunctions.onRemove)return t.settingsContext.extensionFunctions.onRemove().catch(function(n){return e=n,t.cancelScenarioMarker(),t.$q.reject(n)})}).then(function(){return t.remove()}).then(function(){t.onConfigSucceeded(),t.logTelemetryForRemoveTab(),t.stopScenarioMarker()}).catch(function(n){e=t.$translate.instantWithoutEncoding(t.resources.strings.extension_unableToRemoveConfigurationFooterMessage,{tabName:t.decodedName}),t.onConfigFailed(e,t.dialogContext.operationType),t.failScenarioMarker("Unable to remove configuration for tab: "+n.errorMessage)})},t.prototype.saveButtonClicked=function(){var t=this;this.startScenarioMarker(),this.saveFooterButton="",this.footerMessage="",this.saveFooterButton=this.isInline?this.$translate.instant(this.resources.strings.extension_tabInlineConfig_button_text):this.$translate.instant(this.resources.strings.extension_saveButtonText),this.footerMessage=this.$translate.instantWithoutEncoding(this.resources.strings.extension_savingConfigurationFooterMessage,{tabName:this.decodedName});var e=this.$translate.instantWithoutEncoding(this.resources.strings.extension_unableToSaveConfigurationFooterMessage,{tabName:this.decodedName});this.$q(function(e,n){if(t.settingsContext.form.$valid){if(t.dialogContext){t.dialogContext.isBusy=!0,t.dialogContext.footerButtons[t.buttonIndex].text=t.saveFooterButton;for(var a=0;a<t.dialogContext.footerButtons.length;a++)t.dialogContext.footerButtons[a].disabled=!0;t.dialogContext.footerMessageType=teamspace.components.DialogContextMessageType.Info,t.dialogContext.footerMessage=t.footerMessage}e()}else t.cancelScenarioMarker(),n()}).then(function(){if(t.settingsContext.extensionFunctions.onSave)return t.settingsContext.extensionFunctions.onSave().catch(function(n){return e=n,t.cancelScenarioMarker(),t.$q.reject(n)})}).then(function(){!t.instance.id&&t.dialogContext.hideTabName?(t.settingsContext.settings.name&&(t.decodedName=decodeURIComponent(t.settingsContext.settings.name),t.instance.name=encodeURIComponent(t.decodedName)),t.instance.name=t.utilityService.getNextUniqueName(t.instance.name,t.tabService.getExistingTabNames(t.instance.id))):t.instance.name=encodeURIComponent(t.decodedName),t.instance.settings.name&&delete t.instance.settings.name,t.logTelemetryForCreateTab()}).then(function(){return t.save()}).then(function(e){t.tabExtensionObject=e,t.stopScenarioMarker(),t.onConfigSucceeded()}).catch(function(n){"duplicateId"==n.type?(e=t.$translate.instant(t.resources.strings.extension_tabURLDuplicateErrorMessage),t.cancelScenarioMarker()):"invalidid"==n.type&&(e=t.$translate.instant(t.resources.strings.extension_tabInvalidEntityErrorMessage),t.cancelScenarioMarker()),t.failScenarioMarker("Unable to save configuration for tab: "+n.errorMessage||JSON.stringify(n)),t.onConfigFailed(e,t.dialogContext.operationType)}).finally(function(){t.onConfigCompleted()})},t.prototype.validatedTextBox=function(t){t&&(t=encodeURIComponent(t).toLowerCase());var e=this.existingTabNames||{};return e.splice?e.indexOf(t)<0:!e[t]},t.prototype.generateCreateConversationTrackConstants=function(){return{trackScenario:this.isChat?teamspace.components.PanelActionScenario.tabPostToChat:teamspace.components.PanelActionScenario.tabPostToChannel,trackScenarioType:teamspace.components.PanelActionScenarioType.tabMgmt,trackName:this.isChat?teamspace.components.PanelModuleName.tabPostToChat:teamspace.components.PanelModuleName.tabPostToChannel,trackType:teamspace.components.PanelModuleType.submit,trackOutcome:teamspace.components.PanelActionOutcome.select,trackSummary:this.isChat?"Post to chat about tab":"Post to channel about tab",trackData:{tabType:this.definition.id,definitionId:this.definition.id,definitionName:this.definition.name,value:!this.createConversation}}},t.prototype.startScenarioMarker=function(){this.scenarioEvent&&(this.saveExtensionInstanceCounter=this.loggingService.newScenario(this.scenarioEvent),this.tabService.setEventDataParams(this.saveExtensionInstanceCounter,this.tabExtensionObject,this.threadId))},t.prototype.cancelScenarioMarker=function(){this.saveExtensionInstanceCounter&&(this.saveExtensionInstanceCounter.cancel(),this.saveExtensionInstanceCounter=null)},t.prototype.failScenarioMarker=function(t){this.saveExtensionInstanceCounter&&(this.saveExtensionInstanceCounter.fail({errorInfo:this.saveExtensionInstanceCounter.name+"_"+t,errorInfo1:this.saveExtensionInstanceCounter.name+"_"+t}),this.saveExtensionInstanceCounter=null)},t.prototype.stopScenarioMarker=function(){this.saveExtensionInstanceCounter&&(this.saveExtensionInstanceCounter.stop(),this.saveExtensionInstanceCounter=null)},t.prototype.logTelemetryForCreateTab=function(){var t={action:{scenario:teamspace.shared.AttributeHelper.tryGetEnum(this.biScenarioName.toString(),teamspace.components.PanelActionScenario,this.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.tabMgmt.toString(),teamspace.components.PanelActionScenarioType,this.loggingService),gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.components.PanelActionOutcome.submit,workLoad:this.isChat?teamspace.components.WorkLoad.chatContent:teamspace.components.WorkLoad.channelContent,subWorkLoad:this.isChat?teamspace.components.SubWorkLoad.chatTabManagement:teamspace.components.SubWorkLoad.addTab},module:{name:this.enableEnhancedTelemetry?teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.tabSave]:teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.tabSaveClick],type:this.enableEnhancedTelemetry?teamspace.components.PanelModuleType.tabSaveButton:teamspace.components.PanelModuleType.openDialog,typeNew:teamspace.components.PanelModuleType.tabSaveButton,summary:"Save Tab Button"},app:{id:this.tabExtensionObject.definitionId,scope:this.biScenarioScope,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs,capabilityId:this.instance&&this.instance.settings?this.instance.settings.entityId:"",externalId:this.tabExtensionObject.externalId},tab:{id:this.tabExtensionObject.id,type:this.tabService.getTabTypeBITelemetry(this.tabExtensionObject)},dataBag:{directive:this.tabExtensionObject.directive,isInlineConfig:this.isInline,appName:this.isChat?"chat":"teams",channelState:this.channelState}};this.analyticsService.onPanelAction(this.$scope,t)},t.prototype.logTelemetryForRemoveTab=function(){var t={action:{scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.removeTab.toString(),teamspace.components.PanelActionScenario,this.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.tabMgmt.toString(),teamspace.components.PanelActionScenarioType,this.loggingService),gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.components.PanelActionOutcome.submit},module:{name:teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.tabRemoveClick],type:teamspace.components.PanelModuleType.openDialog,summary:"Remove Tab Button"},app:{id:this.tabExtensionObject.definitionId,scope:this.biScenarioScope,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs,capabilityId:this.instance&&this.instance.settings?this.instance.settings.entityId:"",externalId:this.tabExtensionObject.externalId},tab:{id:this.tabExtensionObject.id,type:this.tabService.getTabTypeBITelemetry(this.tabExtensionObject)},dataBag:{directive:this.tabExtensionObject.directive}};this.analyticsService.onPanelAction(this.$scope,t)},t.prototype.logTelemetryForBackButton=function(){var t={action:{scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.backToTabGallery.toString(),teamspace.components.PanelActionScenario,this.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.tabMgmt.toString(),teamspace.components.PanelActionScenarioType,this.loggingService),gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.components.PanelActionOutcome.submit,workLoad:this.isChat?teamspace.components.WorkLoad.chatContent:teamspace.components.WorkLoad.channelContent,subWorkLoad:this.isChat?teamspace.components.SubWorkLoad.chatTabManagement:teamspace.components.SubWorkLoad.addTab},module:{name:this.enableEnhancedTelemetry?teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.tabSaveCancel]:teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.tabBackButtonClick],type:this.enableEnhancedTelemetry?teamspace.components.PanelModuleType.tabBackButton:teamspace.components.PanelModuleType.nav,typeNew:teamspace.components.PanelModuleType.tabBackButton,summary:"Back Button to Tab Gallery"},dataBag:{appName:this.isChat?"chat":"teams"}};this.analyticsService.onPanelAction(this.$scope,t)},t}();e.TabInstanceConfigurationController=r,angular.module("teamspace.tabInstanceConfiguration",[]).run(["$templateCache",function(t){t.put("components/tabs/tab-instance-configuration/tab-instance-configuration.html",a),t.put("components/tabs/tab-instance-configuration/tab-instance-configuration-v2.html",i)}]).directive("tabInstanceConfiguration",function(){return{bindToController:{definition:"=?ticTabDefinition",dialogContext:"=?ticDialogContext",instance:"=?ticTabInstance",threadId:"=?ticThreadId",isInline:"=?ticIsInline",backToTabGallery:"=?ticBackToTabGallery"},controller:r,controllerAs:"ticc",templateUrl:"components/tabs/tab-instance-configuration/tab-instance-configuration.html",replace:!0,restrict:"E",scope:{}}}).directive("tabInstanceConfigurationV2",function(){return{bindToController:{definition:"=?ticTabDefinition",dialogContext:"=?ticDialogContext",instance:"=?ticTabInstance",threadId:"=?ticThreadId",isInline:"=?ticIsInline",backToTabGallery:"=?ticBackToTabGallery"},controller:r,controllerAs:"ticc",templateUrl:"components/tabs/tab-instance-configuration/tab-instance-configuration-v2.html",replace:!0,restrict:"E",scope:{}}}).directive("notMatch",["$q",function(t){return{restrict:"A",require:"ngModel",link:function(t,e,n,a){a.$validators.notMatch=function(e,n){return t.ticc.validatedTextBox(n)}}}}])},2510:function(t,e){t.exports='<form novalidate name="ticc.settingsContext.form" class="ts-tab-instance-config" ng-submit="ticc.invokeDefaultButton()" role="form">\n\n  \x3c!-- Tab definition Header info--\x3e\n  <section class="ts-tab-instance-configuration-header-v1" ng-if="!ticc.dialogContext.hideHeader && ticc.tabHeaderSectionEnable">\n    <div class="ts-tab-definition">\n      <div class="ts-tab-definition-icon">\n        <ng-include src="::ticc.definition.galleryIcon" ng-if="::ticc.isSvg"></ng-include>\n        <img role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:ticc.definition.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:ticc.definition.name})}}" class="image-icon" ng-src="{{ticc.definition.galleryIcon}}" ng-style="{ \'background\': ticc.definition.accentColor }" ng-if="::!ticc.isSvg"/>\n      </div>\n      <div class="ts-tab-definition-info">\n        <div class="ts-tab-definition-summary" id="tab-definition-summary">{{::ticc.definition.descriptionLong}}</div>\n        <div class="ts-tab-definition-summary">\n          <a ng-if="::(ticc.definition.developerWebsite && ticc.definition.developerWebsite.length != 0)" ng-href="{{::ticc.definition.developerWebsite}}" rel="noopener noreferrer" target="_blank" translate-once="{{::$root.resources.strings.extension_tabLearnMoreLabel}}"></a>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  \x3c!-- Tab instance Tab name configuration --\x3e\n  <section ng-if="!ticc.dialogContext.hideTabName && ticc.tabNameSectionEnable" ng-class="{\'error\': ticc.settingsContext.form.tabName.$error.required || ticc.settingsContext.form.tabName.$error.notMatch}">\n    <div class="form-field-title">\n      <div for="ticc.settingsContext.form.tabName" translate-once="{{::$root.resources.strings.extension_tabNameLabel}}"></div>\n      <div class="form-field-error" aria-live="assertive" role="alert">\n        <span ng-if="ticc.settingsContext.form.tabName.$error.required" translate-once="{{::$root.resources.strings.extension_tabNameRequiredErrorMessage}}"></span>\n        <span ng-if="ticc.settingsContext.form.tabName.$error.notMatch" translate-once="{{::$root.resources.strings.extension_tabAlreadyExistsErrorMessage}}"></span>\n        &nbsp;\n      </div>\n    </div>\n    <div class="form-field-input">\n      <input sanitized type="text" name="tabName" class="form-control" maxlength="127" required not-match="::ticc.existingTabNames" ng-model="ticc.decodedName" ng-init="ticc.decodedName = ticc.decodeDisplayName(ticc.instance.name)" ng-model-options="{updateOn: \'default blur\', debounce: {default: 500, blur: 0}}" acc-role="focus-default" set-focus="true" data-tid="tabName" aria-label="{{::$root.resources.strings.extension_tabNameLabel|translate}}"/>\n      <div class="form-field-indicator" ng-if="ticc.settingsContext.form.tabName.$dirty">\n        <busy-animation ng-if="ticc.settingsContext.form.tabName.$pending" size="small" context="validate-new-channel-name"></busy-animation>\n        <ng-include ng-if="ticc.settingsContext.form.tabName.$invalid" class="icons-input-invalid icon" src="\'svg/icons-input-invalid.html\'"></ng-include>\n        <ng-include ng-if="ticc.settingsContext.form.tabName.$valid" class="icons-input-valid icon" src="\'svg/icons-input-valid.html\'"></ng-include>\n      </div>\n    </div>\n  </section>\n\n  \x3c!-- Tab instance custom settings --\x3e\n  <section class="ts-tab-instance-custom-settings" ng-if="ticc.customSettingsSectionEnable">\n    <div ts-load-directive directive="::ticc.settingsDirective" directive-flex-fill="true" context="::ticc.settingsContext"></div>\n  </section>\n\n  \x3c!-- Enable conversation checkbox --\x3e\n  <section class="ts-tab-instance-configuration" ng-if="ticc.showCreateConversation && ticc.checkboxSectionEnable">\n    <div class="form-field-title-text">\n      <label>\n        <input ng-disabled="ticc.disableCreateConversation" class="app-checkbox" type="checkbox" ng-model="ticc.createConversation" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.tabPostToChannel}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.tabMgmt}}" track-name="{{::$root.trackConstants.trackModuleName.tabPostToChannel}}" track-type="{{::$root.trackConstants.trackType.submit}}" track-data="{tabType: \'{{::ticc.definition.id}}\', definitionId: \'{{::ticc.definition.id}}\', definitionName: \'{{::ticc.definition.name}}\', value: \'{{ticc.createConversation}}\' }" track-summary="Post to channel about tab" ng-click=""/>\n        <ng-include class="icons-checkbox-common icons-checkbox-unselected" src="\'svg/icons-checkbox-unselected.html\'"></ng-include>\n        <ng-include class="icons-checkbox-common icons-checkbox-selected" src="\'svg/icons-checkbox-selected.html\'"></ng-include>\n        {{($root.resources.strings.extensibility_tab_enable_conversation|translate)}}\n      </label>\n    </div>\n  </section>\n</form>'},2511:function(t,e){t.exports='<form novalidate name="ticc.settingsContext.form" class="ts-tab-instance-config-v2" ng-submit="ticc.invokeDefaultButton()" role="form">\n\n  \x3c!-- Tab definition Header info--\x3e\n  <section class="ts-tab-instance-configuration-header" ng-if="!ticc.dialogContext.hideHeader && ticc.tabHeaderSectionEnable">\n    <div class="ts-tab-definition">\n      <div class="ts-tab-definition-icon">\n        <ng-include src="::ticc.definition.galleryIcon" ng-if="::ticc.isSvg"></ng-include>\n        <img class="image-icon" role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:ticc.definition.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:ticc.definition.name})}}" ng-src="{{ticc.definition.galleryIcon}}" ng-style="{ \'background\': ticc.definition.accentColor }" ng-if="::!ticc.isSvg"/>\n      </div>\n      <div class="ts-tab-definition-info">\n        <div class="ts-tab-configuration-title" id="tab-definition-summary" title="{{::ticc.dialogContext.title}}">{{::ticc.dialogContext.title}}</div>\n      </div>\n    </div>\n  </section>\n\n  \x3c!-- Tab Title info either show title or Header info--\x3e\n  <section class="ts-tab-instance-configuration-title" ng-if="ticc.dialogContext.hideHeader || !ticc.tabHeaderSectionEnable">\n    <div class="ts-tab-configuration-title" title="{{::ticc.dialogContext.title}}">{{::ticc.dialogContext.title}}</div>\n  </section>\n\n  \x3c!-- Tab instance Tab name configuration --\x3e\n  <section ng-if="!ticc.dialogContext.hideTabName && ticc.tabNameSectionEnable" ng-class="{\'error\': ticc.settingsContext.form.tabName.$error.required || ticc.settingsContext.form.tabName.$error.notMatch}">\n    <div class="form-field-title">\n      <div for="ticc.settingsContext.form.tabName" translate-once="{{::$root.resources.strings.extension_tabNameLabel}}"></div>\n      <div class="form-field-error" aria-live="assertive" role="alert">\n        <span ng-if="ticc.settingsContext.form.tabName.$error.required" translate-once="{{::$root.resources.strings.extension_tabNameRequiredErrorMessage}}"></span>\n        <span ng-if="ticc.settingsContext.form.tabName.$error.notMatch" translate-once="{{::$root.resources.strings.extension_tabAlreadyExistsErrorMessage}}"></span>\n        &nbsp;\n      </div>\n    </div>\n    <div class="form-field-input">\n      <input sanitized type="text" name="tabName" class="form-control" maxlength="127" required not-match="::ticc.existingTabNames" ng-model="ticc.decodedName" ng-init="ticc.decodedName = ticc.decodeDisplayName(ticc.instance.name)" ng-model-options="{updateOn: \'default blur\', debounce: {default: 500, blur: 0}}" acc-role="focus-default" set-focus="true" data-tid="tabName" aria-label="{{::$root.resources.strings.extension_tabNameLabel|translate}}"/>\n      <div class="form-field-indicator" ng-if="ticc.settingsContext.form.tabName.$dirty">\n        <busy-animation ng-if="ticc.settingsContext.form.tabName.$pending" size="small" context="validate-new-channel-name"></busy-animation>\n        <ng-include ng-if="ticc.settingsContext.form.tabName.$invalid" class="icons-input-invalid icon" src="\'svg/icons-input-invalid.html\'"></ng-include>\n        <ng-include ng-if="ticc.settingsContext.form.tabName.$valid" class="icons-input-valid icon" src="\'svg/icons-input-valid.html\'"></ng-include>\n      </div>\n    </div>\n  </section>\n\n  \x3c!-- Tab instance custom settings --\x3e\n  <section class="ts-tab-instance-custom-settings" ng-if="ticc.customSettingsSectionEnable" ng-class="{\'ts-tab-instance-custom-settings-with-error\': ticc.dialogContext.footerMessage}">\n    <div ts-load-directive directive="::ticc.settingsDirective" directive-flex-fill="true" context="::ticc.settingsContext"></div>\n  </section>\n\n  <div ng-if="ticc.dialogContext.footerMessage">\n    <div class="ts-tab-configuration-footerMessage" title="{{ticc.dialogContext.footerMessage}}" ng-bind="ticc.dialogContext.footerMessage" aria-live="assertive" role="alert" ng-class="{\'ts-tab-configuration-footerMessage-error\': ticc.isFooterMessageError()}"></div>\n  </div>\n\n  \x3c!-- Tab instance custom Footer --\x3e\n  <section class="ts-tab-instance-configuration ts-tab-instance-configuration-footer" ng-class="{\'ts-tab-instance-configuration-footer-with-error\': ticc.dialogContext.footerMessage}">\n    \x3c!-- Enable conversation checkbox --\x3e\n    <div class="form-field-title-text ts-tab-instance-configuration-footer-checkbox-section" ng-if="ticc.showCreateConversation && ticc.checkboxSectionEnable">\n      <teams-checkbox is-disabled="ticc.disableCreateConversation" label-text="{{::ticc.createConversationLabel}}" narrator-text="{{::ticc.createConversationLabel}}" ng-model="ticc.createConversation" prefix-data-tid="tabInstanceConfiguartion-createConversation" generate-track-constants-function="ticc.generateCreateConversationTrackConstants()">\n      </teams-checkbox>\n    </div>\n    <div class="ts-tab-instance-configuration-footer-button-section">\n      <div class="ts-modal-button-div" ng-if="ticc.dialogContext && ticc.dialogContext.footerButtons && ticc.dialogContext.footerButtons.length" ng-repeat="btn in ticc.dialogContext.footerButtons">\n        <button class="ts-btn ts-btn-fluent" id="tabRemoveBtn" ng-class="{\'ts-btn-fluent-secondary\': btn.secondaryStyle,\n                           \'ts-btn-fluent-primary\': !btn.secondaryStyle,\n                           \'dark-mode\': darkMode}" ng-click="btn.btnType === \'submit\' || btn.func()" type="{{::btn.btnType || \'submit\'}}" track-click-silent="true" ng-disabled="!!btn.disabled" ng-bind="btn.text" aria-label="{{btn.ariaLabel || btn.text}}" ng-attr-acc-focus-default="{{::btn.isFocusDefault}}" data-tid="{{btn.tid}}" role="button">\n        </button>\n      </div>\n    </div>\n  </section>\n</form>'},2512:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2513),i=function(){function t(t,e,n,a,i,o,s){if(this.$scope=t,this.ngDialog=e,this.utilityService=o,this.$translate=s,this.context={},this.root=this.$scope.$root,this.operationType=0,this.tabDefinition=t.ngDialogData.tabDefinition,this.tabInstance=t.ngDialogData.tabInstance,this.threadId=t.ngDialogData.threadId,this.operationType=t.ngDialogData.operationType,this.backToTabGallery=t.ngDialogData.backToTabGallery,this.cloneTabId=t.ngDialogData.tabId,this.tabDefinition){var r=i.valueFor(n.settings.names.newTabConfigOptOutApps);this.isNewConfigEnabled=!(r&&-1!==r.indexOf(this.tabDefinition.id))}else this.isNewConfigEnabled=!1;this.context.title=this.updateDialogTitle(),this.context.operationType=this.operationType,this.context.tabId=this.cloneTabId,a.$on(t,n.events.extensibility.finishConfiguration,function(){return t.closeThisDialog()})}return t.$inject=["$scope","ngDialog","constants","eventingService","settingsService","utilityService","$translate"],t.prototype.showTabPermission=function(){this.ngDialog.open({template:"components/tabs/tabs-gallery/tabs-permission-dialog.html",className:"ts-modal-dialog custom-width",closeByEscape:!0,closeByDocument:!0,disableAnimation:!1,overlay:!0,data:{definition:this.tabDefinition,isTabPermissionDialog:!0}})},t.prototype.updateDialogTitle=function(){var t,e="";switch(this.operationType){case teamspace.components.DialogTabMenuOperationType.AddTabSettings:t=this.$translate.instant(this.root.resources.strings.extension_newTabDialogHeader);break;case teamspace.components.DialogTabMenuOperationType.UpdateTabSettings:t=this.$translate.instant(this.root.resources.strings.extension_editTabDialogHeader);break;case teamspace.components.DialogTabMenuOperationType.RenameTabName:t=this.getDialogTitle(this.$translate.instant(this.root.resources.strings.extension_renameTabDialogHeader));break;case teamspace.components.DialogTabMenuOperationType.RemoveTabSettings:t=this.getDialogTitle(this.$translate.instant(this.root.resources.strings.extension_removeTabDialogHeader));break;default:t=this.$translate.instant(this.root.resources.strings.extension_newTabDialogHeader)}return e=t,this.operationType!==teamspace.components.DialogTabMenuOperationType.RenameTabName&&this.operationType!==teamspace.components.DialogTabMenuOperationType.RemoveTabSettings&&(e=this.tabDefinition.name?this.tabDefinition.name:t),e},t.prototype.getDialogTitle=function(t){var e="";return this.tabInstance&&this.tabInstance.name&&(e=decodeURIComponent(this.tabInstance.name)),this.utilityService.format(t,e)},t}();e.TabInstanceConfigurationDialogController=i,angular.module("teamspace.tabInstanceConfigurationDialog",["teamspace.constants","teamspace.dialogService","teamspace.eventingService","teamspace.modalDialog"]).run(["constants","dialogService","$templateCache",function(t,e,n){n.put("components/tabs/tab-instance-configuration-dialog/tab-instance-configuration-dialog.html",a),e.register(t.lazyDialogs.tabInstanceConfiguration,{className:"ts-modal-dialog custom-width ts-tab-instance-configuration-dialog",closeByEscape:!0,closeByDocument:!0,disableAnimation:!1,template:"components/tabs/tab-instance-configuration-dialog/tab-instance-configuration-dialog.html",ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title",ariaDescribedById:"tab-definition-summary"})}]).controller("TabInstanceConfigurationDialogController",i)},2513:function(t,e){t.exports='<div ng-controller="TabInstanceConfigurationDialogController as ticdc" data-tid="tab-instance-config-dialog" aria-modal="true" role="dialog" acc-role="dialog" aria-label="{{ticdc.context.title}}">\n  <div class="ts-tab-instance-config-dialog-content" ng-class="::{\'ts-tab-instance-config-v2-dialog-content\': ticdc.isNewConfigEnabled}">\n    <modal-dialog hide-header="true" dialog-title="{{ticdc.context.title}}" footer-buttons="ticdc.context.footerButtons" footer-message="ticdc.context.footerMessage" suppress-default-button="true" suppress-default-footer="::ticdc.isNewConfigEnabled" add-close-icon="false" dialog-busy="ticdc.context.isBusy" aria-label="{{ticdc.context.title}}" track-panel-type="{{$root.trackConstants.panelType.tabInstanceConfigurationDialog}}">\n\n      \x3c!-- Custom dialog header--\x3e\n      <div class="ts-modal-dialog-header">\n\n        \x3c!-- About link --\x3e\n        <a class="ts-tab-definition-about" ng-click="ticdc.showTabPermission()" href="javascript:void(0)" translate-once="{{::$root.resources.strings.extension_aboutLinkLabel}}">\n        </a>\n\n        \x3c!-- Close button --\x3e\n        <div class="close-container app-icons-fill-hover">\n          <button class="btn btn-default icons-close ngdialog-close inset-border inset-border-round inset-border-themed app-icons-fill-hover" role="button" data-tid="closeModelDialogBtn" title="{{::$root.resources.strings.modal_dialog_close_button|translate}}" track-outcome="{{::$root.trackConstants.trackOutcome.dismiss}}" track-summary="Close" ng-click="closeFunction()">\n          </button>\n          <ng-include class="icon icons-close modal-dialog-close" ng-class="{\'icons-close-disabled\': ticdc.context.isBusy}" role="presentation" src="\'svg/icons-close.html\'">\n          </ng-include>\n        </div>\n\n        \x3c!-- Title --\x3e\n        <h1 class="app-font-family-base ts-modal-dialog-title" ng-if="!!ticdc.context.title" ng-hide="{{::ticdc.isNewConfigEnabled}}" ng-bind="ticdc.context.title" id="modalDialog-title">\n        </h1>\n      </div>\n\n      \x3c!-- Tab config dialog v1 --\x3e\n      <tab-instance-configuration ng-if="::!ticdc.isNewConfigEnabled" tic-thread-id="::ticdc.threadId" tic-tab-definition="::ticdc.tabDefinition" tic-tab-instance="::ticdc.tabInstance" tic-back-to-tab-gallery="::ticdc.backToTabGallery" tic-dialog-context="::ticdc.context">\n      </tab-instance-configuration>\n\n      \x3c!-- Tab config dialog v2 --\x3e\n      <tab-instance-configuration-v2 ng-if="::ticdc.isNewConfigEnabled" tic-thread-id="::ticdc.threadId" tic-tab-definition="::ticdc.tabDefinition" tic-tab-instance="::ticdc.tabInstance" tic-back-to-tab-gallery="::ticdc.backToTabGallery" tic-dialog-context="::ticdc.context">\n      </tab-instance-configuration-v2>\n    </modal-dialog>\n  </div>\n</div>'},2514:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2515),i=n(2516),o=function(){function t(t,e,n,a,i,o){this.constants=t,this.ngDialog=e,this.$cookies=n,this.extensionDefinitionService=a,this.loggingService=i,this.utilityService=o,this.isLoading=!0,this.panelRegions=teamspace.PanelRegion,this.getExtensionGalleryItems()}return t.$inject=["constants","ngDialog","$cookies","extensionDefinitionService","loggingService","utilityService"],t.prototype.setHoveredExtension=function(t){this.hoveredExtention=t},t.prototype.getExtensionAccentColor=function(t){if(!t.accentColor)return null;if(t===this.hoveredExtention){var e=parseInt(t.accentColor.slice(1),16),n={r:e>>16,g:e>>8&255,b:255&e},a=this.rgbToHsl(n);a.l-=.07,a.l<0&&(a.l=0);var i=function(t){var e=Math.round(t).toString(16);return 1===e.length&&(e="0"+e),e};return"#"+i((n=this.hslToRgb(a)).r)+i(n.g)+i(n.b)}return t.accentColor},t.prototype.rgbToHsl=function(t){var e,n,a=t.r/255,i=t.g/255,o=t.b/255,s=Math.max(a,i,o),r=Math.min(a,i,o),c=(s+r)/2;if(s==r)e=n=0;else{var l=s-r;switch(n=c>.5?l/(2-s-r):l/(s+r),s){case a:e=(i-o)/l+(i<o?6:0);break;case i:e=(o-a)/l+2;break;case o:e=(a-i)/l+4}e/=6}return{h:e,s:n,l:c}},t.prototype.hslToRgb=function(t){var e,n,a,i=t.h,o=t.s,s=t.l;if(0==o)e=n=a=s;else{var r=function(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t},c=s<.5?s*(1+o):s+o-s*o,l=2*s-c;e=r(l,c,i+1/3),n=r(l,c,i),a=r(l,c,i-1/3)}return{r:Math.round(255*e),g:Math.round(255*n),b:Math.round(255*a)}},t.prototype.getExtensionGalleryItems=function(){var t=this;this.isLoading=!0,this.loadExtensionsGalleryCounter=this.loggingService.newScenario(this.constants.scenarios.extensibility.tabs.gallery.view),this.extensionDefinitionService.getExtensionGalleryItems().then(function(e){t.extensionDefinitions=e.filter(function(e){return e.type==teamspace.middletier.ExtensionType[teamspace.middletier.ExtensionType.Tab]&&-1!==e.scope.indexOf(t.extensionContext)&&!e.isDeprecated})}).finally(function(){t.isLoading=!1,t.loadExtensionsGalleryCounter.stop()})},t.prototype.addTabInstance=function(t){var e=this;this.extensionDefinitionService.getExtensionDefinition(t.id).then(function(t){e.configureTabInstance(t,new teamspace.services.ExtensionInstanceViewModel(t,e.constants))})},t.prototype.hoverTabInstance=function(t){this.onHoverTabInstance(t)},t.prototype.showTabPermission=function(e){var n=this;this.extensionDefinitionService.getExtensionDefinition(e.id).then(function(a){n.ngDialog.openConfirm({template:"components/tabs/tabs-gallery/tabs-permission-dialog.html",className:"ts-modal-dialog custom-width",closeByEscape:!0,closeByDocument:!0,disableAnimation:!1,overlay:!0,data:{definition:a}}).then(function(){var i=new Date(Date.now()+t.tabPermissionDialogNotRequiredExpiration);n.$cookies.put(n.getCookieNameFromDefinitionId(a.id),"donotshow",{expires:i.toUTCString()}),n.addTabInstance(e)})})},t.prototype.addTabInstanceOrShowTabPermission=function(t){var e=this;this.extensionDefinitionService.getExtensionDefinition(t.id).then(function(n){n.permissionLevel==teamspace.middletier.ExtensionPermissionLevel.Full?e.addTabInstance(t):e.$cookies.get(e.getCookieNameFromDefinitionId(n.id))?e.addTabInstance(t):e.showTabPermission(t)})},t.prototype.getCookieNameFromDefinitionId=function(e){return t.tabPermissionDialogNotRequiredCookieName+e},t.tabPermissionDialogNotRequiredCookieName="showTabPermissionDialog",t.tabPermissionDialogNotRequiredExpiration=6048e5,t}();e.TabsGalleryController=o,angular.module("teamspace.tabsGallery",["teamspace.constants","teamspace.extensionDefinitionService"]).directive("tabsGallery",function(){return{restrict:"E",scope:{},bindToController:{configureTabInstance:"=?tgConfigureTabInstance",onHoverTabInstance:"=?tgOnHoverTab",extensionContext:"=?tgExtensionContext"},templateUrl:"components/tabs/tabs-gallery/tabs-gallery.html",replace:!0,controller:o,controllerAs:"tgc"}}).run(["$templateCache",function(t){t.put("components/tabs/tabs-gallery/tabs-gallery.html",a),t.put("components/tabs/tabs-gallery/tabs-permission-dialog.html",i)}])},2515:function(t,e){t.exports='<div class="ts-tabs-gallery">\n  \x3c!-- Loading Indicator --\x3e\n  <div ng-if="tgc.isLoading" class="ts-loading-indicator">\n    <busy-animation size="medium" context="tabs-gallery"></busy-animation>\n  </div>\n\n  \x3c!-- Loading Indicator --\x3e\n  <div ng-if="!tgc.isLoading && !tgc.extensionDefinitions.length" class="ts-error-message">\n    <div>Unable to load Tabs. Please contact admin if this issue is persisted.</div>\n  </div>\n\n  \x3c!-- Gallery Items --\x3e\n  <div ng-if="tgc.extensionDefinitions.length" class="ts-tab-definitions-container" simple-scrollbar>\n    <ul class="ts-tab-definitions-list" acc-role="listgrid-horizontal-and-vertical" role="menu">\n      <li class="ts-tab-definition" ng-repeat="definition in tgc.extensionDefinitions | orderBy:[\'galleryOrder\',\'name\'] track by definition.id" ng-if="definition.status == \'Active\'" ng-click="tgc.addTabInstanceOrShowTabPermission(definition)" ng-mouseenter="tgc.hoverTabInstance(definition.description)" ng-mouseleave="tgc.hoverTabInstance(\'\')" ng-focus="tgc.hoverTabInstance(definition.description)" ng-blur="tgc.hoverTabInstance(\'\')" data-tid="tabs-gallery-add-{{::definition.name}}" set-focus="{{$first ? true : false}}" acc-role="listgrid-item focus-default" role="menuitem" tabindex="{{$first ? 0 : -1}}" aria-label="{{::definition.name}}" aria-describedby="tabs-gallery-description-{{::definition.id}}" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}" track-scenario="{{::$root.trackConstants.trackScenario.tabsShowConfigDialog}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.tabMgmt}}" track-name="{{::$root.trackConstants.trackModuleName.tabGalleryIconClick}}" track-type="{{::$root.trackConstants.trackType.nav}}" track-data="{tabType: \'{{::definition.id}}\', definitionId: \'{{::definition.id}}\', definitionName: \'{{::definition.name}}\'}" track-summary="Click Tab Gallery Icon">\n        <div class="ts-tab-definition-icon" ng-if="tgc.utilityService.useNgIncludeForIcon(definition.icon)">\n          <ng-include src="definition.icon"></ng-include>\n        </div>\n        <div class="ts-tab-definition-icon image-container" ng-if="!tgc.utilityService.useNgIncludeForIcon(definition.icon)">\n          <span ng-style="{ \'background\': tgc.getExtensionAccentColor(definition) }" ng-mouseenter="tgc.setHoveredExtension(definition)" ng-mouseleave="tgc.setHoveredExtension(null)">\n            <img class="image-icon" ng-src="{{definition.icon}}">\n          </span>\n        </div>\n        <div class="ts-tab-definition-info">\n          <span class="ts-tab-definition-name" ng-bind="::definition.name" title="{{::definition.name}}" id="tabs-gallery-name-{{::definition.id}}"></span>\n          <span class="ts-tab-definition-description" ng-bind="::definition.description" title="{{::definition.description}}" id="tabs-gallery-description-{{::definition.id}}"></span>\n        </div>\n      </li>\n    </ul>\n    <div class="more-indicator-top"></div>\n    <div class="more-indicator-bottom"></div>\n  </div>\n</div>\n'},2516:function(t,e){t.exports='<div class="ts-modal-dialog-container ts-tab-permission-dialog-container">\n  <div class="ts-modal-dialog-header">\n    <div class="close-container app-icons-fill-hover" ng-if="ngDialogData.isTabPermissionDialog">\n      <button class="btn btn-default icons-close ngdialog-close inset-border inset-border-round inset-border-themed app-icons-fill-hover" role="button" ng-disabled="dialogBusy" data-tid="closeModelDialogBtn" aria-label="{{::$root.resources.strings.modal_dialog_close_button|translate}}" title="{{::$root.resources.strings.modal_dialog_close_button|translate}}">\n      </button>\n      <ng-include ng-class="{\'icons-close-disabled\': dialogBusy}" class="icon icons-close modal-dialog-close" src="\'svg/icons-close.html\'"></ng-include>\n    </div>\n    <h1 class="app-font-family-base ts-modal-dialog-title" ng-bind="ngDialogData.definition.name"></h1>\n  </div>\n\n  <div class="ts-modal-dialog-content">\n    <form novalidate class="ts-tab-permission-dialog" role="form">\n      <section class="tab-permission-dialog-header">\n        <div class="ts-tab-definition">\n          <div class="ts-tab-definition-icon">\n            <ng-include src="::ngDialogData.definition.galleryIcon" ng-if="!ngDialogData.definition.galleryIcon.startsWith(\'data:\') && !ngDialogData.definition.galleryIcon.startsWith(\'https:\')"></ng-include>\n            <img class="image-icon" ng-src="{{ngDialogData.definition.galleryIcon}}" ng-style="{ \'background\': ngDialogData.definition.accentColor }" ng-if="ngDialogData.definition.galleryIcon.startsWith(\'data:\') || ngDialogData.definition.galleryIcon.startsWith(\'https:\')"/>\n          </div>\n          <div class="ts-tab-definition-info">\n            <div class="ts-tab-definition-summary" ng-bind="ngDialogData.definition.descriptionLong" title="{{::ngDialogData.definition.descriptionLong}}"></div>\n            <div class="ts-tab-definition-summary">\n              <a ng-if="!ngDialogData.definition.isThirdPartyTab && ngDialogData.definition.developerWebsite && ngDialogData.definition.developerWebsite.length != 0" ng-href="{{::ngDialogData.definition.developerWebsite}}" rel="noopener noreferrer" target="_blank" ng-bind="ngDialogData.definition.model.developer"></a>\n              <span ng-if="ngDialogData.definition.isThirdPartyTab && ngDialogData.definition.developerWebsite && ngDialogData.definition.developerWebsite.length != 0" translate-with-html-params translate-id="extension_thirdPartyTabDeveloperLabel" translate-values=\'{"developerName": "<a ng-href=\\"{{ngDialogData.definition.developerWebsite}}\\" rel="noopener noreferrer" target=\\"_blank\\"><span ng-bind=\\"ngDialogData.definition.model.developer\\"></span></a>"}\'></span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      \x3c!-- Tab instance identity information session --\x3e\n      <section ng-if="ngDialogData.definition.permissionLevel && ngDialogData.definition.permissionLevel == 1">\n        <span translate-with-html-params translate-id="extension_tabNeedsIdentityInformationLabel" translate-values=\'{"tabName": "<span ng-bind=\\"ngDialogData.definition.name\\"></span>"}\' style="font-weight: bold;"></span>\n        <div translate-once="{{::$root.resources.strings.extension_tabIdentityInformationText}}"></div>\n      </section>\n\n      \x3c!-- Tab instance privacy statement and terms of use --\x3e\n      <section ng-if="!ngDialogData.definition.isThirdPartyTab && ngDialogData.definition.privacyUrl && ngDialogData.definition.termsOfUseUrl">\n        <div translate-with-html-params translate-id="extension_tabPrivacyMessage" translate-values=\'{"licenseTerms": "<a ng-href=\\"{{ngDialogData.definition.termsOfUseUrl}}\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\"><span translate-once=\\"{{::$root.resources.strings.extension_tabLicenseTerms}}\\"></span></a>",\n            "privacyStatement": "<a ng-href=\\"{{ngDialogData.definition.privacyUrl}}\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\"><span translate-once=\\"{{::$root.resources.strings.extension_tabPrivacyStatement}}\\"></span></a>"}\'></div>\n      </section>\n\n      \x3c!-- Tab instance privacy message for the 3rd party tabs we build --\x3e\n      <section ng-if="ngDialogData.definition.isThirdPartyTab">\n        <div translate-with-html-params translate-id="extension_thirdPartyTabPrivacyMessage" translate-values=\'{"developerName": "<a ng-href=\\"{{ngDialogData.definition.developerWebsite}}\\" target=\\"_blank\\"><span ng-bind=\\"ngDialogData.definition.model.developer\\"></span></a>"}\'></div>\n      </section>\n    </form>\n  </div>\n\n  <div class="ts-modal-dialog-footer" ng-if="!suppressDefaultFooter">\n    <div class="ts-modal-dialog-footer-buttons" ng-if="!ngDialogData.isTabPermissionDialog">\n      <button class="ts-btn ts-btn-secondary ngdialog-close" translate-once="{{::$root.resources.strings.extension_backButtonText}}" data-tid="closeModelDialogBtn"></button>\n      <button ng-click="confirm(confirmValue)" id="confirmButton" class="ts-btn ts-btn-primary" data-tid="tidConfirmButton" acc-role="focus-default" translate-once="{{::$root.resources.strings.extension_acceptButtonText}}"></button>\n    </div>\n  </div>\n</div>'},2517:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2518),i=function(){function t(t,e,n,a,i,o,s,r,c,l,d,g,p,u,b,h,m,f){var v=this;this.$q=t,this.$scope=e,this.$state=n,this.constants=a,this.$translate=i,this.resources=o,this.dialogService=s,this.extensionDefinitionService=c,this.navigationService=l,this.appsService=g,this.ariaLiveService=m,this.utilityService=f,this.searchString="",this.isLoading=!0,this.logger=r.newLogger("TabsGalleryDialog");var y=r.newScenario(a.scenarios.extensibility.tabs.gallery.view);this.enableSideloadedAppsInGroupChat=u.valueAsBoolean(a.settings.names.enableSideloadedAppsInGroupChat),this.enableInstallChatAppsFromStore=u.valueAsBoolean(a.settings.names.enableInstallChatAppsFromStore),this.enablePrivateChannelDisabledScopesFilter=u.valueAsBoolean(a.settings.names.enablePrivateChannelDisabledScopesFilter),this.privateChannelAuthorizedApps=u.valueFor(a.settings.names.privateChannelAuthorizedApps),this.tabSortingRule=u.valueFor(a.settings.names.tabSortingRule),this.threadId=e.ngDialogData.threadId;var x=d.getConversation(this.threadId);x&&x.isChannelConversation()?(this.scope=a.extensibility.teamContextName,this.channel=p.getChannelByObjectId(this.threadId),this.isPrivateChannel=this.channel&&this.channel.channelType===teamspace.services.ChannelType.Private,this.isSharedChannel=this.channel&&this.channel.channelType===teamspace.services.ChannelType.Shared,this.headerMessage=i.instant(this.isPrivateChannel?o.strings.extension_tabsGallery_messageHeader_private_channel:this.isSharedChannel?o.strings.extension_tabsGallery_messageHeader_shared_channel:o.strings.extension_tabsGallery_messageHeader_channel),this.teamId=this.channel&&this.channel.parentTeamId||x.getTeamId(),this.canInstallApps=b.isAdmin(this.teamId)||h.canAddApp(this.teamId),this.installedAppsHeaderMessage=i.instant(this.isPrivateChannel?o.strings.extension_tabsGallery_installedAppsPrivateChannelHeader:this.isSharedChannel?o.strings.extension_tabsGallery_installedAppsSharedChannelHeader:o.strings.extension_tabsGallery_installedAppsHeader)):(this.enableSideloadedAppsInGroupChat?this.scope=a.extensibility.groupChatContextName:this.scope=x&&x.isOneOnOne()?a.extensibility.oneOnOneContextName:a.extensibility.groupChatContextName,this.chatId=x&&x.id,this.headerMessage=i.instant(o.strings.extension_tabsGallery_messageHeader_chat),this.installedAppsHeaderMessage=i.instant(o.strings.extension_tabsGallery_installedAppsHeaderForChat),this.canInstallApps=!0,this.showManageApps=this.chatId&&this.enableInstallChatAppsFromStore&&g.isAppsDiscoveryEnabled()),this.moreAppsLabel=this.teamId&&!this.isPrivateChannel&&!this.isSharedChannel&&g.isAppsDiscoveryEnabled()?i.instant(o.strings.extensibility_more_apps):"",this.populateApps().then(function(){v.enableSideloadedAppsInGroupChat&&v.chatId?g.safeSubscribe(e,function(){return v.populateApps()},teamspace.services.AppsServiceEvents.GroupChatDefinitionsChanged,v.chatId):g.safeSubscribe(e,function(){return v.populateApps()},v.teamId?teamspace.services.AppsServiceEvents.TeamDefinitionsChanged:teamspace.services.AppsServiceEvents.UserDefinitionsChanged,v.teamId),y.stop()}).catch(function(t){y.fail({errorInfo:t,errorInfo1:t})}).finally(function(){v.isLoading=!1})}return t.$inject=["$q","$scope","$state","constants","$translate","resources","dialogService","loggingService","extensionDefinitionService","navigationService","conversationsService","appsService","channelService","settingsService","teamMembershipPropertiesService","teamSettingsService","ariaLiveService","utilityService"],t.prototype.filterBySearch=function(){var t=this.searchString.toLowerCase();this.filteredInstalledApps=this.filterByName(this.installedApps,t),this.filteredNotInstalledApps=this.filterByName(this.notInstalledApps,t),this.announceSearchResultsChanged(this.filteredInstalledApps.length+this.filteredNotInstalledApps.length)},t.prototype.manageApps=function(){this.navigationService.navigateToManageAppsInChat(this.chatId,"chat-apps-list"),this.$scope.closeThisDialog()},t.prototype.clearSearch=function(){this.searchString="",this.filterBySearch(),$(".tabs-gallery-search input").focus()},t.prototype.openTabConfigurationDialog=function(t){var e=this,n=this.logger.service.newScenario(this.constants.scenarios.extensibility.tabs.gallery.openTabConfigurationDialog);this.extensionDefinitionService.getExtensionDefinition(t).then(function(t){var a=new teamspace.services.ExtensionInstanceViewModel(t,e.constants);e.$scope.closeThisDialog(),e.dialogService.openLazyDialog(e.constants.lazyDialogs.tabInstanceConfiguration,e.constants.lazyModules.extensibilityTabs,{tabDefinition:t,tabInstance:a,threadId:e.threadId,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings,backToTabGallery:!0}),n.stop()}).catch(function(t){n.fail({errorInfo:t,errorInfo1:t})})},t.prototype.openInstallAppDialog=function(t){var e=this,n=this.logger.service.newScenario(this.constants.scenarios.extensibility.tabs.gallery.openInstallAppDialog),a={appID:t,installOptionFlags:this.enableSideloadedAppsInGroupChat&&this.chatId?teamspace.components.AddAppDialogInstallOptionFlag.GroupChat:teamspace.components.AddAppDialogInstallOptionFlag.Team,intent:this.enableSideloadedAppsInGroupChat&&this.chatId?teamspace.components.AddAppDialogIntent.GroupChat:this.teamId?teamspace.components.AddAppDialogIntent.Team:teamspace.components.AddAppDialogIntent.User,teamId:this.teamId,channelId:this.channel?this.channel.objectId:void 0,chatId:this.enableSideloadedAppsInGroupChat?this.chatId:void 0,skipInstalledSuccess:!0,source:"tabs-gallery-dialog"};this.dialogService.openLazyDialog(this.constants.lazyDialogs.addAppNew,this.constants.lazyModules.extensibilityDialogs,a,function(t){t&&t.installSucceeded&&e.openTabConfigurationDialog(t.appId),e.dialogService.registerCloseCallback(e.constants.lazyDialogs.addAppNew,null)}),n.stop()},t.prototype.openAppStoreInTabs=function(){var t=this.logger.service.newScenario(this.constants.scenarios.extensibility.tabs.framework.openAppGalleryScenario),e={intent:teamspace.components.AddAppDialogIntent.Team,category:teamspace.services.AppsServiceCategoryFilter.Tabs,autoNavigationOnDone:!0,storeLaunchFromChat:!1,preselectTeam:this.teamId,threadId:this.channel.objectId};this.$state.go(this.constants.states.appApps,e).catch(function(n){t.fail({source:"tabs-gallery-dialog",params:JSON.stringify(e),error:n})}).finally(function(){t.stop()}),this.$scope.closeThisDialog()},t.prototype.announceSearchResultsChanged=function(t){var e="";e=t<=0?this.$translate.instant(this.resources.strings.extensibility_tabs_list_search_result_update_no_match):1==t?this.$translate.instant(this.resources.strings.extensibility_tabs_list_search_result_update_1_match):this.$translate.instant(this.resources.strings.extensibility_tabs_list_search_result_update_multiple_matches,{num:t}),this.ariaLiveService.update(e)},t.prototype.populateApps=function(){var t,e=this,n={category:teamspace.services.AppsServiceCategoryFilter.Tabs};t=this.teamId?this.appsService.getInstalledAppsForTeam(this.teamId,n,"tabs-gallery-dialog::populateApps"):this.enableSideloadedAppsInGroupChat&&this.chatId?this.appsService.getInstalledAppsForGroupChat(this.chatId,n):this.appsService.getInstalledAppsForUser(n);var a=this.canInstallApps?this.teamId?this.appsService.getTeamAppDefinitions(this.teamId,"tabs-gallery-dialog",n,!0):this.appsService.getUserAppDefinitions("tabs-gallery-dialog",n,!0):this.$q.resolve([]);this.enableSideloadedAppsInGroupChat&&this.chatId&&(a=this.appsService.getGroupChatAppDefinitions(this.chatId,"tabs-gallery-dialog",n));var i=this.tabSortingRule===this.constants.extensibility.apps.appRanking.appSortingRuleInstall?this.appsService.getAppStoreRankMap():this.$q.resolve({});return this.$q.all([t,a,i]).then(function(t){var n=t[0],a=t[1],i=t[2];e.installedApps=[],e.notInstalledApps=[],e.appRankMap=i,n.forEach(function(t){if(e.isPrivateChannel||e.isSharedChannel)if(e.enablePrivateChannelDisabledScopesFilter){if(t.appDefinition.disabledScopes&&t.appDefinition.disabledScopes.includes("PrivateChannel"))return}else if(!e.privateChannelAuthorizedApps.includes(t.appDefinition.id.toLowerCase()))return;t.appDefinition.galleryTabs.some(function(t){return t.scopes.some(function(t){return t.toLowerCase()===e.scope.toLowerCase()})})&&teamspace.services.AppsServiceUtils.isAppInstalled(t)&&e.installedApps.push({id:t.appDefinition.id,name:t.appDefinition.name,nameLowerCase:t.appDefinition.name.toLowerCase(),description:t.appDefinition.shortDescription,icon:t.appDefinition.largeImageUrl,accentColor:t.appDefinition.accentColor})}),_.isEmpty(a)||_.differenceWith(a,e.installedApps,function(t,e){return t.id===e.id}).forEach(function(t){e.isPrivateChannel||e.isSharedChannel||t.galleryTabs.some(function(t){return t.scopes.some(function(t){return t.toLowerCase()===e.scope.toLowerCase()})})&&(t.state&&t.state===e.constants.extensibility.apps.appStates.installedAndDeprecated||e.notInstalledApps.push({id:t.id,name:t.name,nameLowerCase:t.name.toLowerCase(),description:t.shortDescription,icon:t.largeImageUrl,accentColor:t.accentColor}))}),e.installedApps.sort(e.sortByName);var o=e.tabSortingRule===e.constants.extensibility.apps.appRanking.appSortingRuleInstall?e.sortByInstall:e.sortByName;e.notInstalledApps.sort(o.bind(e)),e.filteredInstalledApps=e.installedApps,e.filteredNotInstalledApps=e.notInstalledApps})},t.prototype.sortByInstall=function(t,e){var n=(this.appRankMap[e.id]?this.appRankMap[e.id].installRank:0)-(this.appRankMap[t.id]?this.appRankMap[t.id].installRank:0);return 0===n?this.sortByName(t,e):n},t.prototype.sortByName=function(t,e){return t.name.toLocaleUpperCase()<e.name.toLocaleUpperCase()?-1:1},t.prototype.filterByName=function(t,e){return e?t.filter(function(t){return t.nameLowerCase.contains(e)}):t},t}();e.TabsGalleryDialogController=i,angular.module("teamspace.tabsGalleryDialog",[]).run(["constants","dialogService","$templateCache",function(t,e,n){n.put("components/tabs/tabs-gallery-dialog/tabs-gallery-dialog.html",a),e.register(t.lazyDialogs.tabsGallery,{template:"components/tabs/tabs-gallery-dialog/tabs-gallery-dialog.html",className:"ts-modal-dialog tabs-gallery-dialog",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title",ariaDescribedBySelector:".tabs-gallery-dialog-header-text"})}]).controller("TabsGalleryDialogController",i)},2518:function(t,e){t.exports='<div class="tabs-gallery-dialog-container" ng-controller="TabsGalleryDialogController as tgdc" acc-role="dialog">\n  <modal-dialog dialog-title="{{::$root.resources.strings.extension_addTabDialogHeader | translate}}" add-close-icon="true" dialog-busy="tgdc.isLoading" suppress-default-button="true" suppress-default-footer="true" data-tid="tabsGalleryDialog" track-panel-type="{{$root.trackConstants.panelType.addTabDialog}}" skip-auto-focus="true" aria-label="{{::$root.resources.strings.extension_addTabDialogHeader | translate}}">\n\n    <div class="tabs-gallery-header">\n      <div class="tabs-gallery-header-message" ng-bind="tgdc.headerMessage"></div>\n\n      \x3c!-- Search --\x3e\n      <div class="tabs-gallery-search">\n        <input sanitized ng-model="tgdc.searchString" placeholder="{{::$root.resources.strings.search_placeholderText | translate}}" autocapitalize="off" aria-label="{{::$root.resources.strings.search_placeholderText | translate}}" autocorrect="off" autocomplete="off" maxlength="750" tabindex="0" acc-role="focus-default" ng-change="tgdc.filterBySearch()">\n        <ng-include class="search-box-icon" ng-if="!tgdc.searchString" src="\'svg/icons-search.html\'"></ng-include>\n        <button class="search-box-icon ts-btn app-icons-fill-hover app-icons-fill-focus" ng-if="tgdc.searchString" ng-click="tgdc.clearSearch()" aria-label="{{ ::$root.resources.strings.search_filterClearText | translate}}">\n          <ng-include class="icon" src="\'svg/icons-close.html\'" role="presentation"></ng-include>\n        </button>\n      </div>\n    </div>\n\n    <div class="tabs-gallery-scroll-parent">\n      <div class="tabs-gallery-scroll-container" simple-scrollbar>\n        <div>\n          \x3c!-- This extra div is needed since simple-scrollbar uses the first child only for height calculations --\x3e\n\n          \x3c!-- Loading Indicator --\x3e\n          <div class="tabs-gallery-spinner">\n            <busy-animation ng-if="tgdc.isLoading" size="large"></busy-animation>\n          </div>\n\n          \x3c!-- Installed Apps --\x3e\n          <div ng-if="tgdc.filteredInstalledApps.length > 0">\n            <label class="tabs-gallery-list-title" ng-bind="::tgdc.installedAppsHeaderMessage"></label>\n            <ul aria-label="{{::tgdc.installedAppsHeaderMessage}}" acc-role="listgrid-horizontal-and-vertical" role="menu" class="tabs-gallery-apps-container" data-tid="tabs-gallery-installed-apps" ng-if="tgdc.filteredInstalledApps.length > 0">\n              <li ng-repeat="app in tgdc.filteredInstalledApps track by app.id" ng-click="tgdc.openTabConfigurationDialog(app.id)" data-tid="tabs-gallery-app-{{::app.name}}" acc-role="listgrid-item focus-default" role="menuitem" aria-label="{{::app.name}}" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}" track-scenario="{{::$root.trackConstants.trackScenario.tabsShowConfigDialog}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.tabMgmt}}" track-name="{{::$root.trackConstants.trackModuleName.tabGalleryIconClick}}" track-type="{{::$root.trackConstants.trackType.nav}}" track-data="{tabType: \'{{::app.id}}\', definitionId: \'{{::app.id}}\', definitionName: \'{{::app.name}}\'}" track-summary="Click Tab Gallery Icon">\n                <div class="tab-icon" title="{{::app.description}}" ng-style="{ \'background\': app.accentColor }">\n                  <ng-include src="app.icon" ng-if="::tgdc.utilityService.useNgIncludeForIcon(app.icon)"></ng-include>\n                  <img role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:app.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:app.name})}}" ng-src="{{::app.icon}}" ng-if="::!tgdc.utilityService.useNgIncludeForIcon(app.icon)"/>\n                  <div class="tab-icon-mask"></div>\n                </div>\n                <div ng-bind="::app.name" dir="auto" title="{{::app.name}}" id="tabs-gallery-name-{{::app.id}}" class="tab-name"></div>\n              </li>\n            </ul>\n          </div>\n\n          \x3c!-- Not Installed Apps --\x3e\n          <div ng-if="tgdc.filteredNotInstalledApps.length > 0">\n            <label class="tabs-gallery-list-title" translate-once="{{::$root.resources.strings.extension_tabsGallery_notInstalledAppsHeader}}"></label>\n            <ul aria-label="{{::$root.resources.strings.extension_tabsGallery_notInstalledAppsHeader | translate}}" acc-role="listgrid-horizontal-and-vertical" role="menu" class="tabs-gallery-apps-container" data-tid="tabs-gallery-notinstalled-apps" ng-if="tgdc.filteredNotInstalledApps.length > 0">\n              <li ng-repeat="app in tgdc.filteredNotInstalledApps track by app.id" ng-click="tgdc.openInstallAppDialog(app.id)" data-tid="tabs-gallery-app-{{::app.name}}" acc-role="listgrid-item focus-default" role="menuitem" aria-label="{{::app.name}}">\n                <div class="tab-icon" title="{{::app.description}}" ng-style="{ \'background\': app.accentColor }">\n                  <ng-include src="app.icon" ng-if="::tgdc.utilityService.useNgIncludeForIcon(app.icon)"></ng-include>\n                  <img role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:app.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:app.name})}}" ng-src="{{::app.icon}}" ng-if="::!tgdc.utilityService.useNgIncludeForIcon(app.icon)"/>\n                  <div class="tab-icon-mask"></div>\n                </div>\n                <div ng-bind="::app.name" dir="auto" title="{{::app.name}}" id="tabs-gallery-name-{{::app.id}}" class="tab-name"></div>\n              </li>\n            </ul>\n          </div>\n          <div ng-if="tgdc.searchString && tgdc.filteredInstalledApps.length === 0 && tgdc.filteredNotInstalledApps.length === 0" translate-with-html-params translate-id="extension_tabsGallery_noSearchResults" translate-values=\'{"searchString": "{{tgdc.searchString}}"}\'></div>\n\n        </div>\n        <div class="more-indicator-top"></div>\n        <div class="more-indicator-bottom"></div>\n      </div>\n    </div>\n\n    <div class="ts-modal-dialog-footer" ng-if="!tgdc.showManageApps && !tgdc.moreAppsLabel"></div>\n\n    <div class="ts-modal-dialog-footer tabs-gallery-ftr" ng-if="tgdc.showManageApps || tgdc.moreAppsLabel">\n      <div class="ts-modal-dialog-footer-buttons app-store-button" ng-if="tgdc.moreAppsLabel">\n        <button class="ts-btn ts-btn-fluent ts-btn-fluent-secondary ts-btn-fluent-with-icon" track-name="{{::$root.trackConstants.trackModuleName.tabGalleryGoToStoreButtonClick}}" track-summary="Tabs gallery - Store" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}" track-scenario="{{::$root.trackConstants.trackScenario.navAppStore}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.nav}}" track-type="{{::$root.trackConstants.trackType.nav}}" ng-click="tgdc.openAppStoreInTabs()">\n          <ng-include src="\'svg/icons-apps.html\'" class="ts-app-store-btn-icon"></ng-include>\n          <span ng-bind="tgdc.moreAppsLabel"></span>\n        </button>\n      </div>\n      <div class="ts-modal-dialog-footer-buttons manage-apps-button" ng-if="tgdc.showManageApps">\n        <button class="ts-sym tabs-gallery-ftr-button" ng-click="tgdc.manageApps()">\n          <ng-include src="\'svg/icons-settings.html\'"></ng-include>\n          <span class="tabs-gallery-ftr-button-text" ng-bind="::$root.resources.strings.chat_manage_apps | translate"></span>\n        </button>\n      </div>\n    </div>\n  </modal-dialog>\n</div>'}},[2502]);