webpackJsonp([59],{2555:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(2556)},2556:function(e,t,n){"use strict";var i=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),s=this&&this.__assign||function(){return(s=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++){t=arguments[n];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var r="MonetizationService",a=function(e){function t(t,n,i,s,a,o,c,l,g,u,p){var h=e.call(this,c)||this;h.$rootScope=t,h.authenticationService=n,h.constants=i,h.loggingService=a,h.analyticsService=o,h.orchestrationService=c,h.settingsService=l,h.utilityService=g,h.monetizationDatabase=u,h.$q=p,h.logger=a.newLogger(r);var v=new teamspace.services.DataManagerOptions(i.urls.monetizationService.assets.type,function(e){return"assets"});v.useTeamspaceTokens=!1,v.isTransient=!0,h.assetListDataManager=s.registerManager(v);var f=new teamspace.services.DataManagerOptions(i.urls.monetizationService.offers.type,function(e){return"offer"});f.useTeamspaceTokens=!1,f.isTransient=!0,h.offerDataManager=s.registerManager(f);var m=new teamspace.services.DataManagerOptions(i.urls.monetizationService.saasState.type,function(e){return e.setupUrlWithToken});m.useTeamspaceTokens=!1,m.isTransient=!0,h.saasStateDataManager=s.registerManager(m);var S=new teamspace.services.DataManagerOptions(i.urls.monetizationService.billingRegion.type,function(e){return"billingRegion"});S.useTeamspaceTokens=!1,S.isTransient=!0,h.billingRegionDataManager=s.registerManager(S);var d=new teamspace.services.DataManagerOptions(i.urls.monetizationService.supportedBillingRegions.type,function(e){return"countries"});d.useTeamspaceTokens=!1,d.isTransient=!0,h.supportedBillingRegionsDataManager=s.registerManager(d);var y=new teamspace.services.DataManagerOptions(i.urls.monetizationService.settings.type,function(e){return"settings"});return y.useTeamspaceTokens=!1,y.isTransient=!1,h.settingsDataManager=s.registerManager(y),h.initializeOnAppLaunchAndReinit("launch"),h}return i(t,e),t.$inject=["$rootScope","authenticationService","constants","dataManagerService","loggingService","analyticsService","orchestrationService","settingsService","utilityService","monetizationDatabase","$q"],t.prototype.initializeOnAppLaunchAndReinit=function(e){this.logger.info("initializeOnAppLaunchAndReinit monetizationService: reason = {0}",e)},t.prototype.cleanupOnAppTeardown=function(e){this.logger.info("cleanupOnAppTeardown monetizationService: reason = {0}",e)},t.prototype.mtmaTelemetryIdentifier=function(){return r},t.prototype.getSupportedBillingRegions=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.supportBillingRegions);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);try{var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getSupportedBillingRegionsFromApi(n).then(function(n){if(!n)throw e.logger.info("Empty response from getSupportedBillingRegionsFromApi request in monetizationService."),t.stop(),"empty response from Billing Regions API";return t.stop(),n})}catch(e){this.logger.info("Error occured at getSupportedBillingRegions in monetizationService. Error {0}",e);var i=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error2:i}),this.$q.resolve(null)}},t.prototype.getBillingRegion=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.billingRegion);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);try{var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getBillingRegionCache().then(function(i){return i?(t.appendEventData(s(s({},e.getBillingRegionEventData(i)),{source:e.constants.scenarios.extensibility.monetization.cache.billingRegion})),t.stop(),i):e.getBillingRegionFromApi(n).then(function(n){return t.appendEventData(s(s({},e.getBillingRegionEventData(n)),{source:e.constants.scenarios.extensibility.monetization.apis.billingRegion})),t.stop(),n})})}catch(e){this.logger.info("Error occured at getBillingRegion in monetizationService. Error {0}",e);var i=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error2:i}),this.$q.resolve(null)}},t.prototype.setBillingRegion=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.billingRegion);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);try{return this.putBillingRegionCache(e).then(function(){return n.stop(),t.refreshMonetizationCache()})}catch(e){this.logger.info("Error occured at setBillingRegion in monetizationService. Error {0}",e);var i=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error2:i}),this.$q.resolve(null)}},t.prototype.getAssets=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.assets);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getAssetsListCache(n).then(function(i){return i?(t.appendEventData(s(s({},e.getAssetsListEventData(i)),{source:e.constants.scenarios.extensibility.monetization.cache.assets})),t.stop(),i):e.getAssetsFromAPI(n).then(function(n){if(!n)throw"empty response from Assets API";return t.appendEventData(s(s({},e.getAssetsListEventData(n)),{source:e.constants.scenarios.extensibility.monetization.apis.assets})),t.stop(),n})}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),Promise.resolve(null)})},t.prototype.getOffer=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.offers);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var i=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getOfferFromAPI(e,i).then(function(e){return e&&n.appendEventData(s(s({},t.getOfferEventData(e)),{source:t.constants.scenarios.extensibility.monetization.apis.offers})),n.stop(),e}).catch(function(i){t.logger.info("Error occured at getOffer in monetizationService for offerId - {0}. Error {1}",e,i);var s=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(i));return n.fail({error2:s}),t.$q.resolve(null)})},t.prototype.getActiveSubscription=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.activeSubscription);return this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization)?this.getAssets().then(function(t){if(t&&t.length>0){var i=t.find(function(t){return t.saasProductId==e&&t.isActive});if(i)return n.stop(),i}return n.stop(),null}).catch(function(i){t.logger.info("Error occured at getActiveSubscription in monetizationService for offerId - {0}. Error {1}",e,i);var s=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(i));return n.fail({error2:s}),t.$q.resolve(null)}):(n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null))},t.prototype.getSaaSState=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.saaSState);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var i=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(i,n).then(function(n){var s={url:""+t.utilityService.combineUriComponents(i.endpointUri,i.assetSaaSStatePath).replace("${0}",e),method:"GET",timeout:i.assetSaaSStateHttpTimeoutSeconds*t.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return t.saasStateDataManager.invoke(s,n)}).then(function(e){if(!e)throw"empty response from SaaSState API";return n.appendEventData({configUrl:e.setupUrlWithToken}),n.stop(),e}).catch(function(i){var s=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(i));return t.logger.info("Error occured at getSaaSState in monetizationService for assetId - {0}. Error {1}",e,i),n.fail({error:s,error2:s}),Promise.resolve(null)})},t.prototype.refreshMonetizationCache=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.refreshCache);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getAssetsFromAPI(n).then(function(n){if(!n)throw"empty response from Assets API";var i={assets:n};return t.appendEventData(s(s({},i),{source:e.constants.scenarios.extensibility.monetization.cache.refreshCache})),t.stop(),i}).catch(function(n){var i=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(n));return e.logger.info("Error occured at refreshMonetizationCache in monetizationService. Error {0}",n),t.fail({error:i,error2:i}),Promise.resolve(null)})},t.prototype.sendUserBiTelemetryForMonetizationDialogs=function(e,t){var n={panel:{type:e,uri:void 0,uriParams:void 0,viewId:this.utilityService.generateUUID(),region:teamspace.PanelRegion[teamspace.PanelRegion.main],previousUri:void 0,previousUriParams:void 0},dataBag:t};this.analyticsService.sendPanelView(n)},t.prototype.getBillingRegionFromApi=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.billingRegion);return this.generateDataManagerRequestOptions(e,n).then(function(n){var i={url:""+t.utilityService.combineUriComponents(e.endpointUri,e.billingRegionPath),method:"GET",timeout:1e3*e.billingRegionHttpTimeoutSeconds,skipCommonHeaders:!0};return t.billingRegionDataManager.invoke(i,n)}).then(function(e){if(e){var i=JSON.stringify(e);n.appendEventData({responseData:i})}return n.stop(),t.putBillingRegionCache(e),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),null})},t.prototype.getSupportedBillingRegionsFromApi=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.supportBillingRegions);return this.generateDataManagerRequestOptions(e,n).then(function(n){var i={url:""+t.utilityService.combineUriComponents(e.endpointUri,e.supportedBillingRegionsPath),method:"GET",timeout:1e3*e.supportedBillingRegionsHttpTimeoutSeconds,skipCommonHeaders:!0};return t.supportedBillingRegionsDataManager.invoke(i,n)}).then(function(e){if(!e)throw"empty response from GetSupportedBillingRegions";return n.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),null})},t.prototype.getOfferFromAPI=function(e,t){var n=this,i=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.offers);return this.getBillingRegionCache().then(function(s){return n.generateDataManagerRequestOptions(t,i).then(function(i){var r=n.utilityService.combineUriComponents(t.endpointUri,t.offersPath,e);s&&(r=n.utilityService.appendQueryStringToUrl(r,t.billingRegionQueryString,s.country));var a={url:""+r,method:"GET",timeout:t.offersHttpTimeoutSeconds*n.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return n.offerDataManager.invoke(a,i)}).then(function(e){if(!e)throw"empty response from Offer";return i.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return i.fail({error:t,error2:t}),Promise.resolve(null)})})},t.prototype.getAssetsFromAPI=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.assets);return this.getBillingRegionCache().then(function(i){return t.generateDataManagerRequestOptions(e,n).then(function(n){var s=t.utilityService.combineUriComponents(e.endpointUri,e.assetsPath);i&&(s=t.utilityService.appendQueryStringToUrl(s,e.billingRegionQueryString,i.country));var r={url:""+s,method:"GET",timeout:e.assetsHttpTimeoutSeconds*t.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return t.assetListDataManager.invoke(r,n)}).then(function(e){if(!e)throw"empty response from Assets";return n.stop(),t.putAssetsListCache(e),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),Promise.resolve(null)})})},t.prototype.getSettings=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.settings);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(n,t).then(function(t){var i={url:""+e.utilityService.combineUriComponents(n.endpointUri,n.settingsPath),method:"GET",timeout:1e3*n.settingsHttpTimeoutSeconds,skipCommonHeaders:!0};return e.settingsDataManager.invoke(i,t)}).then(function(e){if(!e)return t.fail({reason:"Empty response from Monet Settings api"}),null;var n=JSON.stringify(e);return t.appendEventData({responseData:n}),t.stop(),e}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),null})},t.prototype.generateDataManagerRequestOptions=function(e,t){var n=e.resourceUri;return this.authenticationService.getAuthToken(n).then(function(e){var n=new teamspace.services.DataManagerRequestOptions;return n.skipApply=!0,n.scenario=t,n.additionalHeaders={Authorization:"Bearer "+e.token},n})},t.prototype.open=function(){return this.isOpen?SkypeX.Services.SyncTasks.Resolved():this.monetizationDatabase.open()},Object.defineProperty(t.prototype,"isOpen",{get:function(){return this.monetizationDatabase.isOpen},enumerable:!0,configurable:!0}),t.prototype.getHashCode=function(e){if(e)return this.utilityService.djb2_hash(JSON.stringify(e))},t.prototype.validateCacheDataIntegrity=function(e,t){return!(!e||!t)&&t===this.getHashCode(e)},t.prototype.isCacheExpired=function(e,t){return!e||Math.abs((new Date).getTime()-e.getTime())>t*this.constants.timeInMiliseconds.second},t.prototype.getBillingRegionCache=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.getBillingRegionIndexedDB);return this.open().then(function(){return t.appendEventData({event:e.constants.scenarios.extensibility.monetization.cache.openConnection}),e.monetizationDatabase.provider.openTransaction(e.monetizationDatabase.schema.stores.billing_region.name,!1,"monetizationClientCache:getCachedBillingRegion")}).then(function(n){return t.appendEventData({event:e.constants.scenarios.extensibility.monetization.cache.openTransaction}),n.store.openPrimaryKey().getAll()}).then(function(n){if(n&&n.length>0){var i=n[0];return i?i&&e.validateCacheDataIntegrity(i.billingRegion,i.hash)?(t.stop(s({},e.getBillingRegionEventData(i.billingRegion))),i.billingRegion):(t.fail({error:"Hash check mismatch",error2:"Hash check mismatch"}),null):(t.stop({message:"No Billing Region found in IndexedDB."}),null)}}).toNgPromise(this.$q).catch(function(e){var n=JSON.stringify(e);return t.fail({error:n,error2:n}),null})},t.prototype.putBillingRegionCache=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.setBillingRegionIndexedDB);if(e){var i=new Date,s={hash:this.getHashCode(e),insertedDate:i,billingRegion:e},r=this.$q.defer();return this.open().then(function(){return t.clearBillingRegionCache(n)}).then(function(){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.clearBillingRegion,step:"putBillingRegionCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.billing_region.name,!0,"monetizationClientCache:setCachedBillingRegion")}).then(function(e){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"putBillingRegionCache"}),e.store.put(s)}).then(function(){n.stop({message:"Saved Billing Region to IndexedDB"}),r.resolve()}).catch(function(e){var i=JSON.stringify(e);return t.logger.error("Failed to set Billing Region to IndexedDB. Error: "+i),n.fail({error:i,error2:i}),r.reject(),SkypeX.Services.SyncTasks.Rejected(i)}),r.promise}this.clearBillingRegionCache(n)},t.prototype.clearBillingRegionCache=function(e){var t=this;return this.open().then(function(){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection,step:"clearBillingRegionsCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.billing_region.name,!0,"monetizationClientCache:clearCachedBillingRegion")}).then(function(n){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"clearBillingRegionsCache"}),SkypeX.Services.SyncTasks.whenAll([n.store.clearAllData()])}).catch(function(n){var i=JSON.stringify(n);return t.logger.error("Failed to clear cached Billing Region from IndexedDB. Error: {0}",i),e.fail({error:i,error2:i}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.getAssetsListCache=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.getAssetsListIndexedDB);return this.open().then(function(){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_assets_list.name,!1,"monetizationClientCache:getCachedAssets")}).then(function(e){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction}),e.store.openPrimaryKey().getAll()}).then(function(i){if(i&&i.length>0){var r=i[0];return r?r&&t.validateCacheDataIntegrity(r.assets,r.hash)?t.isCacheExpired(r.insertedDate,e.maxProductsAssetsAgeSeconds)?null:(n.stop(s({},t.getAssetsListEventData(r.assets))),r.assets):(n.fail({error:"Hash check mismatch",error2:"Hash check mismatch"}),null):(n.stop({message:"No assets list found in IndexedDB."}),null)}}).toNgPromise(this.$q).catch(function(e){var i=JSON.stringify(e);return t.logger.error("Failed to get assets list from IndexedDb. Error: {0}",i),n.fail({error:i,error2:i}),null})},t.prototype.putAssetsListCache=function(e){var t=this,n=new Date,i={hash:this.getHashCode(e),insertedDate:n,assets:e},s=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.setAssetsListIndexedDB);return this.open().then(function(){return t.clearAssetsListCache(s)}).then(function(){return s.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.clearAssetsList,step:"putAssetsListCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_assets_list.name,!0,"monetizationClientCache:setCachedAssets")}).then(function(e){return s.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"putAssetsListCache"}),e.store.put(i)}).then(function(){s.stop({message:"Saved new assets list API response to IndexedDB"})}).catch(function(e){var n=JSON.stringify(e);return t.logger.error("Failed to set assets list to IndexedDB. Error: "+n),s.fail({error:n,error2:n}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.clearAssetsListCache=function(e){var t=this;return this.open().then(function(){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection,step:"clearAssetsListCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_assets_list.name,!0,"monetizationClientCache:clearCachedAssets")}).then(function(n){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"clearAssetsListCache"}),SkypeX.Services.SyncTasks.whenAll([n.store.clearAllData()])}).catch(function(n){var i=JSON.stringify(n);return t.logger.error("Failed to clear cached assets list from IndexedDB. Error: {0}",i),e.fail({error:i,error2:i}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.getAssetsListEventData=function(e){var t=this;if(e){var n=[];return e.forEach(function(e){n.push(t.getAssetEventData(e))}),n}},t.prototype.getAssetEventData=function(e){if(e)return{productId:e.saasBigCatalogId,purchaseStartDate:e.purchaseStartDate,licenseCount:e.licenseCount?e.licenseCount:0,isActive:!!e.isActive&&e.isActive}},t.prototype.getOfferEventData=function(e){if(e)return{appSourceLearnMoreUrl:e.appSourceLearnMoreUrl,appSourcePurchaseUrl:e.appSourcePurchaseUrl,isTrial:e.isTrial,monetPurchaseUrl:e.monetPurchaseUrl,planCount:e.plans?e.plans.length:0,saasBigCatalogId:e.saasBigCatalogId,saasProductId:e.saasProductId,saasProductName:e.saasProductName,saasProductPublisher:e.saasProductPublisher}},t.prototype.getBillingRegionEventData=function(e){if(e)return{country:e.country,countryName:e.countryName,language:e.language,culture:e.culture}},t}(teamspace.services.MTMABase);t.MonetizationService=a,angular.module("teamspace.monetizationService",["skypeX.myUserPreferencesStore","teamspace.appState","teamspace.authenticationService","teamspace.constants","teamspace.dataManagerService","teamspace.localizationService","teamspace.loggingService","teamspace.orchestrationService","teamspace.settingsService","teamspace.utilityService","skypeX.clientDatabase"]).service("monetizationService",a)}},[2555]);